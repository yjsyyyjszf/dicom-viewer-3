{"ast":null,"code":"var _jsxFileName = \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\src\\\\components\\\\Measurements.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MeasureItem from './MeasureItem';\n\nclass Measurements extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibleClearMeasureDlg: false\n    };\n\n    this.showClearMeasureDlg = () => {\n      this.setState({\n        visibleClearMeasureDlg: true\n      });\n    };\n\n    this.hideClearMeasureDlg = () => {\n      this.setState({\n        visibleClearMeasureDlg: false\n      });\n    };\n\n    this.confirmClearMeasureDlg = () => {\n      this.hideClearMeasureDlg();\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools');\n    };\n  }\n\n  render() {\n    //const classes = this.props.classes\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.measurements !== null ? this.props.measurements.map((item, index) => {\n      return React.createElement(MeasureItem, {\n        item: item,\n        index: index,\n        toolRemove: this.props.toolRemove,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }) : null), React.createElement(Dialog, {\n      open: this.state.visibleClearMeasureDlg,\n      onClose: this.hideClearMeasureDlg,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Are you sure to remove all the measurements?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hideClearMeasureDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.confirmClearMeasureDlg,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Ok\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    measurements: state.measurements\n  };\n};\n\nexport default connect(mapStateToProps)(Measurements);","map":{"version":3,"sources":["E:/private/projects/udv/u-dicom-viewer-master-1/u-dicom-viewer-master/src/components/Measurements.js"],"names":["React","PureComponent","connect","Button","Dialog","DialogActions","DialogTitle","MeasureItem","Measurements","state","visibleClearMeasureDlg","showClearMeasureDlg","setState","hideClearMeasureDlg","confirmClearMeasureDlg","dicomViewersRefs","props","activeDcmIndex","runTool","render","measurements","map","item","index","toolRemove","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BP,aAA3B,CAAyC;AAAA;AAAA;AAAA,SAEvCQ,KAFuC,GAE/B;AACNC,MAAAA,sBAAsB,EAAE;AADlB,KAF+B;;AAAA,SAMvCC,mBANuC,GAMjB,MAAM;AAC1B,WAAKC,QAAL,CAAc;AAAEF,QAAAA,sBAAsB,EAAE;AAA1B,OAAd;AACD,KARsC;;AAAA,SAUvCG,mBAVuC,GAUjB,MAAM;AACxB,WAAKD,QAAL,CAAc;AAAEF,QAAAA,sBAAsB,EAAE;AAA1B,OAAd;AACH,KAZsC;;AAAA,SAcvCI,sBAduC,GAcd,MAAM;AAC7B,WAAKD,mBAAL;AACA,WAAKE,gBAAL,CAAsB,KAAKC,KAAL,CAAWC,cAAjC,EAAiDC,OAAjD,CAAyD,aAAzD;AACD,KAjBsC;AAAA;;AAmBvCC,EAAAA,MAAM,GAAG;AACP;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKH,KAAL,CAAWI,YAAX,KAA4B,IAA5B,GACE,KAAKJ,KAAL,CAAWI,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,aAAO,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAED,IAAnB;AAAyB,QAAA,KAAK,EAAEC,KAAhC;AAAuC,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,UAA9D;AAA0E,QAAA,GAAG,EAAED,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,CADF,GAIE,IALN,CAFF,EAUE,oBAAC,MAAD;AACI,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,sBADrB;AAEI,MAAA,OAAO,EAAE,KAAKG,mBAFlB;AAGI,yBAAgB,oBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,8CAAtC,CALJ,EAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKA,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,sBAAtB;AAA8C,MAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CANJ,CAVF,CADF;AA6BD;;AAnDsC;;AAuDzC,MAAMW,eAAe,GAAIhB,KAAD,IAAW;AACjC,SAAO;AACLW,IAAAA,YAAY,EAAEX,KAAK,CAACW;AADf,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CAACuB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf","sourcesContent":["import React, { PureComponent } from 'react'\nimport {connect} from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MeasureItem from './MeasureItem'\n\nclass Measurements extends PureComponent {\n\n  state = { \n    visibleClearMeasureDlg: false,\n  }\n\n  showClearMeasureDlg = () => {\n    this.setState({ visibleClearMeasureDlg: true })\n  }\n\n  hideClearMeasureDlg = () => {\n      this.setState({ visibleClearMeasureDlg: false })\n  }\n\n  confirmClearMeasureDlg = () => {\n    this.hideClearMeasureDlg()\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools')\n  }\n\n  render() {   \n    //const classes = this.props.classes\n\n    return (\n      <div>\n\n        <div>\n          { this.props.measurements !== null ?\n              this.props.measurements.map((item, index) => {\n                  return <MeasureItem item={item} index={index} toolRemove={this.props.toolRemove} key={index} />\n              }) \n            : null }\n        </div>\n        \n        <Dialog\n            open={this.state.visibleClearMeasureDlg}\n            onClose={this.hideClearMeasureDlg}\n            aria-labelledby=\"alert-dialog-title\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to remove all the measurements?\"}</DialogTitle>\n            <DialogActions>\n                <Button onClick={this.hideClearMeasureDlg}>\n                    Cancel\n                </Button>\n                <Button onClick={this.confirmClearMeasureDlg} autoFocus>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    measurements: state.measurements,\n  }\n}\n\nexport default connect(mapStateToProps)(Measurements)\n"]},"metadata":{},"sourceType":"module"}