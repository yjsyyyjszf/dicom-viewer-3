{"ast":null,"code":"var _jsxFileName = \"/media/mohammad/work/websites/cornerstone/dicom-viewer/src/components/MeasureItem.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  listItemText: {\n    fontSize: '0.9em'\n  }\n});\n\nclass MeasureItem extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleDlgNote: false,\n      visibleDlgDelete: false\n    };\n\n    this.showDlgNote = () => {\n      this.setState({\n        visibleDlgNote: true\n      });\n    };\n\n    this.hideDlgNote = () => {\n      this.setState({\n        visibleDlgNote: false\n      });\n    };\n\n    this.showDlgDelete = () => {\n      this.setState({\n        visibleDlgDelete: true\n      });\n    };\n\n    this.hideDlgDelete = () => {\n      this.setState({\n        visibleDlgDelete: false\n      });\n    };\n\n    this.handleOnChangeNote = event => {\n      this.setState({\n        note: event.target.value\n      });\n    };\n\n    this.confirmNote = index => {\n      this.hideDlgNote();\n      this.props.measurements[index].note = this.noteField.value;\n    };\n\n    this.confirmDelete = index => {\n      this.hideDlgDelete();\n      this.props.toolRemove(index);\n    };\n\n    this.onEdit = () => {\n      this.showDlgNote();\n    };\n\n    this.onDelete = () => {\n      this.showDlgDelete();\n    };\n\n    this.noteField = React.createRef();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const item = this.props.item;\n    let index = this.props.index;\n    let pText = '';\n    let sText = ''; //console.log('item: ', item)\n\n    switch (item.tool) {\n      case 'Length':\n        pText = `${item.data.length.toFixed(2)} ${item.data.unit}`;\n        sText = item.note;\n        break;\n\n      case 'Angle':\n        pText = `${item.data.rAngle} Â°`;\n        sText = item.note;\n        break;\n\n      case 'EllipticalRoi':\n        pText = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \" A: \", item.data.cachedStats.area.toFixed(2), \" mm\\xB2 \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \" M: \", item.data.cachedStats.mean.toFixed(2), \" \", item.data.unit, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \" SD: \", item.data.cachedStats.stdDev.toFixed(2), \" \", item.data.unit, \" \"));\n        sText = item.note;\n        break;\n\n      case 'RectangleRoi':\n        pText = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \" A: \", item.data.cachedStats.area.toFixed(2), \" mm\\xB2 \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \" M: \", item.data.cachedStats.mean.toFixed(2), \" \", item.data.unit, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \" SD: \", item.data.cachedStats.stdDev.toFixed(2), \" \", item.data.unit, \" \"));\n        sText = item.note;\n        break;\n\n      case 'FreehandRoi':\n        //console.log('item: ', item.data.area)\n        //if (item.data.area !== undefined) {\n        pText = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \" A: \", item.data.area.toFixed(2), \" mm\\xB2 \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \" M: \", item.data.meanStdDev.mean.toFixed(2), \" \", item.data.unit, \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \" SD: \", item.data.meanStdDev.stdDev.toFixed(2), \" \", item.data.unit, \" \"));\n        sText = item.note; //}\n\n        break;\n\n      default:\n        break;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      classes: {\n        primary: classes.listItemText\n      },\n      primary: pText,\n      secondary: sText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"end\",\n      onClick: () => this.onEdit(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(CreateIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      edge: \"end\",\n      onClick: () => this.onDelete(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))), this.state.visibleDlgNote ? React.createElement(Dialog, {\n      open: this.state.visibleDlgNote,\n      onClose: this.hideDlgNote,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Note for measurement:\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      ref: \"noteField\",\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"note\",\n      fullWidth: true,\n      defaultValue: this.props.measurements[index].note,\n      inputRef: input => this.noteField = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hideDlgNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => this.confirmNote(index),\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Ok\"))) : null, React.createElement(Dialog, {\n      open: this.state.visibleDlgDelete,\n      onClose: this.hideDlgNote,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Are you sure to delete the measurement?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hideDlgDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => this.confirmDelete(index),\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Ok\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    measurements: state.measurements\n  };\n}; //export default connect(mapStateToProps, )(MeasureItem)\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(MeasureItem));","map":{"version":3,"sources":["/media/mohammad/work/websites/cornerstone/dicom-viewer/src/components/MeasureItem.js"],"names":["React","PureComponent","connect","Button","CreateIcon","DeleteIcon","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","ListItem","ListItemText","TextField","Toolbar","withStyles","styles","theme","listItemText","fontSize","MeasureItem","constructor","props","state","visibleDlgNote","visibleDlgDelete","showDlgNote","setState","hideDlgNote","showDlgDelete","hideDlgDelete","handleOnChangeNote","event","note","target","value","confirmNote","index","measurements","noteField","confirmDelete","toolRemove","onEdit","onDelete","createRef","render","classes","item","pText","sText","tool","data","length","toFixed","unit","rAngle","cachedStats","area","mean","stdDev","meanStdDev","primary","input","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport {connect} from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport CreateIcon from '@material-ui/icons/Create'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from '@material-ui/core/TextField'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    listItemText:{\n        fontSize:'0.9em',\n    }\n})\n\nclass MeasureItem extends PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.noteField = React.createRef()\n    \n      }\n\n    state = { \n        visibleDlgNote: false,\n        visibleDlgDelete: false,\n    }\n\n    showDlgNote = () => {\n        this.setState({ visibleDlgNote: true })\n    }\n    \n    hideDlgNote = () => {\n        this.setState({ visibleDlgNote: false })\n    }\n\n    showDlgDelete = () => {\n        this.setState({ visibleDlgDelete: true })\n    }\n    \n    hideDlgDelete = () => {\n        this.setState({ visibleDlgDelete: false })\n    }\n\n    handleOnChangeNote = event => {\n        this.setState({ note: event.target.value })\n    }\n\n    confirmNote = (index) => {\n        this.hideDlgNote()\n        this.props.measurements[index].note = this.noteField.value\n    }   \n\n    confirmDelete = (index) => {\n        this.hideDlgDelete()\n        this.props.toolRemove(index)\n    }\n\n    onEdit = () => {\n        this.showDlgNote()\n    }\n    \n    onDelete = () => {\n        this.showDlgDelete()\n    }\n    \n    render() {    \n        const { classes } = this.props\n\n        const item = this.props.item\n        let index = this.props.index\n        let pText = ''\n        let sText = ''\n        //console.log('item: ', item)\n        switch (item.tool) {\n            case 'Length':\n                pText = `${item.data.length.toFixed(2)} ${item.data.unit}`\n                sText = item.note\n                break\n            case 'Angle':\n                pText = `${item.data.rAngle} Â°`\n                sText = item.note\n                break\n            case 'EllipticalRoi':\n                pText = <div>\n                            <div> A: {item.data.cachedStats.area.toFixed(2)} mmÂ² </div>\n                            <div> M: {item.data.cachedStats.mean.toFixed(2)} {item.data.unit} </div>\n                            <div> SD: {item.data.cachedStats.stdDev.toFixed(2)} {item.data.unit} </div>\n                        </div>\n                sText = item.note            \n                break    \n            case 'RectangleRoi':\n                pText = <div>\n                            <div> A: {item.data.cachedStats.area.toFixed(2)} mmÂ² </div>\n                            <div> M: {item.data.cachedStats.mean.toFixed(2)} {item.data.unit} </div>\n                            <div> SD: {item.data.cachedStats.stdDev.toFixed(2)} {item.data.unit} </div>\n                        </div>\n                sText = item.note\n                break          \n            case 'FreehandRoi':\n                //console.log('item: ', item.data.area)\n                //if (item.data.area !== undefined) {\n                pText = <div>\n                            <div> A: {item.data.area.toFixed(2)} mmÂ² </div>\n                            <div> M: {item.data.meanStdDev.mean.toFixed(2)} {item.data.unit} </div>\n                            <div> SD: {item.data.meanStdDev.stdDev.toFixed(2)} {item.data.unit} </div>\n                        </div>\n                sText = item.note\n                //}\n                break                                  \n            default:\n                break    \n        }\n\n        return (\n            <div>\n                <ListItem>\n                    <ListItemText classes={{primary:classes.listItemText}} primary={pText} secondary={sText} />\n                    <Toolbar>\n                        <IconButton edge=\"end\" onClick={() => this.onEdit(index)}>\n                            <CreateIcon />\n                        </IconButton>\n                        <IconButton edge=\"end\" onClick={() => this.onDelete(index)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Toolbar>\n                </ListItem>\n                \n                { this.state.visibleDlgNote ?\n                    <Dialog\n                        open={this.state.visibleDlgNote}\n                        onClose={this.hideDlgNote}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"form-dialog-title\">{\"Note for measurement:\"}</DialogTitle>\n                        <DialogContent>\n                            <TextField\n                                ref=\"noteField\"\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"note\"\n                                fullWidth\n                                defaultValue={this.props.measurements[index].note}\n                                inputRef={input => (this.noteField = input)}\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.hideDlgNote} >\n                                Cancel\n                            </Button>\n                            <Button onClick={() => this.confirmNote(index)} autoFocus>\n                                Ok\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                : null }\n\n                <Dialog\n                    open={this.state.visibleDlgDelete}\n                    onClose={this.hideDlgNote}\n                    aria-labelledby=\"alert-dialog-title\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure to delete the measurement?\"}</DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.hideDlgDelete}>\n                            Cancel\n                        </Button>\n                        <Button onClick={() => this.confirmDelete(index)} autoFocus>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        measurements: state.measurements,\n    }\n}\n\n//export default connect(mapStateToProps, )(MeasureItem)\nexport default connect(mapStateToProps)(withStyles(styles)(MeasureItem))\n"]},"metadata":{},"sourceType":"module"}