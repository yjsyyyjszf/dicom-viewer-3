{"ast":null,"code":"import _objectSpread from \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\src\\\\components\\\\DicomHeader.js\";\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@mdi/react';\nimport IconButton from '@material-ui/core/IconButton';\nimport { SETTINGS_DCMHEADER } from '../constants/settings';\nimport { toCsv } from '../functions';\nimport { mdiContentSaveOutline } from '@mdi/js';\n\nconst DicomHeader = ({\n  dcmViewer,\n  classes,\n  color\n}) => {\n  let header = [];\n  header.push({\n    name: 'Transfer Syntax',\n    value: dcmViewer.getTransferSyntax()\n  });\n  header.push({\n    name: 'SOP Class',\n    value: dcmViewer.getSopClass()\n  });\n  header.push({\n    name: 'SOP Instance UID',\n    value: dcmViewer.getSopInstanceUID()\n  });\n  header.push({\n    name: 'Modality',\n    value: dcmViewer.image.data.string('x00080060')\n  });\n  header.push({\n    name: 'Manufacturer',\n    value: dcmViewer.image.data.string('x00080070')\n  });\n  header.push({\n    name: 'Study Description',\n    value: dcmViewer.image.data.string('x00081030')\n  });\n  header.push({\n    name: 'Series Description',\n    value: dcmViewer.image.data.string('x0008103E')\n  });\n  header.push({\n    name: 'Patient Name',\n    value: dcmViewer.image.data.string('x00100010')\n  });\n  header.push({\n    name: 'Frame Rate',\n    value: dcmViewer.image.data.string('x00082144')\n  });\n  header.push({\n    name: 'MR Acquisition Type',\n    value: dcmViewer.image.data.string('x00180023')\n  });\n  header.push({\n    name: 'Slice Thickness',\n    value: dcmViewer.image.data.string('x00180050')\n  });\n  header.push({\n    name: 'Spacing Between Slice',\n    value: dcmViewer.image.data.string('x00180088')\n  });\n  header.push({\n    name: 'Patient Position',\n    value: dcmViewer.image.data.string('x00185100')\n  });\n  header.push({\n    name: 'Study ID',\n    value: dcmViewer.image.data.string('x00200010')\n  });\n  header.push({\n    name: 'Series Number',\n    value: dcmViewer.image.data.string('x00200011')\n  });\n  header.push({\n    name: 'Acquisition Number',\n    value: dcmViewer.image.data.string('x00200012')\n  });\n  header.push({\n    name: 'Instance Number',\n    value: dcmViewer.image.data.string('x00200013')\n  });\n  header.push({\n    name: 'Image Position (Patient)',\n    value: dcmViewer.image.data.string('x00200032')\n  });\n  header.push({\n    name: 'Image Orientation (Patient)',\n    value: dcmViewer.image.data.string('x00200037')\n  });\n  header.push({\n    name: 'Images in Acquisition',\n    value: dcmViewer.image.data.string('x00201002')\n  });\n  header.push({\n    name: 'Slice Location',\n    value: dcmViewer.image.data.string('x00201041')\n  });\n  header.push({\n    name: 'Samples per Pixel',\n    value: dcmViewer.image.data.uint16('x00280002')\n  });\n  header.push({\n    name: 'Photometric Interpretation',\n    value: dcmViewer.image.data.string('x00280004')\n  });\n  header.push({\n    name: 'Number of Frames',\n    value: dcmViewer.image.data.string('x00280008')\n  });\n  header.push({\n    name: 'Planar Configuration',\n    value: dcmViewer.getPlanarConfiguration()\n  });\n  header.push({\n    name: 'Rows',\n    value: dcmViewer.image.data.uint16('x00280010')\n  });\n  header.push({\n    name: 'Columns',\n    value: dcmViewer.image.data.uint16('x00280011')\n  });\n  header.push({\n    name: 'Pixel Spacing',\n    value: dcmViewer.image.data.string('x00280030')\n  });\n  header.push({\n    name: 'Bits Allocated',\n    value: dcmViewer.image.data.uint16('x00280100')\n  });\n  header.push({\n    name: 'Bits Stored',\n    value: dcmViewer.image.data.uint16('x00280101')\n  });\n  header.push({\n    name: 'High Bit',\n    value: dcmViewer.image.data.uint16('x00280102')\n  });\n  header.push({\n    name: 'Pixel Representation',\n    value: dcmViewer.getPixelRepresentation()\n  });\n  header.push({\n    name: 'Window Center',\n    value: dcmViewer.image.data.string('x00281050')\n  });\n  header.push({\n    name: 'Window Width',\n    value: dcmViewer.image.data.string('x00281051')\n  });\n  header.push({\n    name: 'Rescale Intercept',\n    value: dcmViewer.image.data.string('x00281052')\n  });\n  header.push({\n    name: 'Rescale Slope',\n    value: dcmViewer.image.data.string('x00281053')\n  });\n  header.push({\n    name: 'Min Stored Pixel Value',\n    value: dcmViewer.image.minPixelValue\n  });\n  header.push({\n    name: 'Max Stored Pixel Value',\n    value: dcmViewer.image.maxPixelValue\n  });\n  header.push({\n    name: 'Image Orientation',\n    value: dcmViewer.image.data.string('x00700042')\n  });\n  header.push({\n    name: 'Image Horizontal Flip',\n    value: dcmViewer.image.data.string('x00700041')\n  });\n  const listItems = header.map((item, index) => {\n    if (item.value !== undefined) return React.createElement(ListItem, {\n      dense: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: item.name,\n      secondary: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));else return null;\n  });\n\n  const saveHeader = () => {\n    let exportAs = localStorage.getItem(SETTINGS_DCMHEADER);\n\n    if (exportAs === null) {\n      exportAs = \"json\";\n      localStorage.setItem(SETTINGS_DCMHEADER, exportAs);\n    }\n\n    let fileData = '';\n\n    if (exportAs === 'csv') {\n      fileData = toCsv(header);\n    } else {\n      const obj = header.reduce((o, item) => _objectSpread({}, o, {\n        [item.name]: item.value\n      }), {});\n      fileData = JSON.stringify(obj);\n    }\n\n    const element = document.createElement(\"a\");\n    const file = new Blob([fileData], {\n      type: 'text/plain'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = `${dcmViewer.localfile.name}.${exportAs}`;\n    document.body.appendChild(element); // Required for this to work in FireFox\n\n    element.click();\n  };\n\n  console.log('dcmViewer', dcmViewer);\n  return React.createElement(\"div\", {\n    style: {\n      marginTop: '48px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    variant: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Dicom Header\"), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: saveHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    path: mdiContentSaveOutline,\n    size: '1.2rem',\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(List, {\n    dense: true,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, listItems)));\n};\n\nexport default DicomHeader;","map":{"version":3,"sources":["E:/private/projects/udv/u-dicom-viewer-master-1/u-dicom-viewer-master/src/components/DicomHeader.js"],"names":["React","List","ListItem","ListItemText","Toolbar","Typography","Icon","IconButton","SETTINGS_DCMHEADER","toCsv","mdiContentSaveOutline","DicomHeader","dcmViewer","classes","color","header","push","name","value","getTransferSyntax","getSopClass","getSopInstanceUID","image","data","string","uint16","getPlanarConfiguration","getPixelRepresentation","minPixelValue","maxPixelValue","listItems","map","item","index","undefined","saveHeader","exportAs","localStorage","getItem","setItem","fileData","obj","reduce","o","JSON","stringify","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","localfile","body","appendChild","click","console","log","marginTop","title","grow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@mdi/react'\nimport IconButton from '@material-ui/core/IconButton'\nimport { SETTINGS_DCMHEADER } from '../constants/settings'\nimport { toCsv } from '../functions'\nimport {\n    mdiContentSaveOutline\n} from '@mdi/js'\n\nconst DicomHeader = ({dcmViewer, classes, color}) => {\n    let header = []\n    header.push({name: 'Transfer Syntax', value: dcmViewer.getTransferSyntax()})\n    header.push({name: 'SOP Class', value: dcmViewer.getSopClass()})\n    header.push({name: 'SOP Instance UID', value: dcmViewer.getSopInstanceUID()})\n    header.push({name: 'Modality', value: dcmViewer.image.data.string('x00080060')})\n    header.push({name: 'Manufacturer', value: dcmViewer.image.data.string('x00080070')})\n    header.push({name: 'Study Description', value: dcmViewer.image.data.string('x00081030')})\n    header.push({name: 'Series Description', value: dcmViewer.image.data.string('x0008103E')})\n    header.push({name: 'Patient Name', value: dcmViewer.image.data.string('x00100010')})\n    header.push({name: 'Frame Rate', value: dcmViewer.image.data.string('x00082144')})\n\n    header.push({name: 'MR Acquisition Type', value: dcmViewer.image.data.string('x00180023')})\n    header.push({name: 'Slice Thickness', value: dcmViewer.image.data.string('x00180050')})\n    header.push({name: 'Spacing Between Slice', value: dcmViewer.image.data.string('x00180088')})\n    header.push({name: 'Patient Position', value: dcmViewer.image.data.string('x00185100')})\n\n    header.push({name: 'Study ID', value: dcmViewer.image.data.string('x00200010')})\n    header.push({name: 'Series Number', value: dcmViewer.image.data.string('x00200011')})\n    header.push({name: 'Acquisition Number', value: dcmViewer.image.data.string('x00200012')})\n    header.push({name: 'Instance Number', value: dcmViewer.image.data.string('x00200013')})\n    header.push({name: 'Image Position (Patient)', value: dcmViewer.image.data.string('x00200032')})\n    header.push({name: 'Image Orientation (Patient)', value: dcmViewer.image.data.string('x00200037')})\n    header.push({name: 'Images in Acquisition', value: dcmViewer.image.data.string('x00201002')}) \n    header.push({name: 'Slice Location', value: dcmViewer.image.data.string('x00201041')})        \n\n    header.push({name: 'Samples per Pixel', value: dcmViewer.image.data.uint16('x00280002')})\n    header.push({name: 'Photometric Interpretation', value: dcmViewer.image.data.string('x00280004')})\n    header.push({name: 'Number of Frames', value: dcmViewer.image.data.string('x00280008')})\n    header.push({name: 'Planar Configuration', value: dcmViewer.getPlanarConfiguration()})\n    header.push({name: 'Rows', value: dcmViewer.image.data.uint16('x00280010')})\n    header.push({name: 'Columns', value: dcmViewer.image.data.uint16('x00280011')})\n    header.push({name: 'Pixel Spacing', value: dcmViewer.image.data.string('x00280030')})\n    header.push({name: 'Bits Allocated', value: dcmViewer.image.data.uint16('x00280100')})\n    header.push({name: 'Bits Stored', value: dcmViewer.image.data.uint16('x00280101')})\n    header.push({name: 'High Bit', value: dcmViewer.image.data.uint16('x00280102')})\n    header.push({name: 'Pixel Representation', value: dcmViewer.getPixelRepresentation()})\n    header.push({name: 'Window Center', value: dcmViewer.image.data.string('x00281050')})\n    header.push({name: 'Window Width', value: dcmViewer.image.data.string('x00281051')})\n    header.push({name: 'Rescale Intercept', value: dcmViewer.image.data.string('x00281052')})\n    header.push({name: 'Rescale Slope', value: dcmViewer.image.data.string('x00281053')})\n    header.push({name: 'Min Stored Pixel Value', value: dcmViewer.image.minPixelValue})\n    header.push({name: 'Max Stored Pixel Value', value: dcmViewer.image.maxPixelValue})\n\n    header.push({name: 'Image Orientation', value: dcmViewer.image.data.string('x00700042')})\n    header.push({name: 'Image Horizontal Flip', value: dcmViewer.image.data.string('x00700041')})\n\n    const listItems = header.map((item, index) => {\n        if (item.value !== undefined) \n            return (\n                <ListItem dense={true} key={index}>\n                    <ListItemText primary={item.name} secondary={item.value} />\n                </ListItem>\n            ) \n        else return null\n    })\n\n    const saveHeader = () => {\n        let exportAs = localStorage.getItem(SETTINGS_DCMHEADER)\n        if (exportAs === null) {\n          exportAs = \"json\"\n          localStorage.setItem(SETTINGS_DCMHEADER, exportAs)\n        }  \n    \n        let fileData = ''\n        \n        if (exportAs === 'csv') {\n          fileData = toCsv(header)\n        } else {\n          const obj = header.reduce((o, item) => ({ ...o, [item.name]: item.value}), {})\n          fileData = JSON.stringify(obj)\n        }\n        \n        const element = document.createElement(\"a\")\n        const file = new Blob([fileData], {type: 'text/plain'})\n        element.href = URL.createObjectURL(file)\n        element.download = `${dcmViewer.localfile.name}.${exportAs}`\n        document.body.appendChild(element) // Required for this to work in FireFox\n        element.click()\n    }\n\n    console.log('dcmViewer', dcmViewer)\n\n    return (\n        <div style={{marginTop: '48px'}}>\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"subtitle1\" className={classes.title}>\n            Dicom Header\n          </Typography>\n          <div className={classes.grow} />\n          <IconButton color=\"inherit\" onClick={saveHeader}>\n            <Icon path={mdiContentSaveOutline} size={'1.2rem'} color={color} />\n          </IconButton>\n        </Toolbar>\n        <div>\n            <List dense={true} component=\"div\">\n                {listItems}             \n            </List>\n        </div>      \n      </div>\n\n    )\n}\n  \nexport default DicomHeader\n"]},"metadata":{},"sourceType":"module"}