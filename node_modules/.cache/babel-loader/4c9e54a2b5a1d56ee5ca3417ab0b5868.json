{"ast":null,"code":"import _extends from \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\src\\\\components\\\\Dicomdir.js\";\nimport React, { Fragment, PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport * as dicomParser from 'dicom-parser';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport fs from '../fs/fs';\nimport { getSettingsDicomdirView } from '../functions';\nimport { fsFileStore } from '../actions';\n\nconst styles = theme => ({\n  study: {\n    paddingLeft: theme.spacing(3)\n  },\n  series: {\n    paddingLeft: theme.spacing(5)\n  },\n  images: {\n    paddingLeft: theme.spacing(7)\n  },\n  listItemText: {\n    fontSize: '0.80em'\n  }\n});\n\nconst ExpandIcon = ({\n  expanded\n}) => expanded ? React.createElement(ExpandLessIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}) : React.createElement(ExpandMoreIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n});\n\nclass Dicomdir extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      expanded: []\n    };\n\n    this.buildData = (id = null) => {\n      let output = this.output;\n\n      if (id !== null) {\n        output[id].expanded = !output[id].expanded;\n      }\n\n      let images = [];\n      let series = [];\n      let study = [];\n      let patient = [];\n      output.slice().reverse().forEach((obj, i) => {\n        if (obj.key === 'image') {\n          images.unshift({\n            id: obj.id,\n            key: obj.key,\n            path: obj.path,\n            value: obj.value\n          });\n        } else if (obj.key === 'series') {\n          series.unshift({\n            id: obj.id,\n            key: obj.key,\n            number: obj.number,\n            value: obj.value,\n            expanded: obj.expanded,\n            children: images\n          });\n          images = [];\n        } else if (obj.key === 'study') {\n          study.unshift({\n            id: obj.id,\n            key: obj.key,\n            value: obj.value,\n            expanded: obj.expanded,\n            children: series\n          });\n          series = [];\n        } else if (obj.key === 'patient') {\n          patient.unshift({\n            id: obj.id,\n            key: obj.key,\n            value: obj.value,\n            expanded: obj.expanded,\n            children: study\n          });\n          study = [];\n        }\n      });\n      this.setState({\n        data: patient\n      });\n    };\n\n    this.buildOutput = dataset => {\n      //console.log('dataset: ', dataset)\n      let data = dataset.elements.x00041220.items;\n      let output = [];\n\n      if (data) {\n        data.forEach((e, index) => {\n          const id = index.toString();\n\n          if (e.dataSet.string('x00041430') === 'PATIENT') {\n            //console.log(\"Patient Name - \"+e.dataSet.string('x00100010'))\n            output.push({\n              id: id,\n              key: 'patient',\n              value: e.dataSet.string('x00100010'),\n              expanded: true\n            });\n          } else if (e.dataSet.string('x00041430') === 'STUDY') {\n            //console.log(\"Study - \"+e.dataSet.string('x00081030'))\n            output.push({\n              id: id,\n              key: 'study',\n              value: e.dataSet.string('x00081030'),\n              expanded: true\n            });\n          } else if (e.dataSet.string('x00041430') === 'SERIES') {\n            //console.log(\"Series number - \"+e.dataSet.string('x00200011'))\n            output.push({\n              id: id,\n              key: 'series',\n              number: e.dataSet.string('x00200011'),\n              value: e.dataSet.string('x00080060'),\n              expanded: true\n            });\n          } else if (e.dataSet.string('x00041430') === 'IMAGE') {\n            //console.log(\"Image - \"+e.dataSet.string('x00041500'))\n            output.push({\n              id: id,\n              key: 'image',\n              path: e.dataSet.string('x00041500').replace(/\\\\/g, '/'),\n              value: e.dataSet.string('x00041500').split('\\\\').pop(),\n              expanded: true\n            });\n          }\n        });\n      } //console.log('output: ', output)\n\n\n      return output;\n    };\n\n    this.openDicomdir = file => {\n      var reader = new FileReader();\n\n      reader.onload = file => {\n        let arrayBuffer = reader.result;\n        let byteArray = new Uint8Array(arrayBuffer); // Invoke the paresDicom function and get back a DataSet object with the contents\n\n        let dataset = null;\n        let output = [];\n\n        try {\n          dataset = dicomParser.parseDicom(byteArray);\n          output = this.buildOutput(dataset);\n        } catch (err) {\n          if (typeof err.dataSet != 'undefined') {\n            output = this.buildOutput(err.dataSet);\n          }\n        }\n\n        this.output = output;\n        this.buildData();\n      };\n\n      reader.readAsArrayBuffer(file);\n    };\n\n    this.openDicomdirFs = fsItem => {\n      let byteArray = new Uint8Array(fsItem.data);\n      let dataset = null;\n      let output = [];\n\n      try {\n        dataset = dicomParser.parseDicom(byteArray);\n        output = this.buildOutput(dataset);\n      } catch (err) {\n        if (typeof err.dataSet != 'undefined') {\n          output = this.buildOutput(err.dataSet);\n        }\n      }\n\n      this.output = output;\n      this.buildData();\n    };\n\n    this.onClick = id => {\n      const obj = this.output.find(x => x.id === id);\n\n      if (obj.key === 'image') {\n        if (this.props.dicomdir.origin === 'local') {\n          // load it from local\n          const file = this.props.dicomdir.files.find(x => x.name === obj.value);\n          this.props.onOpenFile(file);\n        } else {\n          // load it from sandboxed file system\n          let components = obj.path.split('/');\n          const name = components.pop();\n          components.unshift(this.props.fsCurrentDir);\n          const parent = components.join('/');\n          fs.files.where({\n            parent: parent,\n            name: name\n          }).first(item => {\n            this.props.setFsFileStore(item);\n            this.props.onOpenFs(item);\n          });\n        }\n      } else {\n        this.buildData(id);\n      }\n    };\n\n    this.output = null;\n  }\n\n  componentDidMount() {\n    if (this.props.dicomdir.origin === 'local') this.openDicomdir(this.props.dicomdir.dicomdir);else this.openDicomdirFs(this.props.dicomdir.dicomdir);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    let styleComponent = null;\n\n    if (getSettingsDicomdirView() === 'bottom') {\n      styleComponent = {\n        marginTop: '0px',\n        height: '275px'\n      };\n    } else {\n      styleComponent = {\n        marginTop: '48px',\n        width: '350px'\n      };\n    }\n\n    return React.createElement(\"div\", {\n      style: styleComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.state.data.map((_ref, index) => {\n      let patient = _extends({}, _ref);\n\n      return React.createElement(Fragment, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        onClick: () => this.onClick(patient.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: patient.value,\n        secondary: patient.key,\n        classes: {\n          primary: classes.listItemText,\n          secondary: classes.listItemText\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(ExpandIcon, {\n        expanded: patient.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        in: patient.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, patient.children.map(study => React.createElement(Fragment, {\n        key: study.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        key: study.id,\n        button: true,\n        dense: true,\n        onClick: () => this.onClick(study.id),\n        className: classes.study,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: study.value,\n        secondary: study.key,\n        classes: {\n          primary: classes.listItemText,\n          secondary: classes.listItemText\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(ExpandIcon, {\n        expanded: study.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        in: study.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, study.children.map(series => React.createElement(Fragment, {\n        key: series.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        key: series.id,\n        button: true,\n        dense: true,\n        onClick: () => this.onClick(series.id),\n        className: classes.series,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: `${series.value} (${series.number})`,\n        secondary: series.key,\n        classes: {\n          primary: classes.listItemText,\n          secondary: classes.listItemText\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(ExpandIcon, {\n        expanded: study.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        in: series.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, series.children.map(images => React.createElement(ListItem, {\n        key: images.id,\n        button: true,\n        dense: true,\n        onClick: () => this.onClick(images.id),\n        className: classes.images,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: images.value,\n        classes: {\n          primary: classes.listItemText\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })))))))))));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dicomdir: state.dicomdir,\n    fsCurrentDir: state.fsCurrentDir\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFsFileStore: file => dispatch(fsFileStore(file))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dicomdir));","map":{"version":3,"sources":["E:/private/projects/udv/u-dicom-viewer-master-1/u-dicom-viewer-master/src/components/Dicomdir.js"],"names":["React","Fragment","PureComponent","connect","withStyles","List","ListItem","ListItemText","Collapse","dicomParser","ExpandLessIcon","ExpandMoreIcon","fs","getSettingsDicomdirView","fsFileStore","styles","theme","study","paddingLeft","spacing","series","images","listItemText","fontSize","ExpandIcon","expanded","Dicomdir","constructor","props","state","data","buildData","id","output","patient","slice","reverse","forEach","obj","i","key","unshift","path","value","number","children","setState","buildOutput","dataset","elements","x00041220","items","e","index","toString","dataSet","string","push","replace","split","pop","openDicomdir","file","reader","FileReader","onload","arrayBuffer","result","byteArray","Uint8Array","parseDicom","err","readAsArrayBuffer","openDicomdirFs","fsItem","onClick","find","x","dicomdir","origin","files","name","onOpenFile","components","fsCurrentDir","parent","join","where","first","item","setFsFileStore","onOpenFs","componentDidMount","render","classes","styleComponent","marginTop","height","width","map","primary","secondary","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, PureComponent } from 'react'\nimport {connect} from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse'\nimport * as dicomParser from 'dicom-parser'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport fs from '../fs/fs'\nimport {\n  getSettingsDicomdirView,\n} from '../functions'\nimport {\n  fsFileStore,\n} from '../actions'\n\nconst styles = theme => ({\n  study: { \n    paddingLeft: theme.spacing(3) \n  },\n  series: { \n    paddingLeft: theme.spacing(5) \n  },\n  images: { \n    paddingLeft: theme.spacing(7) \n  },  \n  listItemText:{\n    fontSize:'0.80em',\n  }\n})\n\nconst ExpandIcon = ({ expanded }) => expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />\n\nclass Dicomdir extends PureComponent {\n    constructor(props) {\n      super(props)\n      this.output = null\n    }\n\n    state = {\n      data: [],\n      expanded: [],\n    }\n\n    componentDidMount() {\n        if (this.props.dicomdir.origin === 'local')\n          this.openDicomdir(this.props.dicomdir.dicomdir)   \n        else \n          this.openDicomdirFs(this.props.dicomdir.dicomdir)               \n    }\n\n    buildData = (id = null) => {\n      let output = this.output\n      if (id !== null) {\n        output[id].expanded = !output[id].expanded\n      }\n      let images = []\n      let series = []\n      let study = []\n      let patient = []\n      output.slice().reverse().forEach((obj, i) => {\n        if (obj.key === 'image') {\n          images.unshift({id: obj.id, key: obj.key, path: obj.path, value: obj.value})\n        } else if (obj.key === 'series') {\n          series.unshift({id: obj.id, key: obj.key, number: obj.number, value: obj.value, expanded: obj.expanded, children: images})\n          images = []\n        } else if (obj.key === 'study') {\n          study.unshift({id: obj.id, key: obj.key, value: obj.value, expanded: obj.expanded, children: series})\n          series = []\n        } else if (obj.key === 'patient') {\n          patient.unshift({id: obj.id, key: obj.key, value: obj.value, expanded: obj.expanded, children: study})\n          study = []\n        }\n      })\n      this.setState({data: patient})\n    }\n\n    buildOutput = (dataset) => {\n      //console.log('dataset: ', dataset)\n      let data = dataset.elements.x00041220.items\n      let output = []\n      if (data) {\n          data.forEach((e, index) => {\n            const id = index.toString()\n            if (e.dataSet.string('x00041430') === 'PATIENT') {\n                //console.log(\"Patient Name - \"+e.dataSet.string('x00100010'))\n                output.push({id: id, key: 'patient', value: e.dataSet.string('x00100010'), expanded: true})\n            } else if (e.dataSet.string('x00041430') === 'STUDY') {\n                //console.log(\"Study - \"+e.dataSet.string('x00081030'))\n                output.push({id: id, key: 'study', value: e.dataSet.string('x00081030'), expanded: true})\n            } else if (e.dataSet.string('x00041430') === 'SERIES') {\n                //console.log(\"Series number - \"+e.dataSet.string('x00200011'))\n                output.push({id: id, key: 'series', number: e.dataSet.string('x00200011'), value: e.dataSet.string('x00080060'), expanded: true})\n            } else if (e.dataSet.string('x00041430') === 'IMAGE') {\n                //console.log(\"Image - \"+e.dataSet.string('x00041500'))\n                output.push({id: id, key: 'image', path: e.dataSet.string('x00041500').replace(/\\\\/g, '/'), value: e.dataSet.string('x00041500').split('\\\\').pop(), expanded: true})\n            }              \n          })\n      }\n      //console.log('output: ', output)\n      return output\n    }\n\n    openDicomdir = (file) => {\n        var reader = new FileReader()\n        reader.onload = (file) => {\n          let arrayBuffer = reader.result\n          let byteArray = new Uint8Array(arrayBuffer)\n          // Invoke the paresDicom function and get back a DataSet object with the contents\n          let dataset = null\n          let output = []\n          try {\n              dataset = dicomParser.parseDicom(byteArray)\n              output = this.buildOutput(dataset)\n          } catch(err) {\n              if (typeof err.dataSet != 'undefined') {\n                  output = this.buildOutput(err.dataSet)\n              }\n          }\n          this.output = output\n          this.buildData()\n        }\n\n        reader.readAsArrayBuffer(file)\n    }\n\n    openDicomdirFs = (fsItem) => {\n      let byteArray = new Uint8Array(fsItem.data)\n      let dataset = null\n      let output = []\n      try {\n        dataset = dicomParser.parseDicom(byteArray)\n        output = this.buildOutput(dataset)\n      } catch(err) {\n        if (typeof err.dataSet != 'undefined') {\n          output = this.buildOutput(err.dataSet)\n        }\n      }\n      this.output = output\n      this.buildData()\n    }\n\n    onClick = (id) => {\n      const obj = this.output.find(x => x.id === id)\n      if (obj.key === 'image') {\n        if (this.props.dicomdir.origin === 'local') { // load it from local\n          const file = this.props.dicomdir.files.find(x => x.name === obj.value)\n          this.props.onOpenFile(file)\n        } else { // load it from sandboxed file system\n          let components = obj.path.split('/')\n          const name = components.pop()\n          components.unshift(this.props.fsCurrentDir)\n          const parent = components.join('/')\n          fs.files.where({parent: parent, name: name}).first((item) => {\n            this.props.setFsFileStore(item)\n            this.props.onOpenFs(item)\n          })\n        }\n      } else {\n        this.buildData(id)\n      }\n    }\n\n    render() {   \n      const { classes } = this.props\n\n      let styleComponent = null\n      if (getSettingsDicomdirView() === 'bottom') {\n          styleComponent = {marginTop: '0px', height: '275px'}\n      } else {\n          styleComponent = {marginTop: '48px', width: '350px'}\n      }\n\n      return (\n        <div style={styleComponent}>\n          <List>\n            {this.state.data.map(({ ...patient }, index) => (\n              <Fragment key={index}>\n                <ListItem button onClick={() => this.onClick(patient.id)}>\n                  <ListItemText primary={patient.value} secondary={patient.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\n                  <ExpandIcon expanded={patient.expanded} />\n                </ListItem>\n                <Collapse in={patient.expanded}>\n                  {patient.children.map(study => (\n                    <Fragment key={study.id}>\n                      <ListItem key={study.id} button dense onClick={() => this.onClick(study.id)} className={classes.study}>\n                        <ListItemText primary={study.value} secondary={study.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\n                        <ExpandIcon expanded={study.expanded} />\n                      </ListItem>\n                      <Collapse in={study.expanded}>\n                        {study.children.map(series => (\n                          <Fragment key={series.id}>\n                            <ListItem key={series.id} button dense onClick={() => this.onClick(series.id)} className={classes.series}>\n                              <ListItemText primary={`${series.value} (${series.number})`} secondary={series.key} classes={{primary:classes.listItemText, secondary:classes.listItemText}} />\n                              <ExpandIcon expanded={study.expanded} />\n                            </ListItem>\n                            <Collapse in={series.expanded}>\n                              {series.children.map(images => (\n                                <ListItem key={images.id} button dense onClick={() => this.onClick(images.id)} className={classes.images}>\n                                  <ListItemText primary={images.value} classes={{primary:classes.listItemText}} />\n                                </ListItem>\n                              ))}\n                            </Collapse>\n                          </Fragment>\n                        ))}\n                      </Collapse>\n                    </Fragment>\n                  ))}\n                </Collapse>\n              </Fragment>\n            ))}\n          </List>\n        </div>\n      )\n    }\n}   \n\nconst mapStateToProps = (state) => {\n    return {\n      dicomdir: state.dicomdir,\n      fsCurrentDir: state.fsCurrentDir,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setFsFileStore: (file) => dispatch(fsFileStore(file))\n  }\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dicomdir))\n"]},"metadata":{},"sourceType":"module"}