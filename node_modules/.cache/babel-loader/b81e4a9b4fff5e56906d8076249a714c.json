{"ast":null,"code":"var _jsxFileName = \"/media/mohammad/work/websites/cornerstone/dicom-viewer/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Dicomdir from './components/Dicomdir';\nimport DicomViewer from './components/DicomViewer';\nimport DicomHeader from './components/DicomHeader';\nimport Measurements from './components/Measurements';\nimport Settings from './components/Settings';\nimport AboutDlg from './components/AboutDlg';\nimport Histogram from './components/Histogram';\nimport LayoutTool from './components/LayoutTool';\nimport FsUI from './components/FsUI';\nimport DownloadZipDlg from './components/DownloadZipDlg';\nimport OpenMultipleFilesDlg from './components/OpenMultipleFilesDlg';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Icon from '@mdi/react';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography'; //import { FixedSizeList } from 'react-window'\n//import {List as ListVirtual} from 'react-virtualized'\n\nimport SeriesItem from './components/SeriesItem';\nimport { isMobile, isTablet } from 'react-device-detect';\nimport { clearStore, localFileStore, dcmIsOpen, activeDcm, activeDcmIndex, activeMeasurements, setLayout, dcmTool, setDicomdir, setZippedFile, setVolume, filesStore } from './actions/index';\nimport { log, getPixelSpacing, getSpacingBetweenSlice, getSliceThickness, getSliceLocation //getFileNameCorrect,\n, getFileExtReal, isInputDirSupported, getSettingsFsView, getSettingsDicomdirView, getSettingsMprInterpolation } from './functions';\nimport { mdiAngleAcute, mdiArrowAll, mdiAxisArrow, mdiCamera, mdiChartHistogram, mdiCheck, mdiCheckboxIntermediate, mdiContentSaveOutline, mdiCursorDefault, mdiCursorPointer, mdiDelete, mdiEllipse, mdiEyedropper, mdiFileCabinet, mdiFileDocument, mdiFileCad, mdiFolder, mdiFolderMultiple, mdiGesture, mdiViewGridPlusOutline, mdiImageEdit, mdiInformationOutline, mdiInvertColors, mdiMagnify, mdiFolderOpen, mdiRefresh, mdiRectangle, mdiRuler, mdiSettings, mdiToolbox, mdiTools, mdiTrashCanOutline, mdiVideo, mdiWeb, mdiPlay, mdiPause, mdiSkipBackward, mdiSkipForward, mdiSkipNext, mdiSkipPrevious, mdiArrowLeft, mdiArrowLeftCircle, mdiViewList } from '@mdi/js';\nimport './App.css';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Card from \"@material-ui/core/Card\";\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\";\nimport * as cornerstone from \"cornerstone-core\";\nimport * as dicomParser from \"dicom-parser\";\nimport SeriesList from \"./components/SeriesList\"; // log();\n\nlocalStorage.setItem(\"debug\", \"cornerstoneTools\");\nconst drawerWidth = 240;\nconst iconColor = '#FFFFFF';\nlet iconTool = null;\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.black\n    }\n  },\n  grow: {\n    flexGrow: 1\n  },\n  root: {\n    display: 'flex'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n  appBar: {\n    position: 'relative',\n    backgroundColor: '#453479',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  toolbarCard: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: '#453479',\n    position: 'absolute',\n    margin: '0 25% 0 25%',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    top: 'auto',\n    bottom: 0,\n    right: 0,\n    left: 0\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  // Loads information about the app bar, including app bar height\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  listItemText: {\n    fontSize: '0.85em',\n    marginLeft: '-20px'\n  }\n});\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElLayout: null,\n      openMenu: false,\n      openImageEdit: false,\n      openTools: false,\n      openMpr: false,\n      openLayout: false,\n      visibleMainMenu: true,\n      visibleHeader: false,\n      visibleSettings: false,\n      visibleToolbar: true,\n      visibleOpenUrl: false,\n      visibleToolbox: false,\n      visibleMeasure: false,\n      visibleClearMeasureDlg: false,\n      visibleAbout: false,\n      visibleDicomdir: false,\n      visibleFileManager: false,\n      visibleZippedFileDlg: false,\n      visibleDownloadZipDlg: false,\n      visibleOpenMultipleFilesDlg: false,\n      toolState: 1,\n      sliceIndex: 0,\n      sliceMax: 1,\n      listOpenFilesScrolling: false,\n      visibleVolumeBuilding: false,\n      visibleMprOrthogonal: false,\n      visibleMprCoronal: false,\n      visibleMprSagittal: false,\n      visibleMprAxial: false,\n      anchorEl: null,\n      anchorElMpr: null,\n      anchorElImageEdit: null,\n      visibleSeries: false,\n      totalSeries: null,\n      seriesListDicomViewers: []\n    };\n\n    this.setDcmViewer = (index, type) => {\n      if (type === 'grid') {\n        return React.createElement(DicomViewer, {\n          dcmRef: ref => {\n            this.dicomViewersRefs[index] = ref;\n          },\n          index: index,\n          runTool: ref => this.runTool = ref,\n          changeTool: ref => this.changeTool = ref,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        });\n      } else if (type === 'list') {\n        console.log('listttttttttttt');\n        return React.createElement(DicomViewer, {\n          dcmRef: ref => {\n            this.seriesListDicomViewersRefs[index] = ref;\n          },\n          index: index,\n          runTool: ref => this.runTool = ref,\n          changeTool: ref => this.changeTool = ref,\n          files: this.state.totalSeries ? this.state.totalSeries[index].files : [],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.getDcmViewerRef = index => {\n      return this.dicomViewersRefs[index];\n    };\n\n    this.getDcmViewer = index => {\n      return this.dicomViewers[index];\n    };\n\n    this.getActiveDcmViewer = () => {\n      return this.dicomViewersRefs[this.props.activeDcmIndex];\n    };\n\n    this.toggleFileManager = () => {\n      if (getSettingsFsView() === 'left') {\n        this.setState({\n          visibleMainMenu: false,\n          visibleFileManager: !this.state.visibleFileManager\n        });\n      } else {\n        this.setState({\n          visibleFileManager: !this.state.visibleFileManager\n        });\n      }\n    };\n\n    this.handleOpenLocalFs = filesSelected => {\n      //console.log('handleOpenLocalFs: ', filesSelected)\n      if (filesSelected.length > 1) {\n        this.files = filesSelected;\n        this.changeLayout(1, 1);\n        this.mprPlane = '';\n        this.volume = [];\n\n        for (let i = 0; i < 16; i++) if (this.dicomViewersRefs[i] !== undefined) {// this.dicomViewersRefs[i].runTool('clear')\n        }\n\n        this.setState({\n          sliceIndex: 0,\n          sliceMax: 1,\n          visibleMprOrthogonal: false,\n          visibleMprCoronal: false,\n          visibleMprSagittal: false,\n          visibleMprAxial: false\n        }, () => {\n          this.setState({\n            visibleOpenMultipleFilesDlg: true\n          });\n        });\n      } else {\n        const file = filesSelected[0];\n        console.log('file: ', file);\n\n        if (file.type === 'application/x-zip-compressed' || file.type === 'application/zip') {\n          this.file = file;\n          this.url = null;\n          this.setState({\n            visibleZippedFileDlg: true\n          });\n        } else {\n          this.setState({\n            sliceIndex: 0,\n            sliceMax: 1\n          });\n          this.props.setLocalFileStore(file);\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file);\n        }\n      }\n    };\n\n    this.handleOpenSandboxFs = fsItem => {\n      //this.hideMainMenu()\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openSandboxFs', fsItem);\n    };\n\n    this.handleOpenImage = index => {\n      //console.log('handleOpenImage : ', index)\n      const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n      const visibleMprSagittal = this.state.visibleMprSagittal;\n      const visibleMprCoronal = this.state.visibleMprCoronal;\n      const visibleMprAxial = this.state.visibleMprAxial;\n      const plane = this.mprPlanePosition(); //console.log('plane: ', plane)\n\n      if (visibleMprOrthogonal) {\n        if (this.props.activeDcmIndex === 0) {\n          this.dicomViewersRefs[0].runTool('openimage', index);\n        } else if (this.props.activeDcmIndex === 1) {\n          if (plane === 'sagittal') {\n            // then open axial plane in second view\n            this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else if (plane === 'axial') {\n            // then open coronal plane in second view\n            this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else {\n            // plane is coronal, then open axial in second view\n            this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          }\n        } else if (this.props.activeDcmIndex === 2) {\n          if (plane === 'sagittal') {\n            // then open axial plane in second view\n            this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else if (plane === 'axial') {\n            // then open coronal plane in second view\n            this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else {\n            // plane is coronal, then open axial in second view\n            this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          }\n        }\n      } else if (plane === 'sagittal' && visibleMprSagittal || plane === 'axial' && visibleMprAxial || plane === 'coronal' && visibleMprCoronal) this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);else if (plane === 'sagittal' && visibleMprAxial) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'sagittal' && visibleMprCoronal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'axial' && visibleMprSagittal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'axial' && visibleMprCoronal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'coronal' && visibleMprSagittal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'coronal' && visibleMprAxial) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else // it's not a possible MPR, then open as normal dicom file  \n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n    };\n\n    this.handleOpenFileDicomdir = file => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file);\n    };\n\n    this.handleOpenFsDicomdir = fsItem => {\n      this.props.setDicomdirStore({\n        origin: 'fs',\n        dicomdir: fsItem,\n        files: []\n      });\n      this.toggleDicomdir();\n    };\n\n    this.showAppBar = () => {\n      window.scrollTo(0, 0);\n    };\n\n    this.toggleSeriesMenu = () => {\n      const visibleSeries = this.state.visibleSeries; //const visibleFileManager = this.state.visibleFileManager\n\n      if (getSettingsFsView() === 'left') {\n        this.setState({\n          visibleSeries: !visibleSeries,\n          visibleFileManager: false\n        });\n      } else {\n        this.setState({\n          visibleSeries: !visibleSeries\n        });\n      }\n    };\n\n    this.toggleMainMenu = () => {\n      const visibleMainMenu = this.state.visibleMainMenu; //const visibleFileManager = this.state.visibleFileManager\n\n      if (getSettingsFsView() === 'left') {\n        this.setState({\n          visibleMainMenu: !visibleMainMenu,\n          visibleFileManager: false\n        });\n      } else {\n        this.setState({\n          visibleMainMenu: !visibleMainMenu\n        });\n      }\n    };\n\n    this.showMainMenu = () => {\n      this.setState({\n        visibleMainMenu: true\n      });\n    };\n\n    this.hideMainMenu = () => {\n      this.setState({\n        visibleMainMenu: false\n      });\n    };\n\n    this.handleVisibility = visibleMainMenu => {\n      this.setState({\n        visibleMainMenu\n      });\n    };\n\n    this.toggleHeader = () => {\n      const visible = !this.state.visibleHeader;\n      this.setState({\n        visibleHeader: visible\n      });\n      if (visible) this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.toggleToolbox = () => {\n      const visible = !this.state.visibleToolbox;\n      this.setState({\n        visibleToolbox: visible\n      });\n      if (visible) this.setState({\n        visibleMeasure: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.saveMeasure = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('savetools');\n    };\n\n    this.toggleMeasure = () => {\n      const visible = !this.state.visibleMeasure;\n      this.setState({\n        visibleMeasure: visible\n      });\n      if (visible) this.setState({\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.hideMeasure = () => {\n      this.setState({\n        visibleMeasure: false\n      });\n    };\n\n    this.handleVisibilityMeasure = visibleMeasure => {\n      this.setState({\n        visibleMeasure\n      });\n    };\n\n    this.toggleDicomdir = () => {\n      const visible = !this.state.visibleDicomdir;\n      console.log('toggleDicomdir: ', visible);\n      this.setState({\n        visibleDicomdir: visible\n      });\n      if (visible) this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.clearMeasure = () => {\n      this.showClearMeasureDlg();\n    };\n\n    this.showClearMeasureDlg = () => {\n      this.setState({\n        visibleClearMeasureDlg: true\n      });\n    };\n\n    this.hideClearMeasureDlg = () => {\n      this.setState({\n        visibleClearMeasureDlg: false\n      });\n    };\n\n    this.confirmClearMeasureDlg = () => {\n      this.hideClearMeasureDlg();\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools');\n    };\n\n    this.showZippedFileDlg = () => {\n      this.setState({\n        visibleZippedFileDlg: true\n      });\n    };\n\n    this.hideZippedFileDlg = () => {\n      this.setState({\n        visibleZippedFileDlg: false\n      });\n    };\n\n    this.confirmZippedFileDlg = () => {\n      this.hideZippedFileDlg();\n      this.setState({\n        visibleFileManager: true\n      }, () => {\n        console.log('this.url: ', this.url);\n\n        if (this.url !== null) {\n          this.setState({\n            visibleDownloadZipDlg: true\n          });\n        } else {\n          this.props.setFsZippedFile(this.file);\n        }\n      });\n    };\n\n    this.showAbout = () => {\n      this.setState({\n        visibleAbout: !this.state.visibleAbout\n      });\n    };\n\n    this.showSettings = () => {\n      this.setState({\n        visibleMainMenu: false,\n        visibleSettings: true,\n        visibleToolbar: false,\n        position: 'right'\n      });\n    };\n\n    this.hideSettings = () => {\n      this.setState({\n        visibleMainMenu: true,\n        visibleSettings: false,\n        visibleToolbar: true,\n        visibleFileManager: false,\n        visibleDicomdir: false\n      });\n    };\n\n    this.handleVisibilitySettings = visibleSettings => {\n      this.setState({\n        visibleSettings\n      });\n    };\n\n    this.hideDownloadZipDlg = () => {\n      this.setState({\n        visibleDownloadZipDlg: false\n      });\n    };\n\n    this.hideOpenMultipleFilesDlg = () => {\n      this.setState({\n        visibleOpenMultipleFilesDlg: false\n      });\n      this.openMultipleFilesCompleted();\n    };\n\n    this.openMultipleFilesCompleted = () => {\n      if (this.props.files !== null) {\n        this.changeLayout(1, 1);\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', 0);\n        const sliceMax = this.props.files.length;\n        this.setState({\n          sliceMax: sliceMax\n        }, () => {\n          this.mprPlanePosition();\n          if (this.mprPlane === 'sagittal') this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: true,\n            visibleMprAxial: false,\n            visibleMprCoronal: false\n          });else if (this.mprPlane === 'coronal') this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: false,\n            visibleMprCoronal: true\n          });else this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: true,\n            visibleMprCoronal: false\n          });\n        });\n      }\n    };\n\n    this.showOpenUrl = () => {\n      this.setState({\n        visibleOpenUrl: true\n      });\n    };\n\n    this.hideOpenUrl = openDlg => {\n      this.setState({\n        visibleOpenUrl: false\n      }, () => {\n        if (openDlg) {\n          this.hideMainMenu();\n          this.file = null;\n          this.url = this.openUrlField.value; //console.log('this.url :', this.url)\n          //const ext = getFileExtReal(this.url)\n          //console.log('ext :', ext)\n\n          if (getFileExtReal(this.url) === 'zip') {\n            this.setState({\n              visibleZippedFileDlg: true\n            });\n          } else {\n            return this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openurl', this.openUrlField.value);\n          }\n        }\n      });\n    };\n\n    this.downloadOpenUrl = () => {\n      this.setState({\n        visibleOpenUrl: false,\n        visibleToolbar: true\n      });\n    };\n\n    this.resetImage = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('reset');\n    };\n\n    this.saveShot = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('saveas');\n    };\n\n    this.cinePlayer = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('cine');\n    };\n\n    this.clear = () => {\n      this.setState({\n        openImageEdit: false,\n        openTools: false,\n        openMpr: false,\n        visibleToolbox: false,\n        visibleMeasure: false,\n        visibleHeader: false,\n        visibleDicomdir: false\n      });\n      this.changeLayout(1, 1);\n      this.props.setFilesStore(null);\n      this.props.setDicomdirStore(null);\n      this.props.clearingStore();\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n    };\n\n    this.handleLayout = event => {\n      if (this.state.openLayout) {\n        this.setState({\n          anchorElLayout: null,\n          openLayout: false\n        });\n      } else {\n        this.setState({\n          anchorElLayout: event.currentTarget,\n          openLayout: true\n        });\n      }\n    };\n\n    this.closeLayout = () => {\n      this.setState({\n        anchorElLayout: null,\n        openLayout: false\n      });\n    };\n\n    this.changeLayout = (row, col) => {\n      // if reduce the grid clear the unused views\n      if (row < this.props.layout[0] || col < this.props.layout[1]) {\n        this.layoutGridClick(0);\n\n        for (let i = 0; i < 4; i++) {\n          for (let j = 0; j < 4; j++) {\n            if (i + 1 > row || j + 1 > col) {\n              const index = i * 4 + j;\n\n              if (this.dicomViewersRefs[index] !== undefined) {//this.dicomViewersRefs[index].runTool('clear')\n              }\n            }\n          }\n        }\n      }\n\n      this.props.setLayoutStore(row, col);\n    };\n\n    this.toolExecute = tool => {\n      this.hideMainMenu();\n\n      switch (tool) {\n        case 'notool':\n          iconTool = null;\n          this.setState({\n            toolState: null\n          });\n          break;\n\n        case 'Wwwc':\n          iconTool = mdiArrowAll;\n          break;\n\n        case 'Pan':\n          iconTool = mdiCursorPointer;\n          break;\n\n        case 'Zoom':\n          iconTool = mdiMagnify;\n          break;\n\n        case 'Length':\n          iconTool = mdiRuler;\n          break;\n\n        case 'Probe':\n          iconTool = mdiEyedropper;\n          break;\n\n        case 'Angle':\n          iconTool = mdiAngleAcute;\n          break;\n\n        case 'EllipticalRoi':\n          iconTool = mdiEllipse;\n          break;\n\n        case 'RectangleRoi':\n          iconTool = mdiRectangle;\n          break;\n\n        case 'FreehandRoi':\n          iconTool = mdiGesture;\n          break;\n\n        default:\n          break;\n      }\n\n      this.props.toolStore(tool);\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool(tool);\n    };\n\n    this.toolChange = () => {\n      const toolState = 1 - this.state.toolState;\n      this.setState({\n        toolState: toolState\n      }, () => {\n        this.changeTool.changeTool(this.props.tool, toolState);\n      });\n    };\n\n    this.toolRemove = index => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetool', index);\n    };\n\n    this.toggleOpenMenu = event => {\n      if (this.state.openMenu) {\n        this.setState({\n          openMenu: !this.state.openMenu,\n          anchorEl: null\n        });\n      } else {\n        this.setState({\n          openMenu: !this.state.openMenu,\n          anchorEl: event.currentTarget\n        });\n      }\n    };\n\n    this.toggleImageEdit = event => {\n      if (this.state.anchorElImageEdit) {\n        this.setState({\n          openImageEdit: !this.state.openImageEdit,\n          anchorElImageEdit: null\n        });\n      } else {\n        this.setState({\n          openImageEdit: !this.state.openImageEdit,\n          anchorElImageEdit: event.currentTarget\n        });\n      }\n    };\n\n    this.toggleTools = () => {\n      this.setState({\n        openTools: !this.state.openTools\n      });\n    };\n\n    this.toggleMpr = event => {\n      if (this.state.openMpr) {\n        this.setState({\n          openMpr: !this.state.openMpr,\n          anchorElMpr: null\n        });\n      } else {\n        this.setState({\n          openMpr: !this.state.openMpr,\n          anchorElMpr: event.currentTarget\n        });\n      }\n    };\n\n    this.layoutGridClick = index => {\n      if (isMobile && index === this.props.activeDcmIndex) return;\n      this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n      this.props.setActiveDcmIndex(index);\n\n      if (this.state.visibleMprOrthogonal) {\n        if (index === 0) {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[0]\n          });\n        } else if (index === 1) {\n          const sliceMax = this.props.files[0].image.columns;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[1]\n          });\n        } else if (index === 2) {\n          const sliceMax = this.props.files[0].image.rows;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[2]\n          });\n        }\n      }\n\n      const dcmViewer = this.getDcmViewerRef(index); //console.log('dcmViewer:', dcmViewer)\n\n      this.props.setActiveMeasurements(dcmViewer.measurements);\n      this.props.setActiveDcm({\n        image: dcmViewer.image,\n        element: dcmViewer.dicomImage,\n        isDicom: dcmViewer.isDicom\n      });\n    };\n\n    this.layoutGridTouch = index => {\n      if (!isMobile && index === this.props.activeDcmIndex) return;\n      this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n      this.props.setActiveDcmIndex(index);\n\n      if (this.state.visibleMprOrthogonal) {\n        if (index === 0) {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[0]\n          });\n        } else if (index === 1) {\n          const sliceMax = this.props.files[0].image.columns;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[1]\n          });\n        } else if (index === 2) {\n          const sliceMax = this.props.files[0].image.rows;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[2]\n          });\n        }\n      }\n\n      const dcmViewer = this.getDcmViewerRef(index);\n      this.props.setActiveMeasurements(dcmViewer.measurements);\n      this.props.setActiveDcm({\n        image: dcmViewer.image,\n        element: dcmViewer.dicomImage,\n        isDicom: dcmViewer.isDicom\n      });\n    };\n\n    this.buildLayoutGrid = () => {\n      let dicomviewers = [];\n\n      for (let i = 0; i < this.props.layout[0]; i++) {\n        for (let j = 0; j < this.props.layout[1]; j++) {\n          const styleLayoutGrid = {\n            border: this.props.layout[0] === 1 && this.props.layout[1] === 1 ? 'solid 1px #000000' : 'solid 1px #444444'\n          };\n          const index = i * 4 + j;\n          dicomviewers.push(React.createElement(\"div\", {\n            key: index,\n            style: styleLayoutGrid,\n            onClick: () => this.layoutGridClick(index),\n            onTouchStart: () => this.layoutGridTouch(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1070\n            },\n            __self: this\n          }, this.getDcmViewer(index)));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        id: \"dicomviewer-grid\",\n        style: {\n          display: 'grid',\n          gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083\n        },\n        __self: this\n      }, dicomviewers);\n    };\n\n    this.buildLayoutList = () => {\n      let dicomviewers = [];\n\n      for (let i = 0; i < 8; i++) {\n        const styleLayoutGrid = {\n          border: 'solid 1px #fff',\n          width: '100%',\n          height: '100px',\n          marginTop: '5px'\n        };\n        dicomviewers.push(React.createElement(ListItem, {\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1110\n          },\n          __self: this\n        }, React.createElement(\"row\", {\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1111\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          style: styleLayoutGrid // onClick={() => this.layoutGridClick(i)}\n          // onTouchStart={() => this.layoutGridTouch(i)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1112\n          },\n          __self: this\n        }, this.seriesListDicomViewers[i]), React.createElement(\"p\", {\n          style: {\n            padding: 0,\n            margin: '5px 10px 5px 10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1120\n          },\n          __self: this\n        }, \"series number: + \", i))));\n      }\n\n      return React.createElement(\"div\", {\n        id: \"dicomviewer-grid\",\n        style: {\n          display: 'grid',\n          // gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          // gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }, dicomviewers); // let totalSeries = this.state.totalSeries;\n      // let totalSeriesView = [];\n      // if (totalSeries !== null) {\n      //\n      //   totalSeries.forEach((ts, index) => {\n      //\n      //     totalSeriesView.push(\n      //       <ListItem button>\n      //         <row style={{width: '100%'}}>\n      //           {this.buildLayoutList(index)}\n      //           <p\n      //             style={{padding: 0, margin: '5px 10px 5px 10px'}}\n      //           >\n      //             series number: {ts.seriesNumber}\n      //           </p>\n      //         </row>\n      //       </ListItem>\n      //     );\n      //\n      //     if (this.seriesListDicomViewersRefs[index]) {\n      //       this.seriesListDicomViewersRefs[index].runTool('openImage', 0);\n      //       console.log(\"jjjjjjjjjjjjjj   \" + index);\n      //     }\n      //\n      //     console.log(\"@@@@@@   \" + index + \"   \" + this.state.seriesListDicomViewers.length);\n      //\n      //   });\n      //\n      // }\n      //\n      //\n      // return (\n      //   <div\n      //     key={index}\n      //     style={styleLayoutGrid}\n      //     // onClick={() => this.layoutGridClick(index)}\n      //     // onTouchStart={() => this.layoutGridTouch(index)}\n      //   >\n      //     {this.seriesListDicomViewersRefs[index]}\n      //   </div>\n      // )\n    };\n\n    this.getFileName = dcmViewer => {\n      return dcmViewer.filename;\n      /*if (dcmViewer.fsItem !== null) {\n      return dcmViewer.fsItem.name\n      } else if (dcmViewer.localfile !== null) {\n      return getFileNameCorrect(dcmViewer.localfile.name)\n      } else {\n      return dcmViewer.localurl.substring(dcmViewer.localurl.lastIndexOf('/')+1)\n      }*/\n    };\n\n    this.getStringVisiblePlane = () => {\n      if (this.state.visibleMprOrthogonal) return 'orthogonal';else if (this.state.visibleMprSagittal) return 'sagittal';else if (this.state.visibleMprAxial) return 'axial';else if (this.state.visibleMprCoronal) return 'coronal';\n    };\n\n    this.appBarTitle = (classes, isOpen, dcmViewer) => {\n      if (isMobile && !isTablet) {\n        if (isOpen) return null;else return React.createElement(Typography, {\n          variant: \"overline\",\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1217\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1218\n          },\n          __self: this\n        }, \"U\"), \"niversal \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1218\n          },\n          __self: this\n        }, \"D\"), \"icom \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1218\n          },\n          __self: this\n        }, \"V\"), \"iewer\");\n      } else {\n        if (isOpen) {\n          const plane = this.getStringVisiblePlane();\n\n          if (this.state.sliceMax > 1 && this.mprPlane !== plane && this.mprPlane !== '') {\n            return React.createElement(Typography, {\n              variant: \"overline\",\n              className: classes.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1226\n              },\n              __self: this\n            }, 'MPR ' + plane);\n          }\n\n          return React.createElement(Typography, {\n            variant: \"overline\",\n            className: classes.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1232\n            },\n            __self: this\n          }, this.getFileName(dcmViewer));\n        } else if (this.props.dicomdir !== null) {\n          return React.createElement(Typography, {\n            variant: \"overline\",\n            className: classes.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1238\n            },\n            __self: this\n          }, this.props.dicomdir.dicomdir.webkitRelativePath);\n        } else return React.createElement(Typography, {\n          variant: \"overline\",\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1244\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1245\n          },\n          __self: this\n        }, \"U\"), \"niversal \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1245\n          },\n          __self: this\n        }, \"D\"), \"icom \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1245\n          },\n          __self: this\n        }, \"V\"), \"iewer\");\n      }\n    };\n\n    this.getImageOrientationZ = image => {\n      const iop = image.data.string('x00200037').split('\\\\'); // Image Orientation Patient\n\n      let v = new Array(3).fill(0).map(() => new Array(3).fill(0));\n      v[0][0] = parseFloat(iop[0]); // the x direction cosines of the first row X\n\n      v[0][1] = parseFloat(iop[1]); // the y direction cosines of the first row X\n\n      v[0][2] = parseFloat(iop[2]); // the z direction cosines of the first row X\n\n      v[1][0] = parseFloat(iop[3]); // the x direction cosines of the first column Y\n\n      v[1][1] = parseFloat(iop[4]); // the y direction cosines of the first column Y\n\n      v[1][2] = parseFloat(iop[5]); // the z direction cosines of the first column Y\n      //console.log('getImageOrientationZ: ', v[1][2])\n\n      return v[1][2];\n    };\n\n    this.mprBuildVolume = () => {\n      if (this.volume.length > 0) return;\n      this.t0 = performance.now();\n      const files = this.props.files;\n      const xPixelSpacing = getPixelSpacing(files[0].image, 0);\n      const spacingBetweenSlice = getSpacingBetweenSlice(files[0].image);\n      const sliceThickness = getSliceThickness(files[0].image);\n      const length = files[0].image.getPixelData().length;\n      const sliceLocation = getSliceLocation(files[0].image);\n      this.volume = []; // see https://stackoverflow.com/questions/58412358/dicom-multiplanar-image-reconstruction\n\n      this.mprData.zDim = Math.round(files.length * spacingBetweenSlice / xPixelSpacing); //console.log('this.mprData.zDim: ', this.mprData.zDim)\n      //console.log('spacingBetweenSlice: ', spacingBetweenSlice)\n      //console.log('sliceThickness: ', sliceThickness)\n      //console.log('xPixelSpacing: ', xPixelSpacing)\n      //console.log('getSliceLocation: ', sliceLocation)\n      // If spacing between slices is less than slice thickness, the images are not optimal for 3D reconstruction.\n      // Try an alternative algorithm based on slice distance.\n\n      let zDimMethod2 = false;\n\n      if (spacingBetweenSlice < sliceThickness && sliceLocation === undefined) {\n        let max = 0;\n        let min = 0;\n\n        for (let i = 0; i < files.length; i++) {\n          if (files[i].sliceDistance > max) max = files[i].sliceDistance;\n          if (files[i].sliceDistance < min) min = files[i].sliceDistance;\n        }\n\n        this.mprData.zDim = Math.round(Math.abs(max - min) / xPixelSpacing); //console.log('method2, this.mprData.zDim: ', this.mprData.zDim)\n\n        zDimMethod2 = true;\n      }\n\n      if (files.length === this.mprData.zDim) {\n        // slices contiguous\n        for (let i = 0, len = files.length; i < len; i++) {\n          this.volume.push(files[i].image.getPixelData());\n        }\n      } else if (files.length < this.mprData.zDim) {\n        // gap between slices\n        let emptyPlane = new Int16Array(length).fill(0);\n\n        for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n          this.volume.push(emptyPlane);\n        }\n\n        let order = [];\n\n        for (let i = 0; i < files.length; i++) {\n          order.push({\n            iFile: i,\n            instanceNumber: files[i].instanceNumber,\n            sliceDistance: files[i].sliceDistance,\n            sliceLocation: files[i].sliceLocation\n          });\n        }\n\n        if (zDimMethod2) {\n          // eliminate eventually duplicates\n          order = order.reduce((previous, current) => {\n            let object = previous.filter(object => object.sliceDistance === current.sliceDistance);\n\n            if (object.length === 0) {\n              previous.push(current);\n            }\n\n            return previous;\n          }, []);\n          order.sort((l, r) => {\n            // return r.sliceDistance - l.sliceDistance\n            return l.instanceNumber - r.instanceNumber;\n          }); //console.log('order: ', order)\n        } else {\n          // const reorder = files[0].sliceDistance < files[1].sliceDistance\n          const reorder = files[0].sliceLocation < files[1].sliceLocation;\n\n          if (reorder) {\n            order.sort((l, r) => {\n              // return l.instanceNumber - r.instanceNumber\n              // return r.sliceDistance - l.sliceDistance\n              return r.sliceLocation - l.sliceLocation;\n            }); //console.log('reorder: ')\n          }\n        }\n        /*if (this.getImageOrientationZ(files[0].image) < 0) {\n        order.sort((l, r) => {\n        return r.instanceNumber - l.instanceNumber\n        // return r.sliceDistance - l.sliceDistance\n        })\n        console.log('reorder 2: ')\n        }*/\n\n\n        let intervals = [0];\n        this.volume[0] = files[order[0].iFile].image.getPixelData();\n        this.volume[this.mprData.zDim - 1] = files[order[order.length - 1].iFile].image.getPixelData();\n        const step = (this.mprData.zDim - 2) / (order.length - 2);\n        let i = 0;\n\n        for (let k = 1; k <= order.length - 2; k++) {\n          i = Math.ceil(i + step); //console.log(`i: ${i},  k: ${k},  order[k].iFile: ${order[k].iFile}`)\n\n          this.volume[i] = files[order[k].iFile].image.getPixelData(); // order[k-1].iFile\n\n          intervals.push(i);\n        }\n\n        intervals.push(this.mprData.zDim - 1);\n        console.log('intervals: ', intervals); //console.log('this.volume: ', this.volume)\n\n        const interpolationMethod = getSettingsMprInterpolation();\n\n        if (interpolationMethod === 'no') {\n          // build missing planes without interpolation, simple duplicate\n          for (let i = 0; i < intervals.length - 1; i++) {\n            //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n            for (let j = intervals[i] + 1; j <= intervals[i + 1] - 1; j++) {\n              //console.log(`j: ${j}`)\n              this.volume[j] = this.volume[intervals[i + 1]];\n            }\n          }\n        } else if (interpolationMethod === 'weightedlinear') {\n          // build the interpolate planes between original planes\n          for (let i = 0; i < intervals.length - 1; i++) {\n            //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n            const step = intervals[i + 1] - intervals[i];\n\n            for (let j = intervals[i] + 1; j < intervals[i + 1]; j++) {\n              //console.log(`i: ${i}, intervals[i]: ${intervals[i]}, j: ${j}`)\n              let p = new Int16Array(length);\n              const w = (j - intervals[i]) / step;\n\n              for (let k = 0; k < length - 1; k++) {\n                // simple linear interpolation\n                // const p0 = this.volume[intervals[i]][k]\n                // const p1 = this.volume[intervals[i+1]][k]\n                // p[k] = (p0+p1)/2\n                // weighted linear interpolation\n                const p0 = this.volume[intervals[i]][k] * (1 - w);\n                const p1 = this.volume[intervals[i + 1]][k] * w;\n                p[k] = p0 + p1;\n\n                if (p0 === undefined || p1 === undefined) {\n                  console.log('undefined');\n                } // weighted bilinear interpolation\n\n                /*if (k-1 > 0 && k+1 < length) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.5 + this.volume[intervals[i]][k-1] * (1-w) * 0.25 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n                } else if (k-1 < 0) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n                } else { // k+1 > length\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k-1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25\n                p[k] = p0+p1\n                }*/\n\n              }\n\n              this.volume[j] = p;\n            }\n          }\n        }\n\n        this.t1 = performance.now();\n        console.log(`performance volume building: ${this.t1 - this.t0} milliseconds`);\n      } else {\n        // overlapping slices\n        this.mprData.zStep = files.length / this.mprData.zDim; //console.log('this.mprData.zStep: ', this.mprData.zStep)\n\n        for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n          const k = Math.round(i * this.mprData.zStep);\n          this.volume.push(files[k].image.getPixelData());\n        }\n      }\n\n      if (this.state.visibleMprOrthogonal) {\n        this.changeToOrthogonalView();\n      } else if (this.state.visibleMprSagittal) {\n        this.changeToSagittalView();\n      } else if (this.state.visibleMprCoronal) {\n        this.changeToCoronalView();\n      } else {\n        // axial\n        this.changeToAxialView();\n      }\n    };\n\n    this.changeToOrthogonalView = () => {\n      this.changeLayout(1, 3);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        const index = Math.round(this.props.files.length / 2);\n        if (this.dicomViewersRefs[0].volume === null) this.dicomViewersRefs[0].volume = this.volume;\n        this.mprSliceIndex[0] = index;\n        this.dicomViewersRefs[0].runTool('openimage', index);\n        if (this.dicomViewersRefs[1].volume === null) this.dicomViewersRefs[1].volume = this.volume;\n        const xzIndex = Math.round(this.props.files[0].image.columns / 2);\n        this.mprSliceIndex[1] = xzIndex;\n        this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, xzIndex, this.mprData);\n        if (this.dicomViewersRefs[2].volume === null) this.dicomViewersRefs[2].volume = this.volume;\n        const yzIndex = Math.round(this.props.files[0].image.rows / 2);\n        this.mprSliceIndex[2] = yzIndex;\n        this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, yzIndex, this.mprData);\n      });\n    };\n\n    this.changeToSagittalView = () => {\n      this.changeLayout(1, 1);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null) this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume; //console.log('mprSagittal, this.mprPlanePosition(): ', plane)\n\n        if (plane === 'sagittal') {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n        } else if (plane === 'axial') {\n          const sliceMax = this.props.files[0].image.columns;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        } else {\n          const sliceMax = this.props.files[0].image.rows;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        }\n      });\n    };\n\n    this.changeToCoronalView = () => {\n      this.changeLayout(1, 1);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null) this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume; //console.log('mprCoronal, this.mprPlanePosition(): ', plane)\n\n        if (plane === 'coronal') {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n        } else if (plane === 'axial') {\n          const sliceMax = this.props.files[0].image.columns;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        } else {\n          // plane is sagittal\n          const sliceMax = this.props.files[0].image.rows;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        }\n      });\n    };\n\n    this.changeToAxialView = () => {\n      this.changeLayout(1, 1);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null) this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume; //console.log('mprAxial, this.mprPlanePosition(): ', plane)\n\n        if (plane === 'axial') {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n        } else if (plane === 'sagittal') {\n          const sliceMax = this.props.files[0].image.columns;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        } else {\n          const sliceMax = this.props.files[0].image.rows;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        }\n      });\n    };\n\n    this.mprPlanePosition = () => {\n      if (this.mprPlane === '') {\n        this.mprPlane = this.dicomViewersRefs[this.props.activeDcmIndex].mprPlanePosition();\n      }\n\n      return this.mprPlane;\n    };\n\n    this.mprOrthogonal = () => {\n      const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n\n      if (!visibleMprOrthogonal) {\n        const index = Math.round(this.props.files.length / 2); //console.log('mprOrthogonal, index: ', index)\n\n        this.setState({\n          sliceIndex: index\n        });\n        this.setState({\n          visibleMprOrthogonal: true,\n          visibleMprCoronal: false,\n          visibleMprSagittal: false,\n          visibleMprAxial: false\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToOrthogonalView();\n          }\n        });\n      }\n    };\n\n    this.mprSagittal = () => {\n      const visibleMprSagittal = this.state.visibleMprSagittal;\n\n      if (!visibleMprSagittal) {\n        this.setState({\n          visibleMprOrthogonal: false,\n          visibleMprSagittal: true,\n          visibleMprCoronal: false,\n          visibleMprAxial: false\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToSagittalView();\n          }\n        });\n      }\n    };\n\n    this.mprCoronal = () => {\n      const visibleMprCoronal = this.state.visibleMprCoronal;\n\n      if (!visibleMprCoronal) {\n        this.setState({\n          visibleMprOrthogonal: false,\n          visibleMprSagittal: false,\n          visibleMprCoronal: true,\n          visibleMprAxial: false\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToCoronalView();\n          }\n        });\n      }\n    };\n\n    this.mprAxial = () => {\n      const visibleMprAxial = this.state.visibleMprAxial;\n\n      if (!visibleMprAxial) {\n        this.setState({\n          visibleMprOrthogonal: false,\n          visibleMprSagittal: false,\n          visibleMprCoronal: false,\n          visibleMprAxial: true\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToAxialView();\n          }\n        });\n      }\n    };\n\n    this.listOpenFilesFirstFrame = () => {\n      const index = 0; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesPreviousFrame = () => {\n      let index = this.state.sliceIndex;\n      index = index === 0 ? this.state.sliceMax - 1 : index - 1; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesNextFrame = () => {\n      let index = this.state.sliceIndex;\n      index = index === this.state.sliceMax - 1 ? 0 : index + 1; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesLastFrame = () => {\n      const index = this.state.sliceMax - 1; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesScrolling = () => {\n      const scrolling = this.state.listOpenFilesScrolling;\n      this.setState({\n        listOpenFilesScrolling: !scrolling\n      }, () => {\n        if (scrolling) {\n          clearInterval(this.timerScrolling);\n        } else {\n          this.timerScrolling = setInterval(() => {\n            this.listOpenFilesNextFrame();\n          }, 500);\n        }\n      });\n    };\n\n    this.handleSliceChange = (event, value) => {\n      console.log('slice value: ', Math.floor(value));\n      this.setState({\n        sliceIndex: Math.floor(value)\n      }, () => {\n        let index = this.state.sliceIndex;\n        this.props.setLocalFileStore(this.files[index]);\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.files = [];\n    this.file = null;\n    this.url = null;\n    this.mprData = {};\n    this.mprPlane = '';\n    this.volume = [];\n    this.mprSliceIndex = [0, 0, 0];\n    this.fileOpen = React.createRef();\n    this.showFileOpen = this.showFileOpen.bind(this);\n    this.openDicomdir = React.createRef();\n    this.showOpenDicomdir = this.showOpenDicomdir.bind(this);\n    this.openFolder = React.createRef();\n    this.showOpenFolder = this.showOpenFolder.bind(this);\n    this.openUrlField = React.createRef();\n    this.dicomViewersRefs = [];\n    this.dicomViewers = [];\n\n    for (let i = 0; i < 16; i++) {\n      this.dicomViewers.push(this.setDcmViewer(i, 'grid'));\n    }\n\n    this.seriesListDicomViewersRefs = [];\n    this.seriesListDicomViewers = [];\n  }\n\n  showFileOpen() {\n    this.props.isOpenStore(false);\n    this.fileOpen.current.click();\n  }\n\n  showOpenFolder() {\n    this.openFolder.current.click();\n  }\n\n  showOpenDicomdir() {\n    this.openDicomdir.current.click();\n  }\n\n  handleOpenFolder(files) {\n    console.log('handleOpenFolder: ', files);\n\n    for (let i = 0; i < files.length; i++) {\n      this.files.push(files[i]);\n    }\n\n    let seriesNumberList = [];\n    let _totalSeries = [];\n    this.seriesListDicomViewers = [];\n    let seriesCounter = 0;\n\n    for (let i = 0; i < files.length; i++) {\n      if (files[i] !== undefined) {\n        let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n        cornerstone.loadAndCacheImage(imageId).then(image => {\n          let fileImageSeriesNumber = image.data.string('x00200011'); // if found new series do:\n\n          if (!seriesNumberList.includes(fileImageSeriesNumber)) {\n            seriesNumberList.push(fileImageSeriesNumber);\n\n            _totalSeries.push({\n              seriesNumber: fileImageSeriesNumber,\n              images: [image],\n              files: [files[i]]\n            });\n\n            this.seriesListDicomViewers.push(this.setDcmViewer(seriesCounter, 'list')); // this.seriesListDicomViewersRefs[seriesCounter].runTool('openimage', 0);\n\n            seriesCounter = seriesCounter + 1;\n          } else {\n            _totalSeries.forEach(ts => {\n              if (ts.seriesNumber === fileImageSeriesNumber) {\n                ts.images.push(image);\n                ts.files.push(files[i]);\n              }\n            });\n          }\n        });\n      }\n    }\n\n    console.log(\"LENGTH \" + _totalSeries.length); // for (let i = 0; i < files.length; i++) {\n    //   if (files[i] !== undefined) {\n    //     let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n    //     cornerstone.loadAndCacheImage(imageId).then(image => {\n    //       let fileImageSeriesNumber = image.data.string('x00200011');\n    //\n    //       if(seriesNumber.includes(fileImageSeriesNumber)){\n    //         _totalSeries.forEach(series => {\n    //           if(series[0].data.string('x00200011') === fileImageSeriesNumber){\n    //             series.push(image);\n    //           }\n    //         });\n    //       }else{\n    //         seriesNumber.push(image.data.string('x00200011'));\n    //\n    //         let newSeries = [];\n    //         newSeries.push(image);\n    //         _totalSeries.push(newSeries);\n    //       }\n    //\n    //     });\n    //   }\n    // }\n\n    this.changeLayout(1, 1);\n    this.mprPlane = '';\n    this.volume = [];\n\n    for (let i = 0; i < 16; i++) if (this.dicomViewersRefs[i] !== undefined) {// this.dicomViewersRefs[i].runTool('clear')\n    }\n\n    this.setState({\n      totalSeries: _totalSeries,\n      seriesListDicomViewers: this.seriesListDicomViewers,\n      sliceIndex: 0,\n      sliceMax: 1,\n      visibleMprOrthogonal: false,\n      visibleMprCoronal: false,\n      visibleMprSagittal: false,\n      visibleMprAxial: false\n    }, () => {\n      this.setState({\n        visibleOpenMultipleFilesDlg: true\n      });\n    });\n  }\n\n  handleOpenDicomdir(files) {\n    this.setState({\n      visibleDicomdir: false\n    }, () => {\n      let dicomdir = null;\n      let datafiles = [];\n\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].webkitRelativePath.includes('DICOMDIR')) {\n          dicomdir = files[i];\n        } else {\n          datafiles.push(files[i]);\n        }\n      }\n\n      if (dicomdir !== null) {\n        this.props.setDicomdirStore({\n          origin: 'local',\n          dicomdir: dicomdir,\n          files: datafiles\n        });\n        this.toggleDicomdir();\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Need to set the renderNode since the drawer uses an overlay\n    //this.dialog = document.getElementById('drawer-routing-example-dialog')\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    //console.log('App render: ')\n    const classes = this.props.classes;\n    const primaryClass = {\n      primary: classes.listItemText\n    };\n    const iconSize = '1.2rem';\n    const isOpen = this.props.isOpen[this.props.activeDcmIndex];\n    const isDicomdir = this.props.dicomdir !== null;\n    const isMultipleFiles = this.props.files === null ? false : this.props.files.length > 1;\n    const openMenu = this.state.openMenu;\n    const openImageEdit = this.state.openImageEdit; // const openTools = this.state.openTools;\n\n    const openMpr = this.state.openMpr && isMultipleFiles && this.mprPlane !== ''; // const visibleMainMenu = this.state.visibleMainMenu;\n\n    const visibleHeader = this.state.visibleHeader;\n    const visibleSettings = this.state.visibleSettings;\n    const visibleAbout = this.state.visibleAbout;\n    const visibleMeasure = this.state.visibleMeasure;\n    const visibleToolbox = this.state.visibleToolbox;\n    const visibleDicomdir = this.state.visibleDicomdir;\n    const visibleFileManager = this.state.visibleFileManager;\n    const visibleClearMeasureDlg = this.state.visibleClearMeasureDlg;\n    const visibleZippedFileDlg = this.state.visibleZippedFileDlg;\n    const visibleDownloadZipDlg = this.state.visibleDownloadZipDlg;\n    const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg; // const visibleLayout = Boolean(this.state.anchorElLayout);\n\n    const visibleVolumeBuilding = this.state.visibleVolumeBuilding;\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    const visibleMprAxial = this.state.visibleMprAxial;\n    let iconToolColor = this.state.toolState === 1 ? '#FFFFFF' : '#999999';\n    const dcmViewer = this.getActiveDcmViewer(); // const sliceMax = this.state.sliceMax;\n\n    const anchorEl = this.state.anchorEl;\n    const anchorElMpr = this.state.anchorElMpr;\n    const anchorElImageEdit = this.state.anchorElImageEdit;\n    const visibleSeries = this.state.visibleSeries;\n    const anchorElLayout = this.state.anchorElLayout; // const openLayout = this.state.openLayout;\n\n    let totalSeries = this.state.totalSeries;\n    let totalSeriesView = null;\n\n    if (totalSeries !== null) {\n      totalSeriesView = this.buildLayoutList(); // totalSeries.forEach((ts, index) => {\n      //\n      //   // totalSeriesView = this.buildLayoutList();\n      //   // totalSeriesView.push(\n      //   //   <ListItem button>\n      //   //     <row style={{width: '100%'}}>\n      //   //       {this.buildLayoutList(index)}\n      //   //       <p\n      //   //         style={{padding: 0, margin: '5px 10px 5px 10px'}}\n      //   //       >\n      //   //         series number: {ts.seriesNumber}\n      //   //       </p>\n      //   //     </row>\n      //   //   </ListItem>\n      //   // );\n      //\n      //   if (this.seriesListDicomViewersRefs[index]) {\n      //     this.seriesListDicomViewersRefs[index].runTool('openImage', 0);\n      //     console.log(\"jjjjjjjjjjjjjj   \" + index);\n      //   }\n      //\n      //   console.log(\"@@@@@@   \" + index + \"   \" + this.state.seriesListDicomViewers.length);\n      //\n      // });\n    } //console.log('this.dicomViewersRefs: ', this.dicomViewersRefs)\n    //console.log('isMultipleFiles: ', isMultipleFiles)\n    //console.log('this.mprPlane: ', this.mprPlane)\n\n\n    const handleClick = event => {\n      this.setState({\n        anchorElLayout: event.currentTarget\n      });\n    };\n\n    const handleClose = () => {\n      this.setState({\n        anchorElLayout: null\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1836\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      position: \"static\",\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      variant: \"dense\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1838\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      className: classes.menuButton,\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: this.toggleSeriesMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1839\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiViewList,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1845\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      orientation: \"vertical\",\n      style: {\n        display: 'list-item',\n        backgroundColor: '#fff'\n      },\n      flexItem: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \"File Manager\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1854\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toggleFileManager(),\n      style: {\n        marginLeft: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileCabinet,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1860\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Open\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1863\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: event => this.toggleOpenMenu(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1864\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderMultiple,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1865\n      },\n      __self: this\n    }), openMenu ? React.createElement(ExpandLess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1866\n      },\n      __self: this\n    }) : React.createElement(ExpandMore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1866\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: openMenu,\n      anchorEl: anchorEl,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      style: {\n        backgroundColor: '#6c5c89'\n      },\n      placement: 'center-top',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1869\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1879\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        backgroundColor: '#6c5c89',\n        borderRadius: '0 0 4px 4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: event => this.toggleOpenMenu(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1886\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      autoFocusItem: openMenu,\n      style: {\n        padding: '0'\n      },\n      id: \"menu-list-grow\",\n      onKeyDown: event => this.toggleOpenMenu(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1887\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showFileOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1894\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1895\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolder,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1895\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1899\n        },\n        __self: this\n      }, \"File\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1896\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showOpenUrl(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1907\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1908\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiWeb,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1908\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1912\n        },\n        __self: this\n      }, \"URL\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1909\n      },\n      __self: this\n    })), isInputDirSupported() && !isMobile ? React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showOpenFolder(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1918\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1919\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderOpen,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1919\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1923\n        },\n        __self: this\n      }, \"Folder\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1920\n      },\n      __self: this\n    })) : null, isInputDirSupported() && !isMobile ? React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showOpenDicomdir(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1933\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1934\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderOpen,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1934\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1938\n        },\n        __self: this\n      }, \"DICOMDIR\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1935\n      },\n      __self: this\n    })) : null))))), React.createElement(Tooltip, {\n      title: \"Clear All\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1955\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1956\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiDelete,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1957\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Layout\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1960\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1961\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiViewGridPlusOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1962\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: Boolean(anchorElLayout),\n      anchorEl: anchorElLayout,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      style: {\n        backgroundColor: '#6c5c89',\n        marginTop: '3px'\n      },\n      placement: 'center-top',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1965\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1975\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        backgroundColor: '#6c5c89',\n        borderRadius: '0 0 4px 4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1979\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1985\n      },\n      __self: this\n    }, React.createElement(LayoutTool, {\n      row: this.props.layout[0] - 1,\n      col: this.props.layout[1] - 1,\n      onChange: this.changeLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1986\n      },\n      __self: this\n    }))))), React.createElement(Tooltip, {\n      title: \"Settings\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1998\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.showSettings(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1999\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiSettings,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2000\n      },\n      __self: this\n    }))), React.createElement(Typography, {\n      variant: \"overline\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2004\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2005\n      },\n      __self: this\n    }, \"D\"), \"icom \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2005\n      },\n      __self: this\n    }, \"V\"), \"iewer\"), !isOpen && !isDicomdir ? React.createElement(IconButton, {\n      onClick: this.showAbout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2013\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiInformationOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2014\n      },\n      __self: this\n    })) : null, iconTool !== null && this.props.tool !== null && isOpen ? React.createElement(IconButton, {\n      onClick: this.toolChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2019\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: iconTool,\n      size: iconSize,\n      color: iconToolColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2020\n      },\n      __self: this\n    })) : null, isOpen && dcmViewer.numberOfFrames > 1 && isOpen ? React.createElement(IconButton, {\n      onClick: this.cinePlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2025\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiVideo,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2026\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      onClick: this.resetImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2031\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiRefresh,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2032\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.saveShot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2037\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCamera,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2038\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleToolbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2043\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiToolbox,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2044\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2049\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileCad,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2050\n      },\n      __self: this\n    })) : null, isOpen && dcmViewer.isDicom ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2055\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileDocument,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2056\n      },\n      __self: this\n    })) : null, isDicomdir ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleDicomdir,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2061\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderOpen,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2062\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleFileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2067\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileCabinet,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2068\n      },\n      __self: this\n    })) : null)), React.createElement(Card, {\n      className: classes.toolbarCard,\n      position: \"fixed\",\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2075\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      variant: \"dense\",\n      style: {\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2076\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Histogram\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2078\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toggleToolbox(),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2079\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiChartHistogram,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2080\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"MPR\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2084\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: event => this.toggleMpr(event),\n      disabled: !isOpen || !isMultipleFiles || this.mprPlane === '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2085\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiAxisArrow,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2087\n      },\n      __self: this\n    }), openMpr ? React.createElement(ExpandMore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2088\n      },\n      __self: this\n    }) : React.createElement(ExpandLess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2088\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: openMpr,\n      anchorEl: anchorElMpr,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2092\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2097\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2101\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: () => this.toggleMpr(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      dense: true,\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2103\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprOrthogonal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2104\n      },\n      __self: this\n    }, visibleMprOrthogonal ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2106\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2107\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprOrthogonal ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2115\n        },\n        __self: this\n      }, \"Orthogonal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2111\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprCoronal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2120\n      },\n      __self: this\n    }, visibleMprCoronal ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2122\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2122\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprCoronal ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2128\n        },\n        __self: this\n      }, \"Coronal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2124\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprSagittal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2133\n      },\n      __self: this\n    }, visibleMprSagittal ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2135\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2135\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprSagittal ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2141\n        },\n        __self: this\n      }, \"Sagittal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2137\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprAxial(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2145\n      },\n      __self: this\n    }, visibleMprAxial ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2147\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2147\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprAxial ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2153\n        },\n        __self: this\n      }, \"Axial\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2149\n      },\n      __self: this\n    }))))))), React.createElement(Tooltip, {\n      title: \"Edit\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2165\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: event => this.toggleImageEdit(event) // disabled={!isOpen}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2166\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiImageEdit,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2171\n      },\n      __self: this\n    }), openImageEdit ? React.createElement(ExpandMore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2172\n      },\n      __self: this\n    }) : React.createElement(ExpandLess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2172\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: Boolean(anchorElImageEdit),\n      anchorEl: anchorElImageEdit,\n      role: undefined,\n      transition: true,\n      style: {\n        backgroundColor: '#6C5C89'\n      },\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2193\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2202\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        backgroundColor: '#6C5C89'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2206\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: event => this.toggleImageEdit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2207\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      dense: true,\n      component: \"div\",\n      style: {\n        padding: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2208\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.toolExecute('Invert'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2209\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2210\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiInvertColors,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2210\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: \"Invert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2211\n      },\n      __self: this\n    }))))))), React.createElement(Divider, {\n      orientation: \"vertical\",\n      style: {\n        display: 'list-item',\n        backgroundColor: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2220\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \"No tool\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2222\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('notool'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2223\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCursorDefault,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2225\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"WW/WC\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2228\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Wwwc'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2229\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiArrowAll,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2231\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Pan\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2234\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Pan'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2235\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCursorPointer,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2236\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Zoom\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2239\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Zoom'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2240\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiMagnify,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2242\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Magnify\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2245\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Magnify'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2246\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheckboxIntermediate,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2248\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Length\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2252\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Length'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2253\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiRuler,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2255\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Probe\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2258\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Probe'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2259\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiEyedropper,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2261\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Angle\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2264\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Angle'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2265\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiAngleAcute,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2267\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Elliptical Roi\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2270\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('EllipticalRoi'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2271\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiEllipse,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2273\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Rectangle Roi\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2276\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('RectangleRoi'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2277\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiRectangle,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2279\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Freehand Roi\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2282\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('FreehandRoi'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2283\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiGesture,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2285\n      },\n      __self: this\n    }))))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      open: visibleSeries,\n      style: {\n        position: 'relative',\n        zIndex: 1\n      },\n      onClose: this.toggleSeriesMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2292\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      style: {\n        marginTop: '48px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2298\n      },\n      __self: this\n    }, React.createElement(List, {\n      dense: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2299\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      onClick: () => this.showAppBar(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2300\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2301\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiArrowLeftCircle,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2301\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: \"Hide Series\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2302\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2304\n      },\n      __self: this\n    }), totalSeries ? totalSeriesView : React.createElement(\"p\", {\n      style: {\n        padding: 0,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2307\n      },\n      __self: this\n    }, \"nothing\")))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: visibleHeader,\n      onClose: this.toggleHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2569\n      },\n      __self: this\n    }, visibleHeader ? React.createElement(DicomHeader, {\n      dcmViewer: dcmViewer,\n      classes: classes,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2575\n      },\n      __self: this\n    }) : null), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: visibleMeasure,\n      onClose: this.toggleMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2578\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: '48px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2584\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      variant: \"dense\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2585\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2586\n      },\n      __self: this\n    }, \"Measurements\\xA0\\xA0\"), React.createElement(\"div\", {\n      className: classes.grow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2589\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.saveMeasure,\n      edge: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2590\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiContentSaveOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2591\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.clearMeasure,\n      edge: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2593\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiTrashCanOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2594\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2597\n      },\n      __self: this\n    }, isOpen ? React.createElement(Measurements, {\n      dcmViewer: dcmViewer,\n      toolRemove: this.toolRemove,\n      classes: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2598\n      },\n      __self: this\n    }) : null))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: visibleToolbox,\n      onClose: this.toggleToolbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2603\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: '48px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2609\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2610\n      },\n      __self: this\n    }, isOpen ? React.createElement(Histogram, {\n      key: this.getFileName(dcmViewer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2611\n      },\n      __self: this\n    }) : null))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: getSettingsDicomdirView(),\n      open: visibleDicomdir,\n      onClose: this.toggleDicomdir,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2616\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2622\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2623\n      },\n      __self: this\n    }, visibleDicomdir ? React.createElement(Dicomdir, {\n      onOpenFile: this.handleOpenFileDicomdir,\n      onOpenFs: this.handleOpenSandboxFs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2625\n      },\n      __self: this\n    }) : null))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: getSettingsFsView(),\n      open: visibleFileManager,\n      onClose: this.toggleFileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2630\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2636\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2637\n      },\n      __self: this\n    }, visibleFileManager ? React.createElement(FsUI, {\n      onOpen: this.handleOpenSandboxFs,\n      onOpenImage: this.handleOpenImage,\n      onOpenMultipleFilesCompleted: this.openMultipleFilesCompleted,\n      onOpenDicomdir: this.handleOpenFsDicomdir,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2639\n      },\n      __self: this\n    }) : null))), visibleSettings ? React.createElement(Settings, {\n      onClose: this.hideSettings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2651\n      },\n      __self: this\n    }) : null, visibleAbout ? React.createElement(AboutDlg, {\n      onClose: this.showAbout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2653\n      },\n      __self: this\n    }) : null, visibleDownloadZipDlg ? React.createElement(DownloadZipDlg, {\n      onClose: this.hideDownloadZipDlg,\n      url: this.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2655\n      },\n      __self: this\n    }) : null, visibleOpenMultipleFilesDlg ? React.createElement(OpenMultipleFilesDlg, {\n      onClose: this.hideOpenMultipleFilesDlg,\n      files: this.files,\n      origin: 'local',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2658\n      },\n      __self: this\n    }) : null, React.createElement(Dialog, {\n      open: visibleClearMeasureDlg,\n      onClose: this.hideClearMeasureDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2660\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2664\n      },\n      __self: this\n    }, \"Are you sure to remove all the measurements?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2665\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hideClearMeasureDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2666\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.confirmClearMeasureDlg,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2669\n      },\n      __self: this\n    }, \"Ok\"))), React.createElement(Dialog, {\n      open: visibleZippedFileDlg,\n      onClose: this.hideZippedFileDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2675\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2679\n      },\n      __self: this\n    }, \"This is a zipped file, would you import into sandbox file system?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2680\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hideZippedFileDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2681\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.confirmZippedFileDlg,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2684\n      },\n      __self: this\n    }, \"Ok\"))), React.createElement(Dialog, {\n      open: this.state.visibleOpenUrl,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2690\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2694\n      },\n      __self: this\n    }, \"Open URL\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2695\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2696\n      },\n      __self: this\n    }, \"Insert an URL to download a DICOM or image file:\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"id-open-url\",\n      inputRef: input => this.openUrlField = input,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2699\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2707\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.hideOpenUrl(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2708\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => this.hideOpenUrl(true),\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2711\n      },\n      __self: this\n    }, \"Ok\"))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: visibleVolumeBuilding,\n      autoHideDuration: 6000,\n      message: \"Volume building, wait please ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2738\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: 'calc(100vh - 48px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2748\n      },\n      __self: this\n    }, this.buildLayoutGrid()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2752\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file_open\",\n      style: {\n        display: \"none\"\n      },\n      ref: this.fileOpen,\n      onChange: e => this.handleOpenLocalFs(e.target.files),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2753\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2763\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file_dicomdir\",\n      style: {\n        display: \"none\"\n      },\n      ref: this.openDicomdir,\n      onChange: e => this.handleOpenDicomdir(e.target.files),\n      webkitdirectory: \"\",\n      mozdirectory: \"\",\n      directory: \"\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2764\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2774\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file_folder\",\n      style: {\n        display: \"none\"\n      },\n      ref: this.openFolder,\n      onChange: e => this.handleOpenFolder(e.target.files),\n      webkitdirectory: \"\",\n      mozdirectory: \"\",\n      directory: \"\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2775\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    localFileStore: state.localFileStore,\n    files: state.files,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    dicomdir: state.dicomdir,\n    fsZippedFile: state.fsZippedFile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearingStore: () => dispatch(clearStore()),\n    setLocalFileStore: file => dispatch(localFileStore(file)),\n    toolStore: tool => dispatch(dcmTool(tool)),\n    isOpenStore: value => dispatch(dcmIsOpen(value)),\n    setActiveDcm: dcm => dispatch(activeDcm(dcm)),\n    setActiveDcmIndex: index => dispatch(activeDcmIndex(index)),\n    setActiveMeasurements: measurements => dispatch(activeMeasurements(measurements)),\n    setLayoutStore: (row, col) => dispatch(setLayout(row, col)),\n    setDicomdirStore: dicomdir => dispatch(setDicomdir(dicomdir)),\n    setFsZippedFile: file => dispatch(setZippedFile(file)),\n    setVolumeStore: file => dispatch(setVolume(file)),\n    setFilesStore: files => dispatch(filesStore(files))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App));","map":{"version":3,"sources":["/media/mohammad/work/websites/cornerstone/dicom-viewer/src/App.js"],"names":["React","PureComponent","withStyles","connect","Dicomdir","DicomViewer","DicomHeader","Measurements","Settings","AboutDlg","Histogram","LayoutTool","FsUI","DownloadZipDlg","OpenMultipleFilesDlg","AppBar","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","Drawer","ExpandLess","ExpandMore","Icon","IconButton","List","ListItem","ListItemIcon","ListItemText","Snackbar","TextField","Toolbar","Typography","SeriesItem","isMobile","isTablet","clearStore","localFileStore","dcmIsOpen","activeDcm","activeDcmIndex","activeMeasurements","setLayout","dcmTool","setDicomdir","setZippedFile","setVolume","filesStore","log","getPixelSpacing","getSpacingBetweenSlice","getSliceThickness","getSliceLocation","getFileExtReal","isInputDirSupported","getSettingsFsView","getSettingsDicomdirView","getSettingsMprInterpolation","mdiAngleAcute","mdiArrowAll","mdiAxisArrow","mdiCamera","mdiChartHistogram","mdiCheck","mdiCheckboxIntermediate","mdiContentSaveOutline","mdiCursorDefault","mdiCursorPointer","mdiDelete","mdiEllipse","mdiEyedropper","mdiFileCabinet","mdiFileDocument","mdiFileCad","mdiFolder","mdiFolderMultiple","mdiGesture","mdiViewGridPlusOutline","mdiImageEdit","mdiInformationOutline","mdiInvertColors","mdiMagnify","mdiFolderOpen","mdiRefresh","mdiRectangle","mdiRuler","mdiSettings","mdiToolbox","mdiTools","mdiTrashCanOutline","mdiVideo","mdiWeb","mdiPlay","mdiPause","mdiSkipBackward","mdiSkipForward","mdiSkipNext","mdiSkipPrevious","mdiArrowLeft","mdiArrowLeftCircle","mdiViewList","Tooltip","MenuItem","Menu","Popper","Grow","Paper","ClickAwayListener","MenuList","Card","cornerstoneWADOImageLoader","cornerstone","dicomParser","SeriesList","localStorage","setItem","drawerWidth","iconColor","iconTool","styles","theme","body","backgroundColor","palette","common","black","grow","flexGrow","root","display","menuButton","marginRight","spacing","title","textAlign","appBar","position","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","toolbarCard","margin","top","bottom","right","left","appBarShift","marginLeft","width","enteringScreen","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","padding","listItemText","fontSize","App","constructor","props","state","anchorElLayout","openMenu","openImageEdit","openTools","openMpr","openLayout","visibleMainMenu","visibleHeader","visibleSettings","visibleToolbar","visibleOpenUrl","visibleToolbox","visibleMeasure","visibleClearMeasureDlg","visibleAbout","visibleDicomdir","visibleFileManager","visibleZippedFileDlg","visibleDownloadZipDlg","visibleOpenMultipleFilesDlg","toolState","sliceIndex","sliceMax","listOpenFilesScrolling","visibleVolumeBuilding","visibleMprOrthogonal","visibleMprCoronal","visibleMprSagittal","visibleMprAxial","anchorEl","anchorElMpr","anchorElImageEdit","visibleSeries","totalSeries","seriesListDicomViewers","setDcmViewer","index","type","ref","dicomViewersRefs","runTool","changeTool","console","seriesListDicomViewersRefs","files","getDcmViewerRef","getDcmViewer","dicomViewers","getActiveDcmViewer","toggleFileManager","setState","handleOpenLocalFs","filesSelected","length","changeLayout","mprPlane","volume","i","undefined","file","url","setLocalFileStore","handleOpenSandboxFs","fsItem","handleOpenImage","plane","mprPlanePosition","mprRenderXZPlane","filename","mprData","mprRenderYZPlane","handleOpenFileDicomdir","handleOpenFsDicomdir","setDicomdirStore","origin","dicomdir","toggleDicomdir","showAppBar","window","scrollTo","toggleSeriesMenu","toggleMainMenu","showMainMenu","hideMainMenu","handleVisibility","toggleHeader","visible","toggleToolbox","saveMeasure","toggleMeasure","hideMeasure","handleVisibilityMeasure","clearMeasure","showClearMeasureDlg","hideClearMeasureDlg","confirmClearMeasureDlg","showZippedFileDlg","hideZippedFileDlg","confirmZippedFileDlg","setFsZippedFile","showAbout","showSettings","hideSettings","handleVisibilitySettings","hideDownloadZipDlg","hideOpenMultipleFilesDlg","openMultipleFilesCompleted","showOpenUrl","hideOpenUrl","openDlg","openUrlField","value","downloadOpenUrl","resetImage","saveShot","cinePlayer","clear","setFilesStore","clearingStore","handleLayout","event","currentTarget","closeLayout","row","col","layout","layoutGridClick","j","setLayoutStore","toolExecute","tool","toolStore","toolChange","toolRemove","toggleOpenMenu","toggleImageEdit","toggleTools","toggleMpr","mprSliceIndex","setActiveDcmIndex","image","columns","rows","dcmViewer","setActiveMeasurements","measurements","setActiveDcm","element","dicomImage","isDicom","layoutGridTouch","buildLayoutGrid","dicomviewers","styleLayoutGrid","border","push","gridTemplateRows","gridTemplateColumns","height","buildLayoutList","marginTop","getFileName","getStringVisiblePlane","appBarTitle","classes","isOpen","webkitRelativePath","getImageOrientationZ","iop","data","string","split","v","Array","fill","map","parseFloat","mprBuildVolume","t0","performance","now","xPixelSpacing","spacingBetweenSlice","sliceThickness","getPixelData","sliceLocation","zDim","Math","round","zDimMethod2","max","min","sliceDistance","abs","len","emptyPlane","Int16Array","order","iFile","instanceNumber","reduce","previous","current","object","filter","sort","l","r","reorder","intervals","step","k","ceil","interpolationMethod","p","w","p0","p1","t1","zStep","changeToOrthogonalView","changeToSagittalView","changeToCoronalView","changeToAxialView","xzIndex","yzIndex","mprOrthogonal","setTimeout","mprSagittal","mprCoronal","mprAxial","listOpenFilesFirstFrame","listOpenFilesPreviousFrame","listOpenFilesNextFrame","listOpenFilesLastFrame","scrolling","clearInterval","timerScrolling","setInterval","handleSliceChange","floor","fileOpen","createRef","showFileOpen","bind","openDicomdir","showOpenDicomdir","openFolder","showOpenFolder","isOpenStore","click","handleOpenFolder","seriesNumberList","_totalSeries","seriesCounter","imageId","wadouri","fileManager","add","loadAndCacheImage","then","fileImageSeriesNumber","includes","seriesNumber","images","forEach","ts","handleOpenDicomdir","datafiles","componentDidMount","render","primaryClass","primary","iconSize","isDicomdir","isMultipleFiles","iconToolColor","totalSeriesView","handleClick","handleClose","TransitionProps","placement","transformOrigin","borderRadius","Boolean","numberOfFrames","justifyContent","paddingLeft","input","vertical","horizontal","e","target","mapStateToProps","fsZippedFile","mapDispatchToProps","dispatch","dcm","setVolumeStore"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\nimport {connect} from 'react-redux'\nimport Dicomdir from './components/Dicomdir'\nimport DicomViewer from './components/DicomViewer'\nimport DicomHeader from './components/DicomHeader'\nimport Measurements from './components/Measurements'\nimport Settings from './components/Settings'\nimport AboutDlg from './components/AboutDlg'\nimport Histogram from './components/Histogram'\nimport LayoutTool from './components/LayoutTool'\nimport FsUI from './components/FsUI'\nimport DownloadZipDlg from './components/DownloadZipDlg'\nimport OpenMultipleFilesDlg from './components/OpenMultipleFilesDlg'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Icon from '@mdi/react'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport TextField from '@material-ui/core/TextField'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n//import { FixedSizeList } from 'react-window'\n//import {List as ListVirtual} from 'react-virtualized'\nimport SeriesItem from './components/SeriesItem'\nimport {\n  isMobile,\n  isTablet,\n} from 'react-device-detect'\nimport {\n  clearStore,\n  localFileStore,\n  dcmIsOpen,\n  activeDcm,\n  activeDcmIndex,\n  activeMeasurements,\n  setLayout,\n  dcmTool,\n  setDicomdir,\n  setZippedFile,\n  setVolume,\n  filesStore,\n} from './actions/index'\nimport {\n  log,\n  getPixelSpacing,\n  getSpacingBetweenSlice,\n  getSliceThickness,\n  getSliceLocation,\n  //getFileNameCorrect,\n  getFileExtReal,\n  isInputDirSupported,\n  getSettingsFsView,\n  getSettingsDicomdirView,\n  getSettingsMprInterpolation,\n} from './functions'\nimport {\n  mdiAngleAcute,\n  mdiArrowAll,\n  mdiAxisArrow,\n  mdiCamera,\n  mdiChartHistogram,\n  mdiCheck,\n  mdiCheckboxIntermediate,\n  mdiContentSaveOutline,\n  mdiCursorDefault,\n  mdiCursorPointer,\n  mdiDelete,\n  mdiEllipse,\n  mdiEyedropper,\n  mdiFileCabinet,\n  mdiFileDocument,\n  mdiFileCad,\n  mdiFolder,\n  mdiFolderMultiple,\n  mdiGesture,\n  mdiViewGridPlusOutline,\n  mdiImageEdit,\n  mdiInformationOutline,\n  mdiInvertColors,\n  mdiMagnify,\n  mdiFolderOpen,\n  mdiRefresh,\n  mdiRectangle,\n  mdiRuler,\n  mdiSettings,\n  mdiToolbox,\n  mdiTools,\n  mdiTrashCanOutline,\n  mdiVideo,\n  mdiWeb,\n\n  mdiPlay,\n  mdiPause,\n  mdiSkipBackward,\n  mdiSkipForward,\n  mdiSkipNext,\n  mdiSkipPrevious, mdiArrowLeft, mdiArrowLeftCircle, mdiViewList,\n} from '@mdi/js'\n\nimport './App.css'\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Card from \"@material-ui/core/Card\";\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\";\nimport * as cornerstone from \"cornerstone-core\";\nimport * as dicomParser from \"dicom-parser\";\nimport SeriesList from \"./components/SeriesList\";\n\n// log();\n\nlocalStorage.setItem(\"debug\", \"cornerstoneTools\");\n\nconst drawerWidth = 240;\nconst iconColor = '#FFFFFF';\nlet iconTool = null;\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.black,\n    },\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n\n  title: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n\n  appBar: {\n    position: 'relative',\n    backgroundColor: '#453479',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  toolbarCard: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: '#453479',\n    position: 'absolute',\n    margin: '0 25% 0 25%',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    top: 'auto',\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  hide: {\n    display: 'none',\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n\n  // Loads information about the app bar, including app bar height\n  toolbar: theme.mixins.toolbar,\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  listItemText: {\n    fontSize: '0.85em',\n    marginLeft: '-20px'\n  },\n\n});\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.files = [];\n    this.file = null;\n    this.url = null;\n\n\n    this.mprData = {};\n    this.mprPlane = '';\n\n    this.volume = [];\n    this.mprSliceIndex = [0, 0, 0];\n\n    this.fileOpen = React.createRef();\n    this.showFileOpen = this.showFileOpen.bind(this);\n\n    this.openDicomdir = React.createRef();\n    this.showOpenDicomdir = this.showOpenDicomdir.bind(this);\n\n    this.openFolder = React.createRef();\n    this.showOpenFolder = this.showOpenFolder.bind(this);\n\n    this.openUrlField = React.createRef();\n\n    this.dicomViewersRefs = [];\n    this.dicomViewers = [];\n    for (let i = 0; i < 16; i++) {\n      this.dicomViewers.push(this.setDcmViewer(i, 'grid'))\n    }\n\n    this.seriesListDicomViewersRefs = [];\n    this.seriesListDicomViewers = [];\n  }\n\n  state = {\n    anchorElLayout: null,\n    openMenu: false,\n    openImageEdit: false,\n    openTools: false,\n    openMpr: false,\n    openLayout: false,\n    visibleMainMenu: true,\n    visibleHeader: false,\n    visibleSettings: false,\n    visibleToolbar: true,\n    visibleOpenUrl: false,\n    visibleToolbox: false,\n    visibleMeasure: false,\n    visibleClearMeasureDlg: false,\n    visibleAbout: false,\n    visibleDicomdir: false,\n    visibleFileManager: false,\n    visibleZippedFileDlg: false,\n    visibleDownloadZipDlg: false,\n    visibleOpenMultipleFilesDlg: false,\n    toolState: 1,\n    sliceIndex: 0,\n    sliceMax: 1,\n    listOpenFilesScrolling: false,\n    visibleVolumeBuilding: false,\n    visibleMprOrthogonal: false,\n    visibleMprCoronal: false,\n    visibleMprSagittal: false,\n    visibleMprAxial: false,\n\n    anchorEl: null,\n    anchorElMpr: null,\n    anchorElImageEdit: null,\n    visibleSeries: false,\n\n    totalSeries: null,\n    seriesListDicomViewers: [],\n  };\n\n  setDcmViewer = (index, type) => {\n    if (type === 'grid') {\n      return (\n        <DicomViewer\n          dcmRef={(ref) => {\n            this.dicomViewersRefs[index] = ref\n          }}\n          index={index}\n          runTool={ref => (this.runTool = ref)}\n          changeTool={ref => (this.changeTool = ref)}\n        />\n      )\n    } else if (type === 'list') {\n      console.log('listttttttttttt');\n      return (\n        <DicomViewer\n          dcmRef={(ref) => {\n            this.seriesListDicomViewersRefs[index] = ref\n          }}\n          index={index}\n          runTool={ref => (this.runTool = ref)}\n          changeTool={ref => (this.changeTool = ref)}\n          files={this.state.totalSeries ? this.state.totalSeries[index].files : []}\n        />\n      )\n    }\n  };\n\n  getDcmViewerRef = (index) => {\n    return this.dicomViewersRefs[index]\n  };\n\n  getDcmViewer = (index) => {\n    return this.dicomViewers[index]\n  };\n\n  getActiveDcmViewer = () => {\n    return this.dicomViewersRefs[this.props.activeDcmIndex]\n  };\n\n  toggleFileManager = () => {\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleMainMenu: false, visibleFileManager: !this.state.visibleFileManager})\n    } else {\n      this.setState({visibleFileManager: !this.state.visibleFileManager})\n    }\n  };\n\n  showFileOpen() {\n    this.props.isOpenStore(false);\n    this.fileOpen.current.click()\n  }\n\n  handleOpenLocalFs = (filesSelected) => {\n    //console.log('handleOpenLocalFs: ', filesSelected)\n    if (filesSelected.length > 1) {\n      this.files = filesSelected;\n      this.changeLayout(1, 1);\n      this.mprPlane = '';\n      this.volume = [];\n      for (let i = 0; i < 16; i++)\n        if (this.dicomViewersRefs[i] !== undefined) {\n          // this.dicomViewersRefs[i].runTool('clear')\n        }\n      this.setState({\n        sliceIndex: 0,\n        sliceMax: 1,\n        visibleMprOrthogonal: false,\n        visibleMprCoronal: false,\n        visibleMprSagittal: false,\n        visibleMprAxial: false\n      }, () => {\n        this.setState({visibleOpenMultipleFilesDlg: true})\n      })\n    } else {\n      const file = filesSelected[0];\n      console.log('file: ', file);\n      if (file.type === 'application/x-zip-compressed' || file.type === 'application/zip') {\n        this.file = file;\n        this.url = null;\n        this.setState({visibleZippedFileDlg: true})\n      } else {\n        this.setState({sliceIndex: 0, sliceMax: 1});\n        this.props.setLocalFileStore(file);\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)\n      }\n    }\n  };\n\n  handleOpenSandboxFs = (fsItem) => {\n    //this.hideMainMenu()\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openSandboxFs', fsItem)\n  };\n\n  handleOpenImage = (index) => {\n    //console.log('handleOpenImage : ', index)\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    const visibleMprAxial = this.state.visibleMprAxial;\n    const plane = this.mprPlanePosition();\n    //console.log('plane: ', plane)\n\n    if (visibleMprOrthogonal) {\n      if (this.props.activeDcmIndex === 0) {\n        this.dicomViewersRefs[0].runTool('openimage', index)\n\n      } else if (this.props.activeDcmIndex === 1) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }\n\n      } else if (this.props.activeDcmIndex === 2) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }\n      }\n\n    } else if ((plane === 'sagittal' && visibleMprSagittal) ||\n      (plane === 'axial' && visibleMprAxial) ||\n      (plane === 'coronal' && visibleMprCoronal))\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n    else if (plane === 'sagittal' && visibleMprAxial)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'sagittal' && visibleMprCoronal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'axial' && visibleMprSagittal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'axial' && visibleMprCoronal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'coronal' && visibleMprSagittal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'coronal' && visibleMprAxial)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else // it's not a possible MPR, then open as normal dicom file  \n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n  };\n\n  /*\n    handleOpenMprXZImage = (index) => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.mprPlanePosition(), index)\n    }\n\n    handleOpenMprYZImage = (index) => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.mprPlanePosition(), index)\n    }\n  */\n  handleOpenFileDicomdir = (file) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)\n  };\n\n  showOpenFolder() {\n    this.openFolder.current.click()\n  }\n\n  showOpenDicomdir() {\n    this.openDicomdir.current.click()\n  }\n\n  handleOpenFolder(files) {\n    console.log('handleOpenFolder: ', files);\n    for (let i = 0; i < files.length; i++) {\n      this.files.push(files[i])\n    }\n\n    let seriesNumberList = [];\n    let _totalSeries = [];\n    this.seriesListDicomViewers = [];\n    let seriesCounter = 0;\n    for (let i = 0; i < files.length; i++) {\n\n      if (files[i] !== undefined) {\n\n        let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n\n        cornerstone.loadAndCacheImage(imageId).then(image => {\n\n          let fileImageSeriesNumber = image.data.string('x00200011');\n\n          // if found new series do:\n          if (!seriesNumberList.includes(fileImageSeriesNumber)) {\n            seriesNumberList.push(fileImageSeriesNumber);\n            _totalSeries.push({\n              seriesNumber: fileImageSeriesNumber,\n              images: [image,],\n              files: [files[i],]\n            });\n\n            this.seriesListDicomViewers.push(\n              this.setDcmViewer(seriesCounter, 'list')\n            );\n\n            // this.seriesListDicomViewersRefs[seriesCounter].runTool('openimage', 0);\n\n            seriesCounter = seriesCounter + 1;\n          } else {\n            _totalSeries.forEach(ts => {\n              if (ts.seriesNumber === fileImageSeriesNumber) {\n                ts.images.push(image);\n                ts.files.push(files[i]);\n              }\n            });\n          }\n\n        });\n      }\n    }\n\n    console.log(\"LENGTH \" + _totalSeries.length);\n\n    // for (let i = 0; i < files.length; i++) {\n    //   if (files[i] !== undefined) {\n    //     let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n    //     cornerstone.loadAndCacheImage(imageId).then(image => {\n    //       let fileImageSeriesNumber = image.data.string('x00200011');\n    //\n    //       if(seriesNumber.includes(fileImageSeriesNumber)){\n    //         _totalSeries.forEach(series => {\n    //           if(series[0].data.string('x00200011') === fileImageSeriesNumber){\n    //             series.push(image);\n    //           }\n    //         });\n    //       }else{\n    //         seriesNumber.push(image.data.string('x00200011'));\n    //\n    //         let newSeries = [];\n    //         newSeries.push(image);\n    //         _totalSeries.push(newSeries);\n    //       }\n    //\n    //     });\n    //   }\n    // }\n\n    this.changeLayout(1, 1);\n    this.mprPlane = '';\n    this.volume = [];\n    for (let i = 0; i < 16; i++)\n      if (this.dicomViewersRefs[i] !== undefined) {\n        // this.dicomViewersRefs[i].runTool('clear')\n      }\n    this.setState({\n      totalSeries: _totalSeries,\n      seriesListDicomViewers: this.seriesListDicomViewers,\n      sliceIndex: 0,\n      sliceMax: 1,\n      visibleMprOrthogonal: false,\n      visibleMprCoronal: false,\n      visibleMprSagittal: false,\n      visibleMprAxial: false\n    }, () => {\n      this.setState({visibleOpenMultipleFilesDlg: true})\n    })\n  }\n\n  handleOpenDicomdir(files) {\n    this.setState({visibleDicomdir: false}, () => {\n      let dicomdir = null;\n      let datafiles = [];\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].webkitRelativePath.includes('DICOMDIR')) {\n          dicomdir = files[i]\n        } else {\n          datafiles.push(files[i])\n        }\n      }\n      if (dicomdir !== null) {\n        this.props.setDicomdirStore({origin: 'local', dicomdir: dicomdir, files: datafiles});\n        this.toggleDicomdir()\n      }\n    })\n  }\n\n  handleOpenFsDicomdir = (fsItem) => {\n    this.props.setDicomdirStore({origin: 'fs', dicomdir: fsItem, files: []});\n    this.toggleDicomdir()\n  };\n\n  componentDidMount() {\n    // Need to set the renderNode since the drawer uses an overlay\n    //this.dialog = document.getElementById('drawer-routing-example-dialog')\n    window.scrollTo(0, 0)\n  }\n\n\n  showAppBar = () => {\n    window.scrollTo(0, 0)\n  };\n\n\n  toggleSeriesMenu = () => {\n    const visibleSeries = this.state.visibleSeries;\n    //const visibleFileManager = this.state.visibleFileManager\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleSeries: !visibleSeries, visibleFileManager: false})\n    } else {\n      this.setState({visibleSeries: !visibleSeries})\n    }\n  };\n  toggleMainMenu = () => {\n    const visibleMainMenu = this.state.visibleMainMenu;\n    //const visibleFileManager = this.state.visibleFileManager\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleMainMenu: !visibleMainMenu, visibleFileManager: false})\n    } else {\n      this.setState({visibleMainMenu: !visibleMainMenu})\n    }\n  };\n\n  showMainMenu = () => {\n    this.setState({visibleMainMenu: true})\n  };\n\n  hideMainMenu = () => {\n    this.setState({visibleMainMenu: false})\n  };\n\n  handleVisibility = (visibleMainMenu) => {\n    this.setState({visibleMainMenu})\n  };\n\n\n  toggleHeader = () => {\n    const visible = !this.state.visibleHeader;\n    this.setState({visibleHeader: visible});\n    if (visible)\n      this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      })\n  };\n\n\n  toggleToolbox = () => {\n    const visible = !this.state.visibleToolbox;\n    this.setState({visibleToolbox: visible});\n    if (visible)\n      this.setState({\n        visibleMeasure: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      })\n  };\n\n  saveMeasure = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('savetools')\n  };\n\n  toggleMeasure = () => {\n    const visible = !this.state.visibleMeasure;\n    this.setState({visibleMeasure: visible});\n    if (visible)\n      this.setState({\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      })\n  };\n\n  hideMeasure = () => {\n    this.setState({visibleMeasure: false})\n  };\n\n  handleVisibilityMeasure = (visibleMeasure) => {\n    this.setState({visibleMeasure})\n  };\n\n\n  toggleDicomdir = () => {\n    const visible = !this.state.visibleDicomdir;\n    console.log('toggleDicomdir: ', visible);\n    this.setState({visibleDicomdir: visible});\n    if (visible)\n      this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleFileManager: false\n      })\n  };\n\n\n  clearMeasure = () => {\n    this.showClearMeasureDlg()\n  };\n\n  showClearMeasureDlg = () => {\n    this.setState({visibleClearMeasureDlg: true})\n  };\n\n  hideClearMeasureDlg = () => {\n    this.setState({visibleClearMeasureDlg: false})\n  };\n\n  confirmClearMeasureDlg = () => {\n    this.hideClearMeasureDlg();\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools')\n  };\n\n\n  showZippedFileDlg = () => {\n    this.setState({visibleZippedFileDlg: true})\n  };\n\n  hideZippedFileDlg = () => {\n    this.setState({visibleZippedFileDlg: false})\n  };\n\n  confirmZippedFileDlg = () => {\n    this.hideZippedFileDlg();\n    this.setState({visibleFileManager: true}, () => {\n      console.log('this.url: ', this.url);\n      if (this.url !== null) {\n        this.setState({visibleDownloadZipDlg: true})\n      } else {\n        this.props.setFsZippedFile(this.file)\n      }\n    })\n  };\n\n\n  showAbout = () => {\n    this.setState({visibleAbout: !this.state.visibleAbout})\n  };\n\n  showSettings = () => {\n    this.setState({\n      visibleMainMenu: false,\n      visibleSettings: true,\n      visibleToolbar: false,\n      position: 'right'\n    })\n  };\n\n  hideSettings = () => {\n    this.setState({\n      visibleMainMenu: true,\n      visibleSettings: false,\n      visibleToolbar: true,\n      visibleFileManager: false,\n      visibleDicomdir: false,\n    })\n  };\n\n  handleVisibilitySettings = (visibleSettings) => {\n    this.setState({visibleSettings})\n  };\n\n  hideDownloadZipDlg = () => {\n    this.setState({visibleDownloadZipDlg: false})\n  };\n\n  hideOpenMultipleFilesDlg = () => {\n    this.setState({visibleOpenMultipleFilesDlg: false});\n    this.openMultipleFilesCompleted()\n  };\n\n  openMultipleFilesCompleted = () => {\n    if (this.props.files !== null) {\n      this.changeLayout(1, 1);\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', 0);\n      const sliceMax = this.props.files.length;\n      this.setState({sliceMax: sliceMax}, () => {\n        this.mprPlanePosition();\n        if (this.mprPlane === 'sagittal')\n          this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: true,\n            visibleMprAxial: false,\n            visibleMprCoronal: false\n          });\n        else if (this.mprPlane === 'coronal')\n          this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: false,\n            visibleMprCoronal: true\n          });\n        else\n          this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: true,\n            visibleMprCoronal: false\n          })\n      })\n    }\n  };\n\n  showOpenUrl = () => {\n    this.setState({visibleOpenUrl: true})\n  };\n\n  hideOpenUrl = (openDlg) => {\n    this.setState({visibleOpenUrl: false},\n      () => {\n        if (openDlg) {\n          this.hideMainMenu();\n          this.file = null;\n          this.url = this.openUrlField.value;\n          //console.log('this.url :', this.url)\n          //const ext = getFileExtReal(this.url)\n          //console.log('ext :', ext)\n          if (getFileExtReal(this.url) === 'zip') {\n            this.setState({visibleZippedFileDlg: true})\n          } else {\n            return this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openurl', this.openUrlField.value)\n          }\n        }\n      })\n  };\n\n  downloadOpenUrl = () => {\n    this.setState({visibleOpenUrl: false, visibleToolbar: true})\n  };\n\n  resetImage = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('reset')\n  };\n\n  saveShot = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('saveas')\n  };\n\n  cinePlayer = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('cine')\n  };\n\n  clear = () => {\n    this.setState({\n      openImageEdit: false,\n      openTools: false,\n      openMpr: false,\n      visibleToolbox: false,\n      visibleMeasure: false,\n      visibleHeader: false,\n      visibleDicomdir: false\n    });\n    this.changeLayout(1, 1);\n    this.props.setFilesStore(null);\n    this.props.setDicomdirStore(null);\n    this.props.clearingStore();\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n  };\n\n  handleLayout = (event) => {\n    if (this.state.openLayout) {\n      this.setState({\n        anchorElLayout: null,\n        openLayout: false\n      });\n    } else {\n      this.setState({\n        anchorElLayout: event.currentTarget,\n        openLayout: true\n      });\n    }\n  };\n\n  closeLayout = () => {\n    this.setState({anchorElLayout: null, openLayout: false})\n  };\n\n  changeLayout = (row, col) => {\n    // if reduce the grid clear the unused views\n    if (row < this.props.layout[0] || col < this.props.layout[1]) {\n      this.layoutGridClick(0);\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          if ((i + 1 > row) || (j + 1 > col)) {\n            const index = i * 4 + j;\n            if (this.dicomViewersRefs[index] !== undefined) {\n              //this.dicomViewersRefs[index].runTool('clear')\n            }\n          }\n        }\n      }\n    }\n    this.props.setLayoutStore(row, col)\n  };\n\n  toolExecute = (tool) => {\n    this.hideMainMenu();\n    switch (tool) {\n      case 'notool':\n        iconTool = null;\n        this.setState({toolState: null});\n        break;\n      case 'Wwwc':\n        iconTool = mdiArrowAll;\n        break;\n      case 'Pan':\n        iconTool = mdiCursorPointer;\n        break;\n      case 'Zoom':\n        iconTool = mdiMagnify;\n        break;\n      case 'Length':\n        iconTool = mdiRuler;\n        break;\n      case 'Probe':\n        iconTool = mdiEyedropper;\n        break;\n      case 'Angle':\n        iconTool = mdiAngleAcute;\n        break;\n      case 'EllipticalRoi':\n        iconTool = mdiEllipse;\n        break;\n      case 'RectangleRoi':\n        iconTool = mdiRectangle;\n        break;\n      case 'FreehandRoi':\n        iconTool = mdiGesture;\n        break;\n\n      default:\n        break\n    }\n    this.props.toolStore(tool);\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool(tool)\n  };\n\n  toolChange = () => {\n    const toolState = 1 - this.state.toolState;\n    this.setState({toolState: toolState}, () => {\n      this.changeTool.changeTool(this.props.tool, toolState)\n    })\n  };\n\n  toolRemove = (index) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetool', index)\n  };\n\n  toggleOpenMenu = (event) => {\n    if (this.state.openMenu) {\n      this.setState({\n        openMenu: !this.state.openMenu,\n        anchorEl: null,\n      });\n    } else {\n      this.setState({\n        openMenu: !this.state.openMenu,\n        anchorEl: event.currentTarget,\n      });\n    }\n  };\n\n  toggleImageEdit = (event) => {\n    if (this.state.anchorElImageEdit) {\n      this.setState({\n        openImageEdit: !this.state.openImageEdit,\n        anchorElImageEdit: null,\n      });\n    } else {\n      this.setState({\n        openImageEdit: !this.state.openImageEdit,\n        anchorElImageEdit: event.currentTarget,\n      });\n    }\n  };\n\n  toggleTools = () => {\n    this.setState({openTools: !this.state.openTools})\n  };\n\n  toggleMpr = (event) => {\n    if (this.state.openMpr) {\n      this.setState({openMpr: !this.state.openMpr, anchorElMpr: null});\n    } else {\n      this.setState({openMpr: !this.state.openMpr, anchorElMpr: event.currentTarget});\n    }\n\n  };\n\n  layoutGridClick = (index) => {\n    if (isMobile && index === this.props.activeDcmIndex) return;\n\n    this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n\n    this.props.setActiveDcmIndex(index);\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[0]})\n\n      } else if (index === 1) {\n        const sliceMax = this.props.files[0].image.columns;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[1]})\n\n      } else if (index === 2) {\n        const sliceMax = this.props.files[0].image.rows;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[2]})\n      }\n    }\n\n    const dcmViewer = this.getDcmViewerRef(index);\n    //console.log('dcmViewer:', dcmViewer)\n    this.props.setActiveMeasurements(dcmViewer.measurements);\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})\n  };\n\n  layoutGridTouch = (index) => {\n    if (!isMobile && index === this.props.activeDcmIndex) return;\n\n    this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n\n    this.props.setActiveDcmIndex(index);\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[0]})\n\n      } else if (index === 1) {\n        const sliceMax = this.props.files[0].image.columns;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[1]})\n\n      } else if (index === 2) {\n        const sliceMax = this.props.files[0].image.rows;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[2]})\n      }\n    }\n\n    const dcmViewer = this.getDcmViewerRef(index);\n    this.props.setActiveMeasurements(dcmViewer.measurements);\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})\n  };\n\n  buildLayoutGrid = () => {\n    let dicomviewers = [];\n    for (let i = 0; i < this.props.layout[0]; i++) {\n      for (let j = 0; j < this.props.layout[1]; j++) {\n        const styleLayoutGrid = {\n          border: this.props.layout[0] === 1 && this.props.layout[1] === 1 ? 'solid 1px #000000' : 'solid 1px #444444',\n        };\n        const index = i * 4 + j;\n        dicomviewers.push(\n          <div\n            key={index}\n            style={styleLayoutGrid}\n            onClick={() => this.layoutGridClick(index)}\n            onTouchStart={() => this.layoutGridTouch(index)}\n          >\n            {this.getDcmViewer(index)}\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div\n        id=\"dicomviewer-grid\"\n        style={{\n          display: 'grid',\n          gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%',\n        }}\n      >\n        {dicomviewers}\n      </div>\n    )\n  };\n\n  buildLayoutList = () => {\n    let dicomviewers = [];\n\n    for (let i = 0; i < 8; i++) {\n      const styleLayoutGrid = {\n        border: 'solid 1px #fff',\n        width: '100%',\n        height: '100px',\n        marginTop: '5px',\n      };\n\n      dicomviewers.push(\n        <ListItem button>\n          <row style={{width: '100%'}}>\n            < div\n              key = {i}\n              style = {styleLayoutGrid}\n              // onClick={() => this.layoutGridClick(i)}\n              // onTouchStart={() => this.layoutGridTouch(i)}\n            >\n              {this.seriesListDicomViewers[i]}\n            </div>\n            <p\n              style={{padding: 0, margin: '5px 10px 5px 10px'}}\n            >\n              {/*series number: {ts.seriesNumber}*/}\n              series number: + {i}\n            </p>\n          </row>\n        </ListItem>\n    );\n    }\n\n    return (\n    <div\n    id=\"dicomviewer-grid\"\n    style={{\n    display: 'grid',\n    // gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n    // gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n    height: '100%',\n    width: '100%',\n    }}\n    >\n    {dicomviewers}\n    </div>\n    );\n\n    // let totalSeries = this.state.totalSeries;\n    // let totalSeriesView = [];\n    // if (totalSeries !== null) {\n    //\n    //   totalSeries.forEach((ts, index) => {\n    //\n    //     totalSeriesView.push(\n    //       <ListItem button>\n    //         <row style={{width: '100%'}}>\n    //           {this.buildLayoutList(index)}\n    //           <p\n    //             style={{padding: 0, margin: '5px 10px 5px 10px'}}\n    //           >\n    //             series number: {ts.seriesNumber}\n    //           </p>\n    //         </row>\n    //       </ListItem>\n    //     );\n    //\n    //     if (this.seriesListDicomViewersRefs[index]) {\n    //       this.seriesListDicomViewersRefs[index].runTool('openImage', 0);\n    //       console.log(\"jjjjjjjjjjjjjj   \" + index);\n    //     }\n    //\n    //     console.log(\"@@@@@@   \" + index + \"   \" + this.state.seriesListDicomViewers.length);\n    //\n    //   });\n    //\n    // }\n    //\n    //\n    // return (\n    //   <div\n    //     key={index}\n    //     style={styleLayoutGrid}\n    //     // onClick={() => this.layoutGridClick(index)}\n    //     // onTouchStart={() => this.layoutGridTouch(index)}\n    //   >\n    //     {this.seriesListDicomViewersRefs[index]}\n    //   </div>\n    // )\n    };\n\n    getFileName = (dcmViewer) => {\n    return dcmViewer.filename\n    /*if (dcmViewer.fsItem !== null) {\n    return dcmViewer.fsItem.name\n    } else if (dcmViewer.localfile !== null) {\n    return getFileNameCorrect(dcmViewer.localfile.name)\n    } else {\n    return dcmViewer.localurl.substring(dcmViewer.localurl.lastIndexOf('/')+1)\n    }*/\n    };\n\n    getStringVisiblePlane = () => {\n    if (this.state.visibleMprOrthogonal)\n    return 'orthogonal';\n    else if (this.state.visibleMprSagittal)\n    return 'sagittal';\n    else if (this.state.visibleMprAxial)\n    return 'axial';\n    else if (this.state.visibleMprCoronal)\n    return 'coronal'\n    };\n\n    appBarTitle = (classes, isOpen, dcmViewer) => {\n    if (isMobile && !isTablet) {\n    if (isOpen)\n    return null;\n    else\n    return (\n    <Typography variant=\"overline\" className={classes.title}>\n    <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n    </Typography>\n    )\n    } else {\n    if (isOpen) {\n    const plane = this.getStringVisiblePlane();\n    if (this.state.sliceMax > 1 && this.mprPlane !== plane && this.mprPlane !== '') {\n    return (\n    <Typography variant=\"overline\" className={classes.title}>\n    {'MPR ' + plane}\n    </Typography>\n    )\n    }\n    return (\n    <Typography variant=\"overline\" className={classes.title}>\n    {this.getFileName(dcmViewer)}\n    </Typography>\n    )\n    } else if (this.props.dicomdir !== null) {\n    return (\n    <Typography variant=\"overline\" className={classes.title}>\n    {this.props.dicomdir.dicomdir.webkitRelativePath}\n    </Typography>\n    )\n    } else\n    return (\n    <Typography variant=\"overline\" className={classes.title}>\n    <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n    </Typography>\n    )\n    }\n    };\n\n    // ---------------------------------------------------------------------------------------------- MPR\n\n    getImageOrientationZ = (image) => {\n    const iop = image.data.string('x00200037').split('\\\\'); // Image Orientation Patient\n\n    let v = new Array(3).fill(0).map(() => new Array(3).fill(0));\n\n    v[0][0] = parseFloat(iop[0]); // the x direction cosines of the first row X\n    v[0][1] = parseFloat(iop[1]); // the y direction cosines of the first row X\n    v[0][2] = parseFloat(iop[2]); // the z direction cosines of the first row X\n    v[1][0] = parseFloat(iop[3]); // the x direction cosines of the first column Y\n    v[1][1] = parseFloat(iop[4]); // the y direction cosines of the first column Y\n    v[1][2] = parseFloat(iop[5]); // the z direction cosines of the first column Y\n    //console.log('getImageOrientationZ: ', v[1][2])\n    return v[1][2]\n    };\n\n    mprBuildVolume = () => {\n    if (this.volume.length > 0) return;\n\n    this.t0 = performance.now();\n\n    const files = this.props.files;\n    const xPixelSpacing = getPixelSpacing(files[0].image, 0);\n    const spacingBetweenSlice = getSpacingBetweenSlice(files[0].image);\n    const sliceThickness = getSliceThickness(files[0].image);\n    const length = files[0].image.getPixelData().length;\n    const sliceLocation = getSliceLocation(files[0].image);\n    this.volume = [];\n    // see https://stackoverflow.com/questions/58412358/dicom-multiplanar-image-reconstruction\n    this.mprData.zDim = Math.round(files.length * spacingBetweenSlice / xPixelSpacing);\n\n    //console.log('this.mprData.zDim: ', this.mprData.zDim)\n    //console.log('spacingBetweenSlice: ', spacingBetweenSlice)\n    //console.log('sliceThickness: ', sliceThickness)\n    //console.log('xPixelSpacing: ', xPixelSpacing)\n    //console.log('getSliceLocation: ', sliceLocation)\n\n    // If spacing between slices is less than slice thickness, the images are not optimal for 3D reconstruction.\n    // Try an alternative algorithm based on slice distance.\n    let zDimMethod2 = false;\n    if (spacingBetweenSlice < sliceThickness && sliceLocation === undefined) {\n    let max = 0;\n    let min = 0;\n    for (let i = 0; i < files.length; i++) {\n    if (files[i].sliceDistance > max)\n    max = files[i].sliceDistance;\n    if (files[i].sliceDistance < min)\n    min = files[i].sliceDistance\n    }\n    this.mprData.zDim = Math.round(Math.abs(max - min) / xPixelSpacing);\n    //console.log('method2, this.mprData.zDim: ', this.mprData.zDim)\n    zDimMethod2 = true\n    }\n\n    if (files.length === this.mprData.zDim) { // slices contiguous\n    for (let i = 0, len = files.length; i < len; i++) {\n    this.volume.push(files[i].image.getPixelData())\n    }\n\n    } else if (files.length < this.mprData.zDim) { // gap between slices\n\n    let emptyPlane = new Int16Array(length).fill(0);\n    for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n    this.volume.push(emptyPlane)\n    }\n\n    let order = [];\n\n    for (let i = 0; i < files.length; i++) {\n    order.push({\n    iFile: i,\n    instanceNumber: files[i].instanceNumber,\n    sliceDistance: files[i].sliceDistance,\n    sliceLocation: files[i].sliceLocation\n    })\n    }\n\n    if (zDimMethod2) {\n    // eliminate eventually duplicates\n    order = order.reduce((previous, current) => {\n    let object = previous.filter(object => object.sliceDistance === current.sliceDistance);\n    if (object.length === 0) {\n    previous.push(current)\n    }\n    return previous\n    }, []);\n\n    order.sort((l, r) => {\n    // return r.sliceDistance - l.sliceDistance\n    return l.instanceNumber - r.instanceNumber\n    })\n    //console.log('order: ', order)\n    } else {\n    // const reorder = files[0].sliceDistance < files[1].sliceDistance\n    const reorder = files[0].sliceLocation < files[1].sliceLocation;\n    if (reorder) {\n    order.sort((l, r) => {\n    // return l.instanceNumber - r.instanceNumber\n    // return r.sliceDistance - l.sliceDistance\n    return r.sliceLocation - l.sliceLocation\n    })\n    //console.log('reorder: ')\n    }\n    }\n    /*if (this.getImageOrientationZ(files[0].image) < 0) {\n    order.sort((l, r) => {\n    return r.instanceNumber - l.instanceNumber\n    // return r.sliceDistance - l.sliceDistance\n    })\n    console.log('reorder 2: ')\n    }*/\n\n    let intervals = [0];\n    this.volume[0] = files[order[0].iFile].image.getPixelData();\n    this.volume[this.mprData.zDim - 1] = files[order[order.length - 1].iFile].image.getPixelData();\n    const step = (this.mprData.zDim - 2) / (order.length - 2);\n    let i = 0;\n    for (let k = 1; k <= order.length - 2; k++) {\n    i = Math.ceil(i + step);\n    //console.log(`i: ${i},  k: ${k},  order[k].iFile: ${order[k].iFile}`)\n    this.volume[i] = files[order[k].iFile].image.getPixelData(); // order[k-1].iFile\n    intervals.push(i)\n    }\n    intervals.push(this.mprData.zDim - 1);\n    console.log('intervals: ', intervals);\n\n    //console.log('this.volume: ', this.volume)\n\n    const interpolationMethod = getSettingsMprInterpolation();\n\n    if (interpolationMethod === 'no') {\n    // build missing planes without interpolation, simple duplicate\n    for (let i = 0; i < intervals.length - 1; i++) {\n    //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n    for (let j = intervals[i] + 1; j <= intervals[i + 1] - 1; j++) {\n    //console.log(`j: ${j}`)\n    this.volume[j] = this.volume[intervals[i + 1]]\n    }\n    }\n\n    } else if (interpolationMethod === 'weightedlinear') {\n    // build the interpolate planes between original planes\n    for (let i = 0; i < intervals.length - 1; i++) {\n    //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n    const step = intervals[i + 1] - intervals[i];\n\n    for (let j = intervals[i] + 1; j < intervals[i + 1]; j++) {\n    //console.log(`i: ${i}, intervals[i]: ${intervals[i]}, j: ${j}`)\n\n    let p = new Int16Array(length);\n    const w = (j - intervals[i]) / step;\n\n    for (let k = 0; k < length - 1; k++) {\n    // simple linear interpolation\n    // const p0 = this.volume[intervals[i]][k]\n    // const p1 = this.volume[intervals[i+1]][k]\n    // p[k] = (p0+p1)/2\n\n    // weighted linear interpolation\n    const p0 = this.volume[intervals[i]][k] * (1 - w);\n    const p1 = this.volume[intervals[i + 1]][k] * w;\n    p[k] = p0 + p1;\n    if (p0 === undefined || p1 === undefined) {\n    console.log('undefined')\n    }\n    // weighted bilinear interpolation\n    /*if (k-1 > 0 && k+1 < length) {\n    const p0 = this.volume[intervals[i]][k] * (1-w) * 0.5 + this.volume[intervals[i]][k-1] * (1-w) * 0.25 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n    const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25 + this.volume[intervals[i+1]][k+1] * w * 0.25\n    p[k] = p0+p1\n    } else if (k-1 < 0) {\n    const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n    const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k+1] * w * 0.25\n    p[k] = p0+p1\n    } else { // k+1 > length\n    const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k-1] * (1-w) * 0.25\n    const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25\n    p[k] = p0+p1\n    }*/\n    }\n\n    this.volume[j] = p\n    }\n    }\n    }\n\n    this.t1 = performance.now();\n    console.log(`performance volume building: ${this.t1 - this.t0} milliseconds`)\n\n    } else { // overlapping slices\n    this.mprData.zStep = files.length / this.mprData.zDim;\n    //console.log('this.mprData.zStep: ', this.mprData.zStep)\n    for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n    const k = Math.round(i * this.mprData.zStep);\n    this.volume.push(files[k].image.getPixelData())\n    }\n    }\n\n    if (this.state.visibleMprOrthogonal) {\n    this.changeToOrthogonalView()\n\n    } else if (this.state.visibleMprSagittal) {\n    this.changeToSagittalView()\n\n    } else if (this.state.visibleMprCoronal) {\n    this.changeToCoronalView()\n\n    } else { // axial\n    this.changeToAxialView()\n    }\n    };\n\n    changeToOrthogonalView = () => {\n    this.changeLayout(1, 3);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n    const plane = this.mprPlanePosition();\n\n    const index = Math.round(this.props.files.length / 2);\n\n    if (this.dicomViewersRefs[0].volume === null)\n    this.dicomViewersRefs[0].volume = this.volume;\n\n    this.mprSliceIndex[0] = index;\n    this.dicomViewersRefs[0].runTool('openimage', index);\n\n    if (this.dicomViewersRefs[1].volume === null)\n    this.dicomViewersRefs[1].volume = this.volume;\n    const xzIndex = Math.round(this.props.files[0].image.columns / 2);\n    this.mprSliceIndex[1] = xzIndex;\n    this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, xzIndex, this.mprData);\n\n    if (this.dicomViewersRefs[2].volume === null)\n    this.dicomViewersRefs[2].volume = this.volume;\n    const yzIndex = Math.round(this.props.files[0].image.rows / 2);\n    this.mprSliceIndex[2] = yzIndex;\n    this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, yzIndex, this.mprData)\n    })\n\n    };\n\n    changeToSagittalView = () => {\n    this.changeLayout(1, 1);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n    const plane = this.mprPlanePosition();\n\n    if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n    this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume;\n    //console.log('mprSagittal, this.mprPlanePosition(): ', plane)\n\n    if (plane === 'sagittal') {\n    const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n\n    } else if (plane === 'axial') {\n    const sliceMax = this.props.files[0].image.columns;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n\n    } else {\n    const sliceMax = this.props.files[0].image.rows;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n    }\n    })\n    };\n\n    changeToCoronalView = () => {\n    this.changeLayout(1, 1);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n    const plane = this.mprPlanePosition();\n\n    if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n    this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume;\n    //console.log('mprCoronal, this.mprPlanePosition(): ', plane)\n\n    if (plane === 'coronal') {\n    const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n\n    } else if (plane === 'axial') {\n    const sliceMax = this.props.files[0].image.columns;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n\n    } else { // plane is sagittal\n    const sliceMax = this.props.files[0].image.rows;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n    }\n    })\n    };\n\n    changeToAxialView = () => {\n    this.changeLayout(1, 1);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n    const plane = this.mprPlanePosition();\n\n    if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n    this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume;\n    //console.log('mprAxial, this.mprPlanePosition(): ', plane)\n\n    if (plane === 'axial') {\n    const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n\n    } else if (plane === 'sagittal') {\n    const sliceMax = this.props.files[0].image.columns;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n\n    } else {\n    const sliceMax = this.props.files[0].image.rows;\n    const index = Math.round(sliceMax / 2);\n    this.setState({sliceIndex: index, sliceMax: sliceMax});\n    this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n    }\n    })\n    };\n\n    mprPlanePosition = () => {\n    if (this.mprPlane === '') {\n    this.mprPlane = this.dicomViewersRefs[this.props.activeDcmIndex].mprPlanePosition()\n    }\n    return this.mprPlane\n    };\n\n    mprOrthogonal = () => {\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    if (!visibleMprOrthogonal) {\n    const index = Math.round(this.props.files.length / 2);\n    //console.log('mprOrthogonal, index: ', index)\n    this.setState({sliceIndex: index});\n    this.setState({\n    visibleMprOrthogonal: true,\n    visibleMprCoronal: false,\n    visibleMprSagittal: false,\n    visibleMprAxial: false\n    }, () => {\n    if (this.volume.length === 0) {\n    this.setState({visibleVolumeBuilding: true}, () => {\n    setTimeout(() => {\n    this.mprBuildVolume()\n    }, 100)\n    })\n    } else {\n    this.changeToOrthogonalView()\n    }\n    })\n    }\n    };\n\n    mprSagittal = () => {\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    if (!visibleMprSagittal) {\n    this.setState({\n    visibleMprOrthogonal: false,\n    visibleMprSagittal: true,\n    visibleMprCoronal: false,\n    visibleMprAxial: false\n    }, () => {\n    if (this.volume.length === 0) {\n    this.setState({visibleVolumeBuilding: true}, () => {\n    setTimeout(() => {\n    this.mprBuildVolume()\n    }, 100)\n    })\n    } else {\n    this.changeToSagittalView()\n    }\n    })\n    }\n    };\n\n    mprCoronal = () => {\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    if (!visibleMprCoronal) {\n    this.setState({\n    visibleMprOrthogonal: false,\n    visibleMprSagittal: false,\n    visibleMprCoronal: true,\n    visibleMprAxial: false\n    }, () => {\n    if (this.volume.length === 0) {\n    this.setState({visibleVolumeBuilding: true}, () => {\n    setTimeout(() => {\n    this.mprBuildVolume()\n    }, 100)\n    })\n    } else {\n    this.changeToCoronalView()\n    }\n    })\n    }\n    };\n\n    mprAxial = () => {\n    const visibleMprAxial = this.state.visibleMprAxial;\n    if (!visibleMprAxial) {\n    this.setState({\n    visibleMprOrthogonal: false,\n    visibleMprSagittal: false,\n    visibleMprCoronal: false,\n    visibleMprAxial: true\n    }, () => {\n    if (this.volume.length === 0) {\n    this.setState({visibleVolumeBuilding: true}, () => {\n    setTimeout(() => {\n    this.mprBuildVolume()\n    }, 100)\n    })\n    } else {\n    this.changeToAxialView()\n    }\n    })\n    }\n    };\n\n    // ---------------------------------------------------------------------------------------------- MPR end\n\n    listOpenFilesFirstFrame = () => {\n    const index = 0;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n    this.handleOpenImage(index)\n    })\n    };\n\n    listOpenFilesPreviousFrame = () => {\n    let index = this.state.sliceIndex;\n    index = index === 0 ? this.state.sliceMax - 1 : index - 1;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n    this.handleOpenImage(index)\n    })\n    };\n\n    listOpenFilesNextFrame = () => {\n    let index = this.state.sliceIndex;\n    index = index === this.state.sliceMax - 1 ? 0 : index + 1;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n    this.handleOpenImage(index)\n    })\n    };\n\n    listOpenFilesLastFrame = () => {\n    const index = this.state.sliceMax - 1;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n    this.handleOpenImage(index)\n    })\n    };\n\n    listOpenFilesScrolling = () => {\n    const scrolling = this.state.listOpenFilesScrolling;\n    this.setState({listOpenFilesScrolling: !scrolling}, () => {\n    if (scrolling) {\n    clearInterval(this.timerScrolling)\n    } else {\n    this.timerScrolling = setInterval(() => {\n    this.listOpenFilesNextFrame()\n    }, 500)\n    }\n    })\n    };\n\n    handleSliceChange = (event, value) => {\n    console.log('slice value: ', Math.floor(value));\n    this.setState({sliceIndex: Math.floor(value)}, () => {\n    let index = this.state.sliceIndex;\n    this.props.setLocalFileStore(this.files[index]);\n    this.handleOpenImage(index)\n    })\n    };\n\n    render() {\n    //console.log('App render: ')\n\n    const {classes} = this.props;\n\n    const primaryClass = {primary: classes.listItemText};\n    const iconSize = '1.2rem';\n\n    const isOpen = this.props.isOpen[this.props.activeDcmIndex];\n    const isDicomdir = this.props.dicomdir !== null;\n    const isMultipleFiles = this.props.files === null ? false : this.props.files.length > 1;\n\n    const openMenu = this.state.openMenu;\n    const openImageEdit = this.state.openImageEdit;\n    // const openTools = this.state.openTools;\n    const openMpr = this.state.openMpr && isMultipleFiles && this.mprPlane !== '';\n    // const visibleMainMenu = this.state.visibleMainMenu;\n    const visibleHeader = this.state.visibleHeader;\n    const visibleSettings = this.state.visibleSettings;\n    const visibleAbout = this.state.visibleAbout;\n    const visibleMeasure = this.state.visibleMeasure;\n    const visibleToolbox = this.state.visibleToolbox;\n    const visibleDicomdir = this.state.visibleDicomdir;\n    const visibleFileManager = this.state.visibleFileManager;\n    const visibleClearMeasureDlg = this.state.visibleClearMeasureDlg;\n    const visibleZippedFileDlg = this.state.visibleZippedFileDlg;\n    const visibleDownloadZipDlg = this.state.visibleDownloadZipDlg;\n    const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg;\n    // const visibleLayout = Boolean(this.state.anchorElLayout);\n    const visibleVolumeBuilding = this.state.visibleVolumeBuilding;\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    const visibleMprAxial = this.state.visibleMprAxial;\n\n    let iconToolColor = this.state.toolState === 1 ? '#FFFFFF' : '#999999';\n\n    const dcmViewer = this.getActiveDcmViewer();\n\n    // const sliceMax = this.state.sliceMax;\n\n    const anchorEl = this.state.anchorEl;\n    const anchorElMpr = this.state.anchorElMpr;\n    const anchorElImageEdit = this.state.anchorElImageEdit;\n    const visibleSeries = this.state.visibleSeries;\n    const anchorElLayout = this.state.anchorElLayout;\n    // const openLayout = this.state.openLayout;\n\n    let totalSeries = this.state.totalSeries;\n    let totalSeriesView = null;\n    if (totalSeries !== null) {\n\n    totalSeriesView = this.buildLayoutList();\n\n    // totalSeries.forEach((ts, index) => {\n    //\n    //   // totalSeriesView = this.buildLayoutList();\n    //   // totalSeriesView.push(\n    //   //   <ListItem button>\n    //   //     <row style={{width: '100%'}}>\n    //   //       {this.buildLayoutList(index)}\n    //   //       <p\n    //   //         style={{padding: 0, margin: '5px 10px 5px 10px'}}\n    //   //       >\n    //   //         series number: {ts.seriesNumber}\n    //   //       </p>\n    //   //     </row>\n    //   //   </ListItem>\n    //   // );\n    //\n    //   if (this.seriesListDicomViewersRefs[index]) {\n    //     this.seriesListDicomViewersRefs[index].runTool('openImage', 0);\n    //     console.log(\"jjjjjjjjjjjjjj   \" + index);\n    //   }\n    //\n    //   console.log(\"@@@@@@   \" + index + \"   \" + this.state.seriesListDicomViewers.length);\n    //\n    // });\n\n    }\n\n    //console.log('this.dicomViewersRefs: ', this.dicomViewersRefs)\n    //console.log('isMultipleFiles: ', isMultipleFiles)\n    //console.log('this.mprPlane: ', this.mprPlane)\n\n    const handleClick = (event) => {\n    this.setState({anchorElLayout: event.currentTarget});\n    };\n\n    const handleClose = () => {\n    this.setState({anchorElLayout: null});\n    };\n\n    return (\n    <div>\n    <AppBar className={classes.appBar} position='static' elevation={0}>\n    <Toolbar variant=\"dense\">\n    <IconButton\n    edge=\"start\"\n    className={classes.menuButton}\n    color=\"inherit\"\n    aria-label=\"menu\"\n    onClick={this.toggleSeriesMenu}>\n    <Icon path={mdiViewList} size={iconSize} color={iconColor}/>\n    </IconButton>\n\n    <Divider\n    orientation={\"vertical\"}\n    style={{display: 'list-item', backgroundColor: '#fff'}}\n    flexItem\n    />\n\n    <Tooltip title={\"File Manager\"} arrow>\n    <IconButton\n    button\n    onClick={() => this.toggleFileManager()}\n    style={{marginLeft: '16px'}}\n    >\n    <Icon path={mdiFileCabinet} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Open\"} arrow>\n    <IconButton button onClick={(event) => this.toggleOpenMenu(event)}>\n    <Icon path={mdiFolderMultiple} size={iconSize} color={iconColor}/>\n    {openMenu ? <ExpandLess/> : <ExpandMore/>}\n    </IconButton>\n    </Tooltip>\n    <Popper\n    open={openMenu}\n    anchorEl={anchorEl}\n    role={undefined}\n    transition\n    disablePortal\n    style={{backgroundColor: '#6c5c89'}}\n    placement={'center-top'}\n    >\n    {({TransitionProps, placement}) => (\n    <Grow\n    {...TransitionProps}\n    style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n    >\n    <Paper\n    style={{backgroundColor: '#6c5c89', borderRadius: '0 0 4px 4px'}}\n    >\n    <ClickAwayListener onClickAway={(event) => this.toggleOpenMenu(event)}>\n    <MenuList\n    autoFocusItem={openMenu}\n    style={{padding: '0'}}\n    id=\"menu-list-grow\"\n    onKeyDown={(event) => this.toggleOpenMenu(event)}\n    >\n\n    <MenuItem button onClick={() => this.showFileOpen()}>\n    <ListItemIcon><Icon path={mdiFolder} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n    <ListItemText\n    classes={primaryClass}\n    primary={\n    <Typography\n    type=\"body1\"\n    style={{\n    fontSize: '0.80em',\n    marginLeft: '-20px'\n    }}>File</Typography>\n    }/>\n    </MenuItem>\n    <MenuItem button onClick={() => this.showOpenUrl()}>\n    <ListItemIcon><Icon path={mdiWeb} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n    <ListItemText\n    classes={primaryClass}\n    primary={\n    <Typography\n    type=\"body1\"\n    style={{fontSize: '0.80em', marginLeft: '-20px'}}>URL</Typography>\n    }/>\n    </MenuItem>\n    {isInputDirSupported() && !isMobile ?\n    <MenuItem button onClick={() => this.showOpenFolder()}>\n    <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n    <ListItemText\n    classes={primaryClass}\n    primary={\n    <Typography\n    type=\"body1\"\n    style={{\n    fontSize: '0.80em',\n    marginLeft: '-20px'\n    }}>Folder</Typography>\n    }/>\n    </MenuItem>\n    : null}\n    {isInputDirSupported() && !isMobile ?\n    <MenuItem button onClick={() => this.showOpenDicomdir()}>\n    <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n    <ListItemText\n    classes={primaryClass}\n    primary={\n    <Typography\n    type=\"body1\"\n    style={{\n    fontSize: '0.80em',\n    marginLeft: '-20px'\n    }}>DICOMDIR\n    </Typography>\n    }/>\n    </MenuItem>\n    : null}\n    </MenuList>\n    </ClickAwayListener>\n    </Paper>\n    </Grow>\n    )}\n    </Popper>\n\n    <Tooltip title={\"Clear All\"} arrow>\n    <IconButton button onClick={() => this.clear()}>\n    <Icon path={mdiDelete} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Layout\"} arrow>\n    <IconButton button onClick={handleClick}>\n    <Icon path={mdiViewGridPlusOutline} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Popper\n    open={Boolean(anchorElLayout)}\n    anchorEl={anchorElLayout}\n    role={undefined}\n    transition\n    disablePortal\n    style={{backgroundColor: '#6c5c89', marginTop: '3px'}}\n    placement={'center-top'}\n    >\n    {({TransitionProps, placement}) => (\n    <Grow\n    {...TransitionProps}\n    style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n    >\n    <Paper\n    style={{\n    backgroundColor: '#6c5c89',\n    borderRadius: '0 0 4px 4px',\n    }}\n    >\n    <ClickAwayListener onClickAway={handleClose}>\n    <LayoutTool\n    row={this.props.layout[0] - 1}\n    col={this.props.layout[1] - 1}\n    onChange={this.changeLayout}\n    />\n    </ClickAwayListener>\n    </Paper>\n    </Grow>\n    )}\n    </Popper>\n\n\n    <Tooltip title={\"Settings\"} arrow>\n    <IconButton button onClick={() => this.showSettings()}>\n    <Icon path={mdiSettings} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n\n    <Typography variant=\"overline\" className={classes.title}>\n    <strong>D</strong>icom <strong>V</strong>iewer\n    </Typography>\n\n\n    {/*{this.appBarTitle(classes, isOpen, dcmViewer)}*/}\n\n    {/*<div className={classes.grow}/>*/}\n    {!isOpen && !isDicomdir ? (\n    <IconButton onClick={this.showAbout}>\n    <Icon path={mdiInformationOutline} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {iconTool !== null && this.props.tool !== null && isOpen ? (\n    <IconButton onClick={this.toolChange}>\n    <Icon path={iconTool} size={iconSize} color={iconToolColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isOpen && dcmViewer.numberOfFrames > 1 && isOpen ? (\n    <IconButton onClick={this.cinePlayer}>\n    <Icon path={mdiVideo} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isOpen ? (\n    <IconButton onClick={this.resetImage}>\n    <Icon path={mdiRefresh} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isOpen ? (\n    <IconButton color=\"inherit\" onClick={this.saveShot}>\n    <Icon path={mdiCamera} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isOpen ? (\n    <IconButton color=\"inherit\" onClick={this.toggleToolbox}>\n    <Icon path={mdiToolbox} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isOpen ? (\n    <IconButton color=\"inherit\" onClick={this.toggleMeasure}>\n    <Icon path={mdiFileCad} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isOpen && dcmViewer.isDicom ? (\n    <IconButton color=\"inherit\" onClick={this.toggleHeader}>\n    <Icon path={mdiFileDocument} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isDicomdir ? (\n    <IconButton color=\"inherit\" onClick={this.toggleDicomdir}>\n    <Icon path={mdiFolderOpen} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    {isOpen ? (\n    <IconButton color=\"inherit\" onClick={this.toggleFileManager}>\n    <Icon path={mdiFileCabinet} size={iconSize} color={iconColor}/>\n    </IconButton>\n    ) : null\n    }\n    </Toolbar>\n    </AppBar>\n\n    <Card className={classes.toolbarCard} position='fixed' elevation={0}>\n    <Toolbar variant=\"dense\" style={{justifyContent: 'center'}}>\n\n    <Tooltip title={\"Histogram\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toggleToolbox()} disabled={!isOpen}>\n    <Icon path={mdiChartHistogram} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n\n    <Tooltip title={\"MPR\"} placement={\"top\"} arrow>\n    <IconButton button onClick={(event) => this.toggleMpr(event)}\n    disabled={!isOpen || !isMultipleFiles || this.mprPlane === ''}>\n    <Icon path={mdiAxisArrow} size={iconSize} color={iconColor}/>\n    {openMpr ? <ExpandMore/> : <ExpandLess/>}\n    </IconButton>\n    </Tooltip>\n\n    <Popper\n    open={openMpr}\n    anchorEl={anchorElMpr}\n    role={undefined} transition disablePortal>\n    {({TransitionProps, placement}) => (\n    <Grow\n    {...TransitionProps}\n    style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n    >\n    <Paper>\n    <ClickAwayListener onClickAway={() => this.toggleMpr()}>\n    <MenuList dense={true} component=\"div\">\n    <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprOrthogonal()}>\n    {visibleMprOrthogonal ?\n    <ListItemIcon style={{marginLeft: '-10px'}}>\n    <Icon\n    path={mdiCheck}\n    size={'1.0rem'}\n    color={iconColor}/></ListItemIcon> : null}\n    <ListItemText\n    style={visibleMprOrthogonal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n    classes={primaryClass}\n    primary={\n    <Typography\n    type=\"body1\"\n    style={{fontSize: '0.80em', marginLeft: '-23px'}}>Orthogonal</Typography>\n    }/>\n    </MenuItem>\n    <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprCoronal()}>\n    {visibleMprCoronal ?\n    <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}\n    color={iconColor}/></ListItemIcon> : null}\n    <ListItemText\n    style={visibleMprCoronal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n    classes={primaryClass}\n    primary={\n    <Typography\n    type=\"body1\"\n    style={{fontSize: '0.80em', marginLeft: '-23px'}}>Coronal</Typography>\n    }/>\n    </MenuItem>\n    <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprSagittal()}>\n    {visibleMprSagittal ?\n    <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}\n    color={iconColor}/></ListItemIcon> : null}\n    <ListItemText\n    style={visibleMprSagittal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n    classes={primaryClass}\n    primary={\n    <Typography type=\"body1\"\n    style={{fontSize: '0.80em', marginLeft: '-23px'}}>Sagittal</Typography>\n    }/>\n    </MenuItem>\n    <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprAxial()}>\n    {visibleMprAxial ?\n    <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}\n    color={iconColor}/></ListItemIcon> : null}\n    <ListItemText\n    style={visibleMprAxial ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n    classes={primaryClass}\n    primary={\n    <Typography type=\"body1\"\n    style={{fontSize: '0.80em', marginLeft: '-23px'}}>Axial</Typography>\n    }/>\n    </MenuItem>\n    </MenuList>\n    </ClickAwayListener>\n    </Paper>\n    </Grow>\n    )}\n    </Popper>\n\n\n    <Tooltip title={\"Edit\"} placement={\"top\"} arrow>\n    <IconButton\n    button\n    onClick={(event) => this.toggleImageEdit(event)}\n    // disabled={!isOpen}\n    >\n    <Icon path={mdiImageEdit} size={iconSize} color={iconColor}/>\n    {openImageEdit ? <ExpandMore/> : <ExpandLess/>}\n    </IconButton>\n    </Tooltip>\n    {/*<Menu*/}\n    {/*  id=\"simple-menu\"*/}\n    {/*  anchorEl={anchorElImageEdit}*/}\n    {/*  keepMounted*/}\n    {/*  open={Boolean(anchorElImageEdit)}*/}\n    {/*  onClose={handleClose}*/}\n    {/*  style={{marginTop:'-31px'}}*/}\n    {/*>*/}\n    {/*  <MenuList style={{backgroundColor:'#6c5c89'}}>*/}\n    {/*  <ClickAwayListener onClickAway={(event) => this.toggleImageEdit(event)}>*/}\n    {/*      <MenuItem button onClick={() => this.toolExecute('Invert')}>*/}\n    {/*        <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary=\"Invert\"/>*/}\n    {/*      </MenuItem>*/}\n    {/*  </ClickAwayListener>*/}\n    {/*  </MenuList>*/}\n\n    {/*</Menu>*/}\n    <Popper\n    open={Boolean(anchorElImageEdit)}\n    anchorEl={anchorElImageEdit}\n    role={undefined}\n    transition\n    style={{backgroundColor: '#6C5C89'}}\n    placement={\"top\"}\n    >\n    {({TransitionProps, placement}) => (\n    <Grow\n    {...TransitionProps}\n    style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n    >\n    <Paper style={{backgroundColor: '#6C5C89'}}>\n    <ClickAwayListener onClickAway={(event) => this.toggleImageEdit(event)}>\n    <MenuList dense={true} component=\"div\" style={{padding: '0'}}>\n    <MenuItem button onClick={() => this.toolExecute('Invert')}>\n    <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor}/></ListItemIcon>\n    <ListItemText classes={primaryClass} primary=\"Invert\"/>\n    </MenuItem>\n    </MenuList>\n    </ClickAwayListener>\n    </Paper>\n    </Grow>\n    )}\n    </Popper>\n\n    <Divider orientation=\"vertical\" style={{display: 'list-item', backgroundColor: '#fff'}}/>\n\n    <Tooltip title={\"No tool\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('notool')}\n    disabled={!isOpen}>\n    <Icon path={mdiCursorDefault} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"WW/WC\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('Wwwc')}\n    disabled={!isOpen}>\n    <Icon path={mdiArrowAll} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Pan\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('Pan')} disabled={!isOpen}>\n    <Icon path={mdiCursorPointer} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Zoom\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('Zoom')}\n    disabled={!isOpen}>\n    <Icon path={mdiMagnify} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Magnify\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('Magnify')}\n    disabled={!isOpen}>\n    <Icon path={mdiCheckboxIntermediate} size={iconSize}\n    color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Length\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('Length')}\n    disabled={!isOpen}>\n    <Icon path={mdiRuler} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Probe\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('Probe')}\n    disabled={!isOpen}>\n    <Icon path={mdiEyedropper} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Angle\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('Angle')}\n    disabled={!isOpen}>\n    <Icon path={mdiAngleAcute} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Elliptical Roi\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('EllipticalRoi')}\n    disabled={!isOpen}>\n    <Icon path={mdiEllipse} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Rectangle Roi\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('RectangleRoi')}\n    disabled={!isOpen}>\n    <Icon path={mdiRectangle} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n    <Tooltip title={\"Freehand Roi\"} placement={\"top\"} arrow>\n    <IconButton button onClick={() => this.toolExecute('FreehandRoi')}\n    disabled={!isOpen}>\n    <Icon path={mdiGesture} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Tooltip>\n\n    </Toolbar>\n    </Card>\n\n    <Drawer\n    variant=\"persistent\"\n    open={visibleSeries}\n    style={{position: 'relative', zIndex: 1}}\n    onClose={this.toggleSeriesMenu}\n    >\n    <div className={classes.toolbar} style={{marginTop: '48px'}}>\n    <List dense={true}>\n    <ListItem button onClick={() => this.showAppBar()}>\n    <ListItemIcon><Icon path={mdiArrowLeftCircle} size={iconSize} color={iconColor}/></ListItemIcon>\n    <ListItemText classes={primaryClass} primary='Hide Series'/>\n    </ListItem>\n    <Divider/>\n\n    {/*<SeriesList series={totalSeries}/>*/}\n    {totalSeries ? totalSeriesView : (<p style={{padding: 0, textAlign: 'center'}}>nothing</p>)}\n    </List>\n    </div>\n    </Drawer>\n    {/*<Drawer*/}\n    {/*  variant=\"persistent\"*/}\n    {/*  open={visibleMainMenu}*/}\n    {/*  style={{position: 'relative', zIndex: 1}}*/}\n    {/*  onClose={this.toggleMainMenu}*/}\n    {/*>*/}\n    {/*  <div className={classes.toolbar}>*/}\n    {/*    <List dense={true}>*/}\n    {/*      <ListItem button onClick={() => this.showAppBar()}>*/}\n    {/*        <ListItemIcon><MenuIcon/></ListItemIcon>*/}\n    {/*        <ListItemText primary='Tool Bar'/>*/}\n    {/*      </ListItem>*/}\n    {/*      <ListItem button onClick={() => this.toggleFileManager()}>*/}\n    {/*        <ListItemIcon><Icon path={mdiFileCabinet} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='File Manager'/>*/}\n    {/*      </ListItem>*/}\n\n    {/*      <ListItem button onClick={() => this.toggleOpenMenu()}>*/}\n    {/*        <ListItemIcon><Icon path={mdiFolderMultiple} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='Open ...'/>*/}\n    {/*        {openMenu ? <ExpandLess/> : <ExpandMore/>}*/}\n    {/*      </ListItem>*/}\n    {/*      <Collapse in={openMenu} timeout=\"auto\" unmountOnExit>*/}\n    {/*        <List dense={true} component=\"div\">*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.showFileOpen()}>*/}\n    {/*            <ListItemIcon><Icon path={mdiFolder} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass}*/}\n    {/*                          primary={*/}\n    {/*                            <Typography type=\"body1\"*/}\n    {/*                                        style={{fontSize: '0.80em', marginLeft: '-20px'}}>File</Typography>*/}\n    {/*                          }/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenUrl()}>*/}\n    {/*            <ListItemIcon><Icon path={mdiWeb} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass}*/}\n    {/*                          primary={*/}\n    {/*                            <Typography type=\"body1\"*/}\n    {/*                                        style={{fontSize: '0.80em', marginLeft: '-20px'}}>URL</Typography>*/}\n    {/*                          }/>*/}\n    {/*          </ListItem>*/}\n    {/*          {isInputDirSupported() && !isMobile ?*/}\n    {/*            <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenFolder()}>*/}\n    {/*              <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n    {/*              <ListItemText classes={primaryClass}*/}\n    {/*                            primary={*/}\n    {/*                              <Typography type=\"body1\"*/}\n    {/*                                          style={{fontSize: '0.80em', marginLeft: '-20px'}}>Folder</Typography>*/}\n    {/*                            }/>*/}\n    {/*            </ListItem>*/}\n    {/*            : null}*/}\n    {/*          {isInputDirSupported() && !isMobile ?*/}\n    {/*            <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenDicomdir()}>*/}\n    {/*              <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n    {/*              <ListItemText classes={primaryClass}*/}\n    {/*                            primary={*/}\n    {/*                              <Typography type=\"body1\" style={{*/}\n    {/*                                fontSize: '0.80em',*/}\n    {/*                                marginLeft: '-20px'*/}\n    {/*                              }}>DICOMDIR</Typography>*/}\n    {/*                            }/>*/}\n    {/*            </ListItem>*/}\n    {/*            : null}*/}\n    {/*        </List>*/}\n    {/*      </Collapse>*/}\n\n    {/*      <ListItem button onClick={() => this.clear()}>*/}\n    {/*        <ListItemIcon><Icon path={mdiDelete} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='Clear All'/>*/}\n    {/*      </ListItem>*/}\n    {/*      <ListItem button onClick={this.handleLayout}>*/}\n    {/*        <ListItemIcon><Icon path={mdiViewGridPlusOutline} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='Layout'/>*/}\n    {/*      </ListItem>*/}\n    {/*      <ListItem button onClick={() => this.showSettings()}>*/}\n    {/*        <ListItemIcon><Icon path={mdiSettings} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='Settings'/>*/}\n    {/*      </ListItem>*/}\n    {/*      <Divider/>*/}\n    {/*      <ListItem button onClick={() => this.toggleToolbox()} disabled={!isOpen}>*/}\n    {/*        <ListItemIcon><Icon path={mdiChartHistogram} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='Histogram'/>*/}\n    {/*      </ListItem>*/}\n    {/*      <ListItem button onClick={() => this.toggleMpr()}*/}\n    {/*                disabled={!isOpen || !isMultipleFiles || this.mprPlane === ''}>*/}\n    {/*        <ListItemIcon><Icon path={mdiAxisArrow} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='MPR'/>*/}\n    {/*        {openMpr ? <ExpandLess/> : <ExpandMore/>}*/}\n    {/*      </ListItem>*/}\n    {/*      <Collapse in={openMpr} timeout=\"auto\" unmountOnExit>*/}\n    {/*        <List dense={true} component=\"div\">*/}\n    {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprOrthogonal()}>*/}\n    {/*            {visibleMprOrthogonal ?*/}\n    {/*              <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n    {/*                                                                color={iconColor}/></ListItemIcon> : null}*/}\n    {/*            <ListItemText*/}\n    {/*              style={visibleMprOrthogonal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n    {/*              classes={primaryClass}*/}\n    {/*              primary={*/}\n    {/*                <Typography type=\"body1\"*/}\n    {/*                            style={{fontSize: '0.80em', marginLeft: '-23px'}}>Orthogonal</Typography>*/}\n    {/*              }/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprCoronal()}>*/}\n    {/*            {visibleMprCoronal ?*/}\n    {/*              <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n    {/*                                                                color={iconColor}/></ListItemIcon> : null}*/}\n    {/*            <ListItemText*/}\n    {/*              style={visibleMprCoronal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n    {/*              classes={primaryClass}*/}\n    {/*              primary={*/}\n    {/*                <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Coronal</Typography>*/}\n    {/*              }/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprSagittal()}>*/}\n    {/*            {visibleMprSagittal ?*/}\n    {/*              <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n    {/*                                                                color={iconColor}/></ListItemIcon> : null}*/}\n    {/*            <ListItemText*/}\n    {/*              style={visibleMprSagittal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n    {/*              classes={primaryClass}*/}\n    {/*              primary={*/}\n    {/*                <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Sagittal</Typography>*/}\n    {/*              }/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprAxial()}>*/}\n    {/*            {visibleMprAxial ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n    {/*                                                                                 color={iconColor}/></ListItemIcon> : null}*/}\n    {/*            <ListItemText*/}\n    {/*              style={visibleMprAxial ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n    {/*              classes={primaryClass}*/}\n    {/*              primary={*/}\n    {/*                <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Axial</Typography>*/}\n    {/*              }/>*/}\n    {/*          </ListItem>*/}\n    {/*        </List>*/}\n    {/*      </Collapse>*/}\n    {/*      <ListItem button onClick={() => this.toggleImageEdit()} disabled={!isOpen}>*/}\n    {/*        <ListItemIcon><Icon path={mdiImageEdit} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='Edit'/>*/}\n    {/*        {openImageEdit ? <ExpandLess/> : <ExpandMore/>}*/}\n    {/*      </ListItem>*/}\n    {/*      <Collapse in={openImageEdit} timeout=\"auto\" unmountOnExit>*/}\n    {/*        <List dense={true} component=\"div\">*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Invert')}>*/}\n    {/*            <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary=\"Invert\"/>*/}\n    {/*          </ListItem>*/}\n    {/*        </List>*/}\n    {/*      </Collapse>*/}\n    {/*      <ListItem button onClick={() => this.toggleTools()} disabled={!isOpen}>*/}\n    {/*        <ListItemIcon><Icon path={mdiTools} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*        <ListItemText classes={primaryClass} primary='Tools'/>*/}\n    {/*        {openTools ? <ExpandLess/> : <ExpandMore/>}*/}\n    {/*      </ListItem>*/}\n    {/*      <Collapse in={openTools} timeout=\"auto\" unmountOnExit>*/}\n    {/*        <List dense={true} component=\"div\">*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('notool')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiCursorDefault} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='No tool'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Wwwc')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiArrowAll} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='WW/WC'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Pan')} disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiCursorPointer} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Pan'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Zoom')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiMagnify} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Zoom'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Magnify')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiCheckboxIntermediate} size={iconSize}*/}\n    {/*                                color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Magnify'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Length')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiRuler} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Length'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Probe')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiEyedropper} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Probe'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Angle')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiAngleAcute} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Angle'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('EllipticalRoi')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiEllipse} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Elliptical Roi'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('RectangleRoi')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiRectangle} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Rectangle Roi'/>*/}\n    {/*          </ListItem>*/}\n    {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('FreehandRoi')}*/}\n    {/*                    disabled={!isOpen}>*/}\n    {/*            <ListItemIcon><Icon path={mdiGesture} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n    {/*            <ListItemText classes={primaryClass} primary='Freehand Roi'/>*/}\n    {/*          </ListItem>*/}\n    {/*        </List>*/}\n    {/*      </Collapse>*/}\n\n    {/*    </List>*/}\n\n    {/*    {isMultipleFiles ?*/}\n    {/*      <div>*/}\n    {/*        <Divider/>*/}\n    {/*        <div align='center'>*/}\n    {/*          <IconButton onClick={this.listOpenFilesFirstFrame} size='small'>*/}\n    {/*            <Icon path={mdiSkipBackward} size={'1.0rem'} color={iconColor}/>*/}\n    {/*          </IconButton>*/}\n    {/*          <IconButton onClick={this.listOpenFilesPreviousFrame} size='small'>*/}\n    {/*            <Icon path={mdiSkipPrevious} size={'1.0rem'} color={iconColor}/>*/}\n    {/*          </IconButton>*/}\n    {/*          <IconButton onClick={this.listOpenFilesScrolling} size='small'>*/}\n    {/*            <Icon path={this.state.listOpenFilesScrolling ? mdiPause : mdiPlay} size={'1.0rem'}*/}\n    {/*                  color={iconColor}/>*/}\n    {/*          </IconButton>*/}\n    {/*          <IconButton onClick={this.listOpenFilesNextFrame} size='small'>*/}\n    {/*            <Icon path={mdiSkipNext} size={'1.0rem'} color={iconColor}/>*/}\n    {/*          </IconButton>*/}\n    {/*          <IconButton onClick={this.listOpenFilesLastFrame} size='small'>*/}\n    {/*            <Icon path={mdiSkipForward} size={'1.0rem'} color={iconColor}/>*/}\n    {/*          </IconButton>*/}\n    {/*        </div>*/}\n    {/*        <div style={{textAlign: 'center'}}>*/}\n    {/*          <Typography type=\"body1\"*/}\n    {/*                      style={{fontSize: '0.80em'}}>{`${this.state.sliceIndex + 1} / ${sliceMax}`}</Typography>*/}\n    {/*        </div>*/}\n    {/*        <div style={{width: '130px', margin: 'auto'}}>*/}\n    {/*          <Slider*/}\n    {/*            style={{marginTop: '-4px'}}*/}\n    {/*            value={this.state.sliceIndex}*/}\n    {/*            onChange={this.handleSliceChange}*/}\n    {/*            color=\"secondary\"*/}\n    {/*            min={0}*/}\n    {/*            max={sliceMax - 1}*/}\n    {/*            step={100 / sliceMax}*/}\n    {/*          />*/}\n    {/*        </div>*/}\n    {/*      </div> : null*/}\n    {/*    }*/}\n\n    {/*  </div>*/}\n    {/*</Drawer>*/}\n\n    <Drawer\n    variant=\"persistent\"\n    anchor='right'\n    open={visibleHeader}\n    onClose={this.toggleHeader}\n    >\n    {visibleHeader ? <DicomHeader dcmViewer={dcmViewer} classes={classes} color={iconColor}/> : null}\n    </Drawer>\n\n    <Drawer\n    variant=\"persistent\"\n    anchor='right'\n    open={visibleMeasure}\n    onClose={this.toggleMeasure}\n    >\n    <div style={{marginTop: '48px'}}>\n    <Toolbar variant=\"dense\">\n    <Typography variant=\"subtitle1\" className={classes.title}>\n    Measurements&nbsp;&nbsp;\n    </Typography>\n    <div className={classes.grow}/>\n    <IconButton color=\"inherit\" onClick={this.saveMeasure} edge=\"end\">\n    <Icon path={mdiContentSaveOutline} size={iconSize} color={iconColor}/>\n    </IconButton>\n    <IconButton color=\"inherit\" onClick={this.clearMeasure} edge=\"end\">\n    <Icon path={mdiTrashCanOutline} size={iconSize} color={iconColor}/>\n    </IconButton>\n    </Toolbar>\n    <div>\n    {isOpen ? <Measurements dcmViewer={dcmViewer} toolRemove={this.toolRemove} classes={classes}/> : null}\n    </div>\n    </div>\n    </Drawer>\n\n    <Drawer\n    variant=\"persistent\"\n    anchor='right'\n    open={visibleToolbox}\n    onClose={this.toggleToolbox}\n    >\n    <div style={{marginTop: '48px'}}>\n    <div>\n    {isOpen ? <Histogram key={this.getFileName(dcmViewer)}/> : null}\n    </div>\n    </div>\n    </Drawer>\n\n    <Drawer\n    variant=\"persistent\"\n    anchor={getSettingsDicomdirView()}\n    open={visibleDicomdir}\n    onClose={this.toggleDicomdir}\n    >\n    <div>\n    <div>\n    {visibleDicomdir ?\n    <Dicomdir onOpenFile={this.handleOpenFileDicomdir} onOpenFs={this.handleOpenSandboxFs}/> : null}\n    </div>\n    </div>\n    </Drawer>\n\n    <Drawer\n    variant=\"persistent\"\n    anchor={getSettingsFsView()}\n    open={visibleFileManager}\n    onClose={this.toggleFileManager}\n    >\n    <div>\n    <div>\n    {visibleFileManager ?\n    <FsUI\n    onOpen={this.handleOpenSandboxFs}\n    onOpenImage={this.handleOpenImage}\n    onOpenMultipleFilesCompleted={this.openMultipleFilesCompleted}\n    onOpenDicomdir={this.handleOpenFsDicomdir}\n    color={iconColor}\n    />\n    : null}\n    </div>\n    </div>\n    </Drawer>\n\n    {visibleSettings ? <Settings onClose={this.hideSettings}/> : null}\n\n    {visibleAbout ? <AboutDlg onClose={this.showAbout}/> : null}\n\n    {visibleDownloadZipDlg ? <DownloadZipDlg onClose={this.hideDownloadZipDlg} url={this.url}/> : null}\n\n    {visibleOpenMultipleFilesDlg ?\n    <OpenMultipleFilesDlg onClose={this.hideOpenMultipleFilesDlg} files={this.files} origin={'local'}/> : null}\n\n    <Dialog\n    open={visibleClearMeasureDlg}\n    onClose={this.hideClearMeasureDlg}\n    >\n    <DialogTitle>{\"Are you sure to remove all the measurements?\"}</DialogTitle>\n    <DialogActions>\n    <Button onClick={this.hideClearMeasureDlg}>\n    Cancel\n    </Button>\n    <Button onClick={this.confirmClearMeasureDlg} autoFocus>\n    Ok\n    </Button>\n    </DialogActions>\n    </Dialog>\n\n    <Dialog\n    open={visibleZippedFileDlg}\n    onClose={this.hideZippedFileDlg}\n    >\n    <DialogTitle>{\"This is a zipped file, would you import into sandbox file system?\"}</DialogTitle>\n    <DialogActions>\n    <Button onClick={this.hideZippedFileDlg}>\n    Cancel\n    </Button>\n    <Button onClick={this.confirmZippedFileDlg} autoFocus>\n    Ok\n    </Button>\n    </DialogActions>\n    </Dialog>\n\n    <Dialog\n    open={this.state.visibleOpenUrl}\n    aria-labelledby=\"form-dialog-title\"\n    >\n    <DialogTitle id=\"form-dialog-title\">{\"Open URL\"}</DialogTitle>\n    <DialogContent>\n    <DialogContentText id=\"alert-dialog-description\">\n    Insert an URL to download a DICOM or image file:\n    </DialogContentText>\n    <TextField\n    autoFocus\n    margin=\"dense\"\n    id=\"id-open-url\"\n    inputRef={input => (this.openUrlField = input)}\n    fullWidth\n    />\n    </DialogContent>\n    <DialogActions>\n    <Button onClick={() => this.hideOpenUrl(false)}>\n    Cancel\n    </Button>\n    <Button onClick={() => this.hideOpenUrl(true)} autoFocus>\n    Ok\n    </Button>\n    </DialogActions>\n    </Dialog>\n\n    {/*<Popover*/}\n    {/*  id={'id-layout'}*/}\n    {/*  open={visibleLayout}*/}\n    {/*  anchorEl={this.state.anchorElLayout}*/}\n    {/*  onClose={this.closeLayout}*/}\n    {/*  anchorOrigin={{*/}\n    {/*    vertical: 'center',*/}\n    {/*    horizontal: 'bottom',*/}\n    {/*  }}*/}\n    {/*  transformOrigin={{*/}\n    {/*    vertical: 'bottom',*/}\n    {/*    horizontal: 'left',*/}\n    {/*  }}*/}\n    {/*>*/}\n    {/*  <LayoutTool*/}\n    {/*    row={this.props.layout[0] - 1}*/}\n    {/*    col={this.props.layout[1] - 1}*/}\n    {/*    onChange={this.changeLayout}*/}\n    {/*  />*/}\n    {/*</Popover>*/}\n\n    <Snackbar\n    anchorOrigin={{\n    vertical: 'top',\n    horizontal: 'center',\n    }}\n    open={visibleVolumeBuilding}\n    autoHideDuration={6000}\n    message=\"Volume building, wait please ...\"\n    />\n\n    <div style={{height: 'calc(100vh - 48px)'}}>\n    {this.buildLayoutGrid()}\n    </div>\n\n    <div>\n    <input\n    type=\"file\"\n    id=\"file_open\"\n    style={{display: \"none\"}}\n    ref={this.fileOpen}\n    onChange={e => this.handleOpenLocalFs(e.target.files)}\n    multiple\n    />\n    </div>\n\n    <div>\n    <input\n    type=\"file\"\n    id=\"file_dicomdir\"\n    style={{display: \"none\"}}\n    ref={this.openDicomdir}\n    onChange={e => this.handleOpenDicomdir(e.target.files)}\n    webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n    />\n    </div>\n\n    <div>\n    <input\n    type=\"file\"\n    id=\"file_folder\"\n    style={{display: \"none\"}}\n    ref={this.openFolder}\n    onChange={e => this.handleOpenFolder(e.target.files)}\n    webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n    />\n    </div>\n\n    </div>\n    )\n    }\n    }\n\n    const mapStateToProps = (state) => {\n    return {\n    localFileStore: state.localFileStore,\n    files: state.files,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    dicomdir: state.dicomdir,\n    fsZippedFile: state.fsZippedFile,\n    }\n    };\n\n    const mapDispatchToProps = (dispatch) => {\n    return {\n    clearingStore: () => dispatch(clearStore()),\n    setLocalFileStore: (file) => dispatch(localFileStore(file)),\n    toolStore: (tool) => dispatch(dcmTool(tool)),\n    isOpenStore: (value) => dispatch(dcmIsOpen(value)),\n    setActiveDcm: (dcm) => dispatch(activeDcm(dcm)),\n    setActiveDcmIndex: (index) => dispatch(activeDcmIndex(index)),\n    setActiveMeasurements: (measurements) => dispatch(activeMeasurements(measurements)),\n    setLayoutStore: (row, col) => dispatch(setLayout(row, col)),\n    setDicomdirStore: (dicomdir) => dispatch(setDicomdir(dicomdir)),\n    setFsZippedFile: (file) => dispatch(setZippedFile(file)),\n    setVolumeStore: (file) => dispatch(setVolume(file)),\n    setFilesStore: (files) => dispatch(filesStore(files)),\n    }\n    };\n\n    export default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\n"]},"metadata":{},"sourceType":"module"}