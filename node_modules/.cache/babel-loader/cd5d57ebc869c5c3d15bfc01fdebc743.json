{"ast":null,"code":"var _jsxFileName = \"/media/mohammad/work/websites/cornerstone/dicom-viewer/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Dicomdir from './components/Dicomdir';\nimport DicomViewer from './components/DicomViewer';\nimport DicomHeader from './components/DicomHeader';\nimport Measurements from './components/Measurements';\nimport Settings from './components/Settings';\nimport AboutDlg from './components/AboutDlg';\nimport Histogram from './components/Histogram';\nimport LayoutTool from './components/LayoutTool';\nimport FsUI from './components/FsUI';\nimport DownloadZipDlg from './components/DownloadZipDlg';\nimport OpenMultipleFilesDlg from './components/OpenMultipleFilesDlg';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Icon from '@mdi/react';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography'; //import { FixedSizeList } from 'react-window'\n//import {List as ListVirtual} from 'react-virtualized'\n\nimport { isMobile, isTablet } from 'react-device-detect';\nimport { clearStore, localFileStore, dcmIsOpen, activeDcm, activeDcmIndex, activeMeasurements, setLayout, dcmTool, setDicomdir, setZippedFile, setVolume, filesStore } from './actions/index';\nimport { //log,\ngetPixelSpacing, getSpacingBetweenSlice, getSliceThickness, getSliceLocation //getFileNameCorrect,\n, getFileExtReal, isInputDirSupported, getSettingsFsView, getSettingsDicomdirView, getSettingsMprInterpolation } from './functions';\nimport { mdiAngleAcute, mdiArrowAll, mdiAxisArrow, mdiCamera, mdiChartHistogram, mdiCheck, mdiCheckboxIntermediate, mdiContentSaveOutline, mdiCursorDefault, mdiCursorPointer, mdiDelete, mdiEllipse, mdiEyedropper, mdiFileCabinet, mdiFileDocument, mdiFileCad, mdiFolder, mdiFolderMultiple, mdiGesture, mdiViewGridPlusOutline, mdiImageEdit, mdiInformationOutline, mdiInvertColors, mdiMagnify, mdiFolderOpen, mdiRefresh, mdiRectangle, mdiRuler, mdiSettings, mdiToolbox //mdiTools,\n, mdiTrashCanOutline, mdiVideo, mdiWeb // mdiPlay,\n// mdiPause,\n// mdiSkipBackward,\n// mdiSkipForward,\n// mdiSkipNext,\n// mdiSkipPrevious, \n, mdiArrowLeft, mdiArrowLeftCircle, mdiViewList } from '@mdi/js';\nimport './App.css';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\"; // import Menu from \"@material-ui/core/Menu\";\n\nimport Popper from \"@material-ui/core/Popper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Card from \"@material-ui/core/Card\";\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\";\nimport * as cornerstone from \"cornerstone-core\"; // import * as dicomParser from \"dicom-parser\";\n// import SeriesList from \"./components/SeriesList\";\n// log();\n\nlocalStorage.setItem(\"debug\", \"cornerstoneTools\");\nconst drawerWidth = 240;\nconst iconColor = '#FFFFFF';\nlet iconTool = null;\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.black\n    }\n  },\n  grow: {\n    flexGrow: 1\n  },\n  root: {\n    display: 'flex'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n  appBar: {\n    position: 'relative',\n    backgroundColor: '#453479',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  toolbarCard: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: '#453479',\n    position: 'absolute',\n    margin: '0 25% 0 25%',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    top: 'auto',\n    bottom: 0,\n    right: 0,\n    left: 0\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  // Loads information about the app bar, including app bar height\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  listItemText: {\n    fontSize: '0.85em',\n    marginLeft: '-20px'\n  }\n});\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorElLayout: null,\n      openMenu: false,\n      openImageEdit: false,\n      openTools: false,\n      openMpr: false,\n      openLayout: false,\n      visibleMainMenu: true,\n      visibleHeader: false,\n      visibleSettings: false,\n      visibleToolbar: true,\n      visibleOpenUrl: false,\n      visibleToolbox: false,\n      visibleMeasure: false,\n      visibleClearMeasureDlg: false,\n      visibleAbout: false,\n      visibleDicomdir: false,\n      visibleFileManager: false,\n      visibleZippedFileDlg: false,\n      visibleDownloadZipDlg: false,\n      visibleOpenMultipleFilesDlg: false,\n      toolState: 1,\n      sliceIndex: 0,\n      sliceMax: 1,\n      listOpenFilesScrolling: false,\n      visibleVolumeBuilding: false,\n      visibleMprOrthogonal: false,\n      visibleMprCoronal: false,\n      visibleMprSagittal: false,\n      visibleMprAxial: false,\n      anchorEl: null,\n      anchorElMpr: null,\n      anchorElImageEdit: null,\n      visibleSeries: false,\n      totalSeries: null,\n      seriesListDicomViewers: []\n    };\n\n    this.setDcmViewer = (index, type) => {\n      if (type === 'grid') {\n        return React.createElement(DicomViewer, {\n          dcmRef: ref => {\n            this.dicomViewersRefs[index] = ref;\n          },\n          index: index,\n          runTool: ref => this.runTool = ref,\n          changeTool: ref => this.changeTool = ref,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        });\n      } else if (type === 'list') {\n        console.log('listttttttttttt');\n        return React.createElement(DicomViewer, {\n          dcmRef: ref => {\n            this.seriesListDicomViewersRefs[index] = ref;\n          },\n          index: index,\n          runTool: ref => this.runTool = ref,\n          changeTool: ref => this.changeTool = ref // files={this.state.totalSeries ? this.state.totalSeries[index].files : []}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.getDcmViewerRef = index => {\n      return this.dicomViewersRefs[index];\n    };\n\n    this.getDcmViewer = index => {\n      return this.dicomViewers[index];\n    };\n\n    this.getActiveDcmViewer = () => {\n      return this.dicomViewersRefs[this.props.activeDcmIndex];\n    };\n\n    this.toggleFileManager = () => {\n      if (getSettingsFsView() === 'left') {\n        this.setState({\n          visibleMainMenu: false,\n          visibleFileManager: !this.state.visibleFileManager\n        });\n      } else {\n        this.setState({\n          visibleFileManager: !this.state.visibleFileManager\n        });\n      }\n    };\n\n    this.handleOpenLocalFs = filesSelected => {\n      //console.log('handleOpenLocalFs: ', filesSelected)\n      if (filesSelected.length > 1) {\n        this.files = filesSelected;\n        this.changeLayout(1, 1);\n        this.mprPlane = '';\n        this.volume = [];\n\n        for (let i = 0; i < 16; i++) if (this.dicomViewersRefs[i] !== undefined) {// this.dicomViewersRefs[i].runTool('clear')\n        }\n\n        this.setState({\n          sliceIndex: 0,\n          sliceMax: 1,\n          visibleMprOrthogonal: false,\n          visibleMprCoronal: false,\n          visibleMprSagittal: false,\n          visibleMprAxial: false\n        }, () => {\n          this.setState({\n            visibleOpenMultipleFilesDlg: true\n          });\n        });\n      } else {\n        const file = filesSelected[0];\n        console.log('file: ', file);\n\n        if (file.type === 'application/x-zip-compressed' || file.type === 'application/zip') {\n          this.file = file;\n          this.url = null;\n          this.setState({\n            visibleZippedFileDlg: true\n          });\n        } else {\n          this.setState({\n            sliceIndex: 0,\n            sliceMax: 1\n          });\n          this.props.setLocalFileStore(file);\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file);\n        }\n      }\n    };\n\n    this.handleOpenSandboxFs = fsItem => {\n      //this.hideMainMenu()\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openSandboxFs', fsItem);\n    };\n\n    this.handleOpenImage = index => {\n      //console.log('handleOpenImage : ', index)\n      const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n      const visibleMprSagittal = this.state.visibleMprSagittal;\n      const visibleMprCoronal = this.state.visibleMprCoronal;\n      const visibleMprAxial = this.state.visibleMprAxial;\n      const plane = this.mprPlanePosition(); //console.log('plane: ', plane)\n\n      if (visibleMprOrthogonal) {\n        if (this.props.activeDcmIndex === 0) {\n          this.dicomViewersRefs[0].runTool('openimage', index);\n        } else if (this.props.activeDcmIndex === 1) {\n          if (plane === 'sagittal') {\n            // then open axial plane in second view\n            this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else if (plane === 'axial') {\n            // then open coronal plane in second view\n            this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else {\n            // plane is coronal, then open axial in second view\n            this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          }\n        } else if (this.props.activeDcmIndex === 2) {\n          if (plane === 'sagittal') {\n            // then open axial plane in second view\n            this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else if (plane === 'axial') {\n            // then open coronal plane in second view\n            this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          } else {\n            // plane is coronal, then open axial in second view\n            this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n          }\n        }\n      } else if (plane === 'sagittal' && visibleMprSagittal || plane === 'axial' && visibleMprAxial || plane === 'coronal' && visibleMprCoronal) this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);else if (plane === 'sagittal' && visibleMprAxial) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'sagittal' && visibleMprCoronal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'axial' && visibleMprSagittal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'axial' && visibleMprCoronal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'coronal' && visibleMprSagittal) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else if (plane === 'coronal' && visibleMprAxial) this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);else // it's not a possible MPR, then open as normal dicom file  \n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n    };\n\n    this.handleOpenFileDicomdir = file => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file);\n    };\n\n    this.handleOpenFsDicomdir = fsItem => {\n      this.props.setDicomdirStore({\n        origin: 'fs',\n        dicomdir: fsItem,\n        files: []\n      });\n      this.toggleDicomdir();\n    };\n\n    this.showAppBar = () => {\n      window.scrollTo(0, 0);\n    };\n\n    this.toggleSeriesMenu = () => {\n      const visibleSeries = this.state.visibleSeries; //const visibleFileManager = this.state.visibleFileManager\n\n      if (getSettingsFsView() === 'left') {\n        this.setState({\n          visibleSeries: !visibleSeries,\n          visibleFileManager: false\n        });\n      } else {\n        this.setState({\n          visibleSeries: !visibleSeries\n        });\n      }\n    };\n\n    this.toggleMainMenu = () => {\n      const visibleMainMenu = this.state.visibleMainMenu; //const visibleFileManager = this.state.visibleFileManager\n\n      if (getSettingsFsView() === 'left') {\n        this.setState({\n          visibleMainMenu: !visibleMainMenu,\n          visibleFileManager: false\n        });\n      } else {\n        this.setState({\n          visibleMainMenu: !visibleMainMenu\n        });\n      }\n    };\n\n    this.showMainMenu = () => {\n      this.setState({\n        visibleMainMenu: true\n      });\n    };\n\n    this.hideMainMenu = () => {\n      this.setState({\n        visibleMainMenu: false\n      });\n    };\n\n    this.handleVisibility = visibleMainMenu => {\n      this.setState({\n        visibleMainMenu\n      });\n    };\n\n    this.toggleHeader = () => {\n      const visible = !this.state.visibleHeader;\n      this.setState({\n        visibleHeader: visible\n      });\n      if (visible) this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.toggleToolbox = () => {\n      const visible = !this.state.visibleToolbox;\n      this.setState({\n        visibleToolbox: visible\n      });\n      if (visible) this.setState({\n        visibleMeasure: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.saveMeasure = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('savetools');\n    };\n\n    this.toggleMeasure = () => {\n      const visible = !this.state.visibleMeasure;\n      this.setState({\n        visibleMeasure: visible\n      });\n      if (visible) this.setState({\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.hideMeasure = () => {\n      this.setState({\n        visibleMeasure: false\n      });\n    };\n\n    this.handleVisibilityMeasure = visibleMeasure => {\n      this.setState({\n        visibleMeasure\n      });\n    };\n\n    this.toggleDicomdir = () => {\n      const visible = !this.state.visibleDicomdir;\n      console.log('toggleDicomdir: ', visible);\n      this.setState({\n        visibleDicomdir: visible\n      });\n      if (visible) this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleFileManager: false\n      });\n    };\n\n    this.clearMeasure = () => {\n      this.showClearMeasureDlg();\n    };\n\n    this.showClearMeasureDlg = () => {\n      this.setState({\n        visibleClearMeasureDlg: true\n      });\n    };\n\n    this.hideClearMeasureDlg = () => {\n      this.setState({\n        visibleClearMeasureDlg: false\n      });\n    };\n\n    this.confirmClearMeasureDlg = () => {\n      this.hideClearMeasureDlg();\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools');\n    };\n\n    this.showZippedFileDlg = () => {\n      this.setState({\n        visibleZippedFileDlg: true\n      });\n    };\n\n    this.hideZippedFileDlg = () => {\n      this.setState({\n        visibleZippedFileDlg: false\n      });\n    };\n\n    this.confirmZippedFileDlg = () => {\n      this.hideZippedFileDlg();\n      this.setState({\n        visibleFileManager: true\n      }, () => {\n        console.log('this.url: ', this.url);\n\n        if (this.url !== null) {\n          this.setState({\n            visibleDownloadZipDlg: true\n          });\n        } else {\n          this.props.setFsZippedFile(this.file);\n        }\n      });\n    };\n\n    this.showAbout = () => {\n      this.setState({\n        visibleAbout: !this.state.visibleAbout\n      });\n    };\n\n    this.showSettings = () => {\n      this.setState({\n        visibleMainMenu: false,\n        visibleSettings: true,\n        visibleToolbar: false,\n        position: 'right'\n      });\n    };\n\n    this.hideSettings = () => {\n      this.setState({\n        visibleMainMenu: true,\n        visibleSettings: false,\n        visibleToolbar: true,\n        visibleFileManager: false,\n        visibleDicomdir: false\n      });\n    };\n\n    this.handleVisibilitySettings = visibleSettings => {\n      this.setState({\n        visibleSettings\n      });\n    };\n\n    this.hideDownloadZipDlg = () => {\n      this.setState({\n        visibleDownloadZipDlg: false\n      });\n    };\n\n    this.hideOpenMultipleFilesDlg = () => {\n      this.setState({\n        visibleOpenMultipleFilesDlg: false\n      });\n      this.openMultipleFilesCompleted();\n    };\n\n    this.openMultipleFilesCompleted = () => {\n      if (this.props.files !== null) {\n        this.changeLayout(1, 1);\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', 0);\n        const sliceMax = this.props.files.length;\n        this.setState({\n          sliceMax: sliceMax\n        }, () => {\n          this.mprPlanePosition();\n          if (this.mprPlane === 'sagittal') this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: true,\n            visibleMprAxial: false,\n            visibleMprCoronal: false\n          });else if (this.mprPlane === 'coronal') this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: false,\n            visibleMprCoronal: true\n          });else this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: true,\n            visibleMprCoronal: false\n          });\n        });\n      }\n    };\n\n    this.showOpenUrl = () => {\n      this.setState({\n        visibleOpenUrl: true\n      });\n    };\n\n    this.hideOpenUrl = openDlg => {\n      this.setState({\n        visibleOpenUrl: false\n      }, () => {\n        if (openDlg) {\n          this.hideMainMenu();\n          this.file = null;\n          this.url = this.openUrlField.value; //console.log('this.url :', this.url)\n          //const ext = getFileExtReal(this.url)\n          //console.log('ext :', ext)\n\n          if (getFileExtReal(this.url) === 'zip') {\n            this.setState({\n              visibleZippedFileDlg: true\n            });\n          } else {\n            return this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openurl', this.openUrlField.value);\n          }\n        }\n      });\n    };\n\n    this.downloadOpenUrl = () => {\n      this.setState({\n        visibleOpenUrl: false,\n        visibleToolbar: true\n      });\n    };\n\n    this.resetImage = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('reset');\n    };\n\n    this.saveShot = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('saveas');\n    };\n\n    this.cinePlayer = () => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('cine');\n    };\n\n    this.clear = () => {\n      this.setState({\n        openImageEdit: false,\n        openTools: false,\n        openMpr: false,\n        visibleToolbox: false,\n        visibleMeasure: false,\n        visibleHeader: false,\n        visibleDicomdir: false\n      });\n      this.changeLayout(1, 1);\n      this.props.setFilesStore(null);\n      this.props.setDicomdirStore(null);\n      this.props.clearingStore();\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n    };\n\n    this.handleLayout = event => {\n      if (this.state.openLayout) {\n        this.setState({\n          anchorElLayout: null,\n          openLayout: false\n        });\n      } else {\n        this.setState({\n          anchorElLayout: event.currentTarget,\n          openLayout: true\n        });\n      }\n    };\n\n    this.closeLayout = () => {\n      this.setState({\n        anchorElLayout: null,\n        openLayout: false\n      });\n    };\n\n    this.changeLayout = (row, col) => {\n      // if reduce the grid clear the unused views\n      if (row < this.props.layout[0] || col < this.props.layout[1]) {\n        this.layoutGridClick(0);\n\n        for (let i = 0; i < 4; i++) {\n          for (let j = 0; j < 4; j++) {\n            if (i + 1 > row || j + 1 > col) {\n              const index = i * 4 + j;\n\n              if (this.dicomViewersRefs[index] !== undefined) {//this.dicomViewersRefs[index].runTool('clear')\n              }\n            }\n          }\n        }\n      }\n\n      this.props.setLayoutStore(row, col);\n    };\n\n    this.toolExecute = tool => {\n      this.hideMainMenu();\n\n      switch (tool) {\n        case 'notool':\n          iconTool = null;\n          this.setState({\n            toolState: null\n          });\n          break;\n\n        case 'Wwwc':\n          iconTool = mdiArrowAll;\n          break;\n\n        case 'Pan':\n          iconTool = mdiCursorPointer;\n          break;\n\n        case 'Zoom':\n          iconTool = mdiMagnify;\n          break;\n\n        case 'Length':\n          iconTool = mdiRuler;\n          break;\n\n        case 'Probe':\n          iconTool = mdiEyedropper;\n          break;\n\n        case 'Angle':\n          iconTool = mdiAngleAcute;\n          break;\n\n        case 'EllipticalRoi':\n          iconTool = mdiEllipse;\n          break;\n\n        case 'RectangleRoi':\n          iconTool = mdiRectangle;\n          break;\n\n        case 'FreehandRoi':\n          iconTool = mdiGesture;\n          break;\n\n        default:\n          break;\n      }\n\n      this.props.toolStore(tool);\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool(tool);\n    };\n\n    this.toolChange = () => {\n      const toolState = 1 - this.state.toolState;\n      this.setState({\n        toolState: toolState\n      }, () => {\n        this.changeTool.changeTool(this.props.tool, toolState);\n      });\n    };\n\n    this.toolRemove = index => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetool', index);\n    };\n\n    this.toggleOpenMenu = event => {\n      if (this.state.openMenu) {\n        this.setState({\n          openMenu: !this.state.openMenu,\n          anchorEl: null\n        });\n      } else {\n        this.setState({\n          openMenu: !this.state.openMenu,\n          anchorEl: event.currentTarget\n        });\n      }\n    };\n\n    this.toggleImageEdit = event => {\n      if (this.state.anchorElImageEdit) {\n        this.setState({\n          openImageEdit: !this.state.openImageEdit,\n          anchorElImageEdit: null\n        });\n      } else {\n        this.setState({\n          openImageEdit: !this.state.openImageEdit,\n          anchorElImageEdit: event.currentTarget\n        });\n      }\n    };\n\n    this.toggleTools = () => {\n      this.setState({\n        openTools: !this.state.openTools\n      });\n    };\n\n    this.toggleMpr = event => {\n      if (this.state.openMpr) {\n        this.setState({\n          openMpr: !this.state.openMpr,\n          anchorElMpr: null\n        });\n      } else {\n        this.setState({\n          openMpr: !this.state.openMpr,\n          anchorElMpr: event.currentTarget\n        });\n      }\n    };\n\n    this.layoutGridClick = index => {\n      if (isMobile && index === this.props.activeDcmIndex) return;\n      this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n      this.props.setActiveDcmIndex(index);\n\n      if (this.state.visibleMprOrthogonal) {\n        if (index === 0) {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[0]\n          });\n        } else if (index === 1) {\n          const sliceMax = this.props.files[0].image.columns;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[1]\n          });\n        } else if (index === 2) {\n          const sliceMax = this.props.files[0].image.rows;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[2]\n          });\n        }\n      }\n\n      const dcmViewer = this.getDcmViewerRef(index); //console.log('dcmViewer:', dcmViewer)\n\n      this.props.setActiveMeasurements(dcmViewer.measurements);\n      this.props.setActiveDcm({\n        image: dcmViewer.image,\n        element: dcmViewer.dicomImage,\n        isDicom: dcmViewer.isDicom\n      });\n    };\n\n    this.layoutGridTouch = index => {\n      if (!isMobile && index === this.props.activeDcmIndex) return;\n      this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n      this.props.setActiveDcmIndex(index);\n\n      if (this.state.visibleMprOrthogonal) {\n        if (index === 0) {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[0]\n          });\n        } else if (index === 1) {\n          const sliceMax = this.props.files[0].image.columns;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[1]\n          });\n        } else if (index === 2) {\n          const sliceMax = this.props.files[0].image.rows;\n          this.setState({\n            sliceMax: sliceMax,\n            sliceIndex: this.mprSliceIndex[2]\n          });\n        }\n      }\n\n      const dcmViewer = this.getDcmViewerRef(index);\n      this.props.setActiveMeasurements(dcmViewer.measurements);\n      this.props.setActiveDcm({\n        image: dcmViewer.image,\n        element: dcmViewer.dicomImage,\n        isDicom: dcmViewer.isDicom\n      });\n    };\n\n    this.buildLayoutGrid = () => {\n      let dicomviewers = [];\n\n      for (let i = 0; i < this.props.layout[0]; i++) {\n        for (let j = 0; j < this.props.layout[1]; j++) {\n          const styleLayoutGrid = {\n            border: this.props.layout[0] === 1 && this.props.layout[1] === 1 ? 'solid 1px #000000' : 'solid 1px #444444'\n          };\n          const index = i * 4 + j;\n          dicomviewers.push(React.createElement(\"div\", {\n            key: index,\n            style: styleLayoutGrid,\n            onClick: () => this.layoutGridClick(index),\n            onTouchStart: () => this.layoutGridTouch(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1077\n            },\n            __self: this\n          }, this.getDcmViewer(index)));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        id: \"dicomviewer-grid\",\n        style: {\n          display: 'grid',\n          gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090\n        },\n        __self: this\n      }, dicomviewers);\n    };\n\n    this.buildLayoutList = totalSeries => {\n      let dicomviewers = [];\n\n      for (let i = 0; i < 8; i++) {\n        const styleLayoutGrid = {\n          border: 'solid 1px #fff',\n          width: '100%',\n          height: '100px',\n          marginTop: '5px'\n        };\n        this.dicomViewersRefs[i].runTool('openimage', 0);\n        dicomviewers.push(React.createElement(ListItem, {\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1119\n          },\n          __self: this\n        }, React.createElement(\"row\", {\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1120\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: i,\n          style: styleLayoutGrid // onClick={() => this.layoutGridClick(i)}\n          // onTouchStart={() => this.layoutGridTouch(i)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1121\n          },\n          __self: this\n        }, this.seriesListDicomViewers[i]), React.createElement(\"p\", {\n          style: {\n            padding: 0,\n            margin: '5px 10px 5px 10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1129\n          },\n          __self: this\n        }, \"series number: \", totalSeries[i] ? totalSeries[i].seriesNumber : \"{ts.seriesNumber}\"))));\n      }\n\n      return React.createElement(\"div\", {\n        id: \"dicomviewer-grid\",\n        style: {\n          display: 'grid',\n          // gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          // gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }, dicomviewers); // let totalSeries = this.state.totalSeries;\n      // let totalSeriesView = [];\n      // if (totalSeries !== null) {\n      //\n      //   totalSeries.forEach((ts, index) => {\n      //\n      //     totalSeriesView.push(\n      //       <ListItem button>\n      //         <row style={{width: '100%'}}>\n      //           {this.buildLayoutList(index)}\n      //           <p\n      //             style={{padding: 0, margin: '5px 10px 5px 10px'}}\n      //           >\n      //             series number: {ts.seriesNumber}\n      //           </p>\n      //         </row>\n      //       </ListItem>\n      //     );\n      //\n      //     if (this.seriesListDicomViewersRefs[index]) {\n      //       this.seriesListDicomViewersRefs[index].runTool('openImage', 0);\n      //       console.log(\"jjjjjjjjjjjjjj   \" + index);\n      //     }\n      //\n      //     console.log(\"@@@@@@   \" + index + \"   \" + this.state.seriesListDicomViewers.length);\n      //\n      //   });\n      //\n      // }\n      //\n      //\n      // return (\n      //   <div\n      //     key={index}\n      //     style={styleLayoutGrid}\n      //     // onClick={() => this.layoutGridClick(index)}\n      //     // onTouchStart={() => this.layoutGridTouch(index)}\n      //   >\n      //     {this.seriesListDicomViewersRefs[index]}\n      //   </div>\n      // )\n    };\n\n    this.getFileName = dcmViewer => {\n      return dcmViewer.filename;\n      /*if (dcmViewer.fsItem !== null) {\n      return dcmViewer.fsItem.name\n      } else if (dcmViewer.localfile !== null) {\n      return getFileNameCorrect(dcmViewer.localfile.name)\n      } else {\n      return dcmViewer.localurl.substring(dcmViewer.localurl.lastIndexOf('/')+1)\n      }*/\n    };\n\n    this.getStringVisiblePlane = () => {\n      if (this.state.visibleMprOrthogonal) return 'orthogonal';else if (this.state.visibleMprSagittal) return 'sagittal';else if (this.state.visibleMprAxial) return 'axial';else if (this.state.visibleMprCoronal) return 'coronal';\n    };\n\n    this.appBarTitle = (classes, isOpen, dcmViewer) => {\n      if (isMobile && !isTablet) {\n        if (isOpen) return null;else return React.createElement(Typography, {\n          variant: \"overline\",\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1225\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1226\n          },\n          __self: this\n        }, \"U\"), \"niversal \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1226\n          },\n          __self: this\n        }, \"D\"), \"icom \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1226\n          },\n          __self: this\n        }, \"V\"), \"iewer\");\n      } else {\n        if (isOpen) {\n          const plane = this.getStringVisiblePlane();\n\n          if (this.state.sliceMax > 1 && this.mprPlane !== plane && this.mprPlane !== '') {\n            return React.createElement(Typography, {\n              variant: \"overline\",\n              className: classes.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1234\n              },\n              __self: this\n            }, 'MPR ' + plane);\n          }\n\n          return React.createElement(Typography, {\n            variant: \"overline\",\n            className: classes.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1240\n            },\n            __self: this\n          }, this.getFileName(dcmViewer));\n        } else if (this.props.dicomdir !== null) {\n          return React.createElement(Typography, {\n            variant: \"overline\",\n            className: classes.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1246\n            },\n            __self: this\n          }, this.props.dicomdir.dicomdir.webkitRelativePath);\n        } else return React.createElement(Typography, {\n          variant: \"overline\",\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1252\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1253\n          },\n          __self: this\n        }, \"U\"), \"niversal \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1253\n          },\n          __self: this\n        }, \"D\"), \"icom \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1253\n          },\n          __self: this\n        }, \"V\"), \"iewer\");\n      }\n    };\n\n    this.getImageOrientationZ = image => {\n      const iop = image.data.string('x00200037').split('\\\\'); // Image Orientation Patient\n\n      let v = new Array(3).fill(0).map(() => new Array(3).fill(0));\n      v[0][0] = parseFloat(iop[0]); // the x direction cosines of the first row X\n\n      v[0][1] = parseFloat(iop[1]); // the y direction cosines of the first row X\n\n      v[0][2] = parseFloat(iop[2]); // the z direction cosines of the first row X\n\n      v[1][0] = parseFloat(iop[3]); // the x direction cosines of the first column Y\n\n      v[1][1] = parseFloat(iop[4]); // the y direction cosines of the first column Y\n\n      v[1][2] = parseFloat(iop[5]); // the z direction cosines of the first column Y\n      //console.log('getImageOrientationZ: ', v[1][2])\n\n      return v[1][2];\n    };\n\n    this.mprBuildVolume = () => {\n      if (this.volume.length > 0) return;\n      this.t0 = performance.now();\n      const files = this.props.files;\n      const xPixelSpacing = getPixelSpacing(files[0].image, 0);\n      const spacingBetweenSlice = getSpacingBetweenSlice(files[0].image);\n      const sliceThickness = getSliceThickness(files[0].image);\n      const length = files[0].image.getPixelData().length;\n      const sliceLocation = getSliceLocation(files[0].image);\n      this.volume = []; // see https://stackoverflow.com/questions/58412358/dicom-multiplanar-image-reconstruction\n\n      this.mprData.zDim = Math.round(files.length * spacingBetweenSlice / xPixelSpacing); //console.log('this.mprData.zDim: ', this.mprData.zDim)\n      //console.log('spacingBetweenSlice: ', spacingBetweenSlice)\n      //console.log('sliceThickness: ', sliceThickness)\n      //console.log('xPixelSpacing: ', xPixelSpacing)\n      //console.log('getSliceLocation: ', sliceLocation)\n      // If spacing between slices is less than slice thickness, the images are not optimal for 3D reconstruction.\n      // Try an alternative algorithm based on slice distance.\n\n      let zDimMethod2 = false;\n\n      if (spacingBetweenSlice < sliceThickness && sliceLocation === undefined) {\n        let max = 0;\n        let min = 0;\n\n        for (let i = 0; i < files.length; i++) {\n          if (files[i].sliceDistance > max) max = files[i].sliceDistance;\n          if (files[i].sliceDistance < min) min = files[i].sliceDistance;\n        }\n\n        this.mprData.zDim = Math.round(Math.abs(max - min) / xPixelSpacing); //console.log('method2, this.mprData.zDim: ', this.mprData.zDim)\n\n        zDimMethod2 = true;\n      }\n\n      if (files.length === this.mprData.zDim) {\n        // slices contiguous\n        for (let i = 0, len = files.length; i < len; i++) {\n          this.volume.push(files[i].image.getPixelData());\n        }\n      } else if (files.length < this.mprData.zDim) {\n        // gap between slices\n        let emptyPlane = new Int16Array(length).fill(0);\n\n        for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n          this.volume.push(emptyPlane);\n        }\n\n        let order = [];\n\n        for (let i = 0; i < files.length; i++) {\n          order.push({\n            iFile: i,\n            instanceNumber: files[i].instanceNumber,\n            sliceDistance: files[i].sliceDistance,\n            sliceLocation: files[i].sliceLocation\n          });\n        }\n\n        if (zDimMethod2) {\n          // eliminate eventually duplicates\n          order = order.reduce((previous, current) => {\n            let object = previous.filter(object => object.sliceDistance === current.sliceDistance);\n\n            if (object.length === 0) {\n              previous.push(current);\n            }\n\n            return previous;\n          }, []);\n          order.sort((l, r) => {\n            // return r.sliceDistance - l.sliceDistance\n            return l.instanceNumber - r.instanceNumber;\n          }); //console.log('order: ', order)\n        } else {\n          // const reorder = files[0].sliceDistance < files[1].sliceDistance\n          const reorder = files[0].sliceLocation < files[1].sliceLocation;\n\n          if (reorder) {\n            order.sort((l, r) => {\n              // return l.instanceNumber - r.instanceNumber\n              // return r.sliceDistance - l.sliceDistance\n              return r.sliceLocation - l.sliceLocation;\n            }); //console.log('reorder: ')\n          }\n        }\n        /*if (this.getImageOrientationZ(files[0].image) < 0) {\n        order.sort((l, r) => {\n        return r.instanceNumber - l.instanceNumber\n        // return r.sliceDistance - l.sliceDistance\n        })\n        console.log('reorder 2: ')\n        }*/\n\n\n        let intervals = [0];\n        this.volume[0] = files[order[0].iFile].image.getPixelData();\n        this.volume[this.mprData.zDim - 1] = files[order[order.length - 1].iFile].image.getPixelData();\n        const step = (this.mprData.zDim - 2) / (order.length - 2);\n        let i = 0;\n\n        for (let k = 1; k <= order.length - 2; k++) {\n          i = Math.ceil(i + step); //console.log(`i: ${i},  k: ${k},  order[k].iFile: ${order[k].iFile}`)\n\n          this.volume[i] = files[order[k].iFile].image.getPixelData(); // order[k-1].iFile\n\n          intervals.push(i);\n        }\n\n        intervals.push(this.mprData.zDim - 1);\n        console.log('intervals: ', intervals); //console.log('this.volume: ', this.volume)\n\n        const interpolationMethod = getSettingsMprInterpolation();\n\n        if (interpolationMethod === 'no') {\n          // build missing planes without interpolation, simple duplicate\n          for (let i = 0; i < intervals.length - 1; i++) {\n            //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n            for (let j = intervals[i] + 1; j <= intervals[i + 1] - 1; j++) {\n              //console.log(`j: ${j}`)\n              this.volume[j] = this.volume[intervals[i + 1]];\n            }\n          }\n        } else if (interpolationMethod === 'weightedlinear') {\n          // build the interpolate planes between original planes\n          for (let i = 0; i < intervals.length - 1; i++) {\n            //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n            const step = intervals[i + 1] - intervals[i];\n\n            for (let j = intervals[i] + 1; j < intervals[i + 1]; j++) {\n              //console.log(`i: ${i}, intervals[i]: ${intervals[i]}, j: ${j}`)\n              let p = new Int16Array(length);\n              const w = (j - intervals[i]) / step;\n\n              for (let k = 0; k < length - 1; k++) {\n                // simple linear interpolation\n                // const p0 = this.volume[intervals[i]][k]\n                // const p1 = this.volume[intervals[i+1]][k]\n                // p[k] = (p0+p1)/2\n                // weighted linear interpolation\n                const p0 = this.volume[intervals[i]][k] * (1 - w);\n                const p1 = this.volume[intervals[i + 1]][k] * w;\n                p[k] = p0 + p1;\n\n                if (p0 === undefined || p1 === undefined) {\n                  console.log('undefined');\n                } // weighted bilinear interpolation\n\n                /*if (k-1 > 0 && k+1 < length) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.5 + this.volume[intervals[i]][k-1] * (1-w) * 0.25 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n                } else if (k-1 < 0) {\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k+1] * w * 0.25\n                p[k] = p0+p1\n                } else { // k+1 > length\n                const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k-1] * (1-w) * 0.25\n                const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25\n                p[k] = p0+p1\n                }*/\n\n              }\n\n              this.volume[j] = p;\n            }\n          }\n        }\n\n        this.t1 = performance.now();\n        console.log(`performance volume building: ${this.t1 - this.t0} milliseconds`);\n      } else {\n        // overlapping slices\n        this.mprData.zStep = files.length / this.mprData.zDim; //console.log('this.mprData.zStep: ', this.mprData.zStep)\n\n        for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n          const k = Math.round(i * this.mprData.zStep);\n          this.volume.push(files[k].image.getPixelData());\n        }\n      }\n\n      if (this.state.visibleMprOrthogonal) {\n        this.changeToOrthogonalView();\n      } else if (this.state.visibleMprSagittal) {\n        this.changeToSagittalView();\n      } else if (this.state.visibleMprCoronal) {\n        this.changeToCoronalView();\n      } else {\n        // axial\n        this.changeToAxialView();\n      }\n    };\n\n    this.changeToOrthogonalView = () => {\n      this.changeLayout(1, 3);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        const index = Math.round(this.props.files.length / 2);\n        if (this.dicomViewersRefs[0].volume === null) this.dicomViewersRefs[0].volume = this.volume;\n        this.mprSliceIndex[0] = index;\n        this.dicomViewersRefs[0].runTool('openimage', index);\n        if (this.dicomViewersRefs[1].volume === null) this.dicomViewersRefs[1].volume = this.volume;\n        const xzIndex = Math.round(this.props.files[0].image.columns / 2);\n        this.mprSliceIndex[1] = xzIndex;\n        this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, xzIndex, this.mprData);\n        if (this.dicomViewersRefs[2].volume === null) this.dicomViewersRefs[2].volume = this.volume;\n        const yzIndex = Math.round(this.props.files[0].image.rows / 2);\n        this.mprSliceIndex[2] = yzIndex;\n        this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, yzIndex, this.mprData);\n      });\n    };\n\n    this.changeToSagittalView = () => {\n      this.changeLayout(1, 1);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null) this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume; //console.log('mprSagittal, this.mprPlanePosition(): ', plane)\n\n        if (plane === 'sagittal') {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n        } else if (plane === 'axial') {\n          const sliceMax = this.props.files[0].image.columns;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        } else {\n          const sliceMax = this.props.files[0].image.rows;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        }\n      });\n    };\n\n    this.changeToCoronalView = () => {\n      this.changeLayout(1, 1);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null) this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume; //console.log('mprCoronal, this.mprPlanePosition(): ', plane)\n\n        if (plane === 'coronal') {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n        } else if (plane === 'axial') {\n          const sliceMax = this.props.files[0].image.columns;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        } else {\n          // plane is sagittal\n          const sliceMax = this.props.files[0].image.rows;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        }\n      });\n    };\n\n    this.changeToAxialView = () => {\n      this.changeLayout(1, 1);\n      this.setState({\n        visibleVolumeBuilding: false\n      }, () => {\n        const plane = this.mprPlanePosition();\n        if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null) this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume; //console.log('mprAxial, this.mprPlanePosition(): ', plane)\n\n        if (plane === 'axial') {\n          const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n        } else if (plane === 'sagittal') {\n          const sliceMax = this.props.files[0].image.columns;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        } else {\n          const sliceMax = this.props.files[0].image.rows;\n          const index = Math.round(sliceMax / 2);\n          this.setState({\n            sliceIndex: index,\n            sliceMax: sliceMax\n          });\n          this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n        }\n      });\n    };\n\n    this.mprPlanePosition = () => {\n      if (this.mprPlane === '') {\n        this.mprPlane = this.dicomViewersRefs[this.props.activeDcmIndex].mprPlanePosition();\n      }\n\n      return this.mprPlane;\n    };\n\n    this.mprOrthogonal = () => {\n      const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n\n      if (!visibleMprOrthogonal) {\n        const index = Math.round(this.props.files.length / 2); //console.log('mprOrthogonal, index: ', index)\n\n        this.setState({\n          sliceIndex: index\n        });\n        this.setState({\n          visibleMprOrthogonal: true,\n          visibleMprCoronal: false,\n          visibleMprSagittal: false,\n          visibleMprAxial: false\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToOrthogonalView();\n          }\n        });\n      }\n    };\n\n    this.mprSagittal = () => {\n      const visibleMprSagittal = this.state.visibleMprSagittal;\n\n      if (!visibleMprSagittal) {\n        this.setState({\n          visibleMprOrthogonal: false,\n          visibleMprSagittal: true,\n          visibleMprCoronal: false,\n          visibleMprAxial: false\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToSagittalView();\n          }\n        });\n      }\n    };\n\n    this.mprCoronal = () => {\n      const visibleMprCoronal = this.state.visibleMprCoronal;\n\n      if (!visibleMprCoronal) {\n        this.setState({\n          visibleMprOrthogonal: false,\n          visibleMprSagittal: false,\n          visibleMprCoronal: true,\n          visibleMprAxial: false\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToCoronalView();\n          }\n        });\n      }\n    };\n\n    this.mprAxial = () => {\n      const visibleMprAxial = this.state.visibleMprAxial;\n\n      if (!visibleMprAxial) {\n        this.setState({\n          visibleMprOrthogonal: false,\n          visibleMprSagittal: false,\n          visibleMprCoronal: false,\n          visibleMprAxial: true\n        }, () => {\n          if (this.volume.length === 0) {\n            this.setState({\n              visibleVolumeBuilding: true\n            }, () => {\n              setTimeout(() => {\n                this.mprBuildVolume();\n              }, 100);\n            });\n          } else {\n            this.changeToAxialView();\n          }\n        });\n      }\n    };\n\n    this.listOpenFilesFirstFrame = () => {\n      const index = 0; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesPreviousFrame = () => {\n      let index = this.state.sliceIndex;\n      index = index === 0 ? this.state.sliceMax - 1 : index - 1; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesNextFrame = () => {\n      let index = this.state.sliceIndex;\n      index = index === this.state.sliceMax - 1 ? 0 : index + 1; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesLastFrame = () => {\n      const index = this.state.sliceMax - 1; //this.props.setLocalFileStore(this.files[index])\n\n      this.setState({\n        sliceIndex: index\n      }, () => {\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.listOpenFilesScrolling = () => {\n      const scrolling = this.state.listOpenFilesScrolling;\n      this.setState({\n        listOpenFilesScrolling: !scrolling\n      }, () => {\n        if (scrolling) {\n          clearInterval(this.timerScrolling);\n        } else {\n          this.timerScrolling = setInterval(() => {\n            this.listOpenFilesNextFrame();\n          }, 500);\n        }\n      });\n    };\n\n    this.handleSliceChange = (event, value) => {\n      console.log('slice value: ', Math.floor(value));\n      this.setState({\n        sliceIndex: Math.floor(value)\n      }, () => {\n        let index = this.state.sliceIndex;\n        this.props.setLocalFileStore(this.files[index]);\n        this.handleOpenImage(index);\n      });\n    };\n\n    this.dicomImageRef = el => {\n      this.dicomImage = el;\n    };\n\n    this.files = [];\n    this.file = null;\n    this.url = null;\n    this.dicomImage = null;\n    this.imageId = null;\n    this.image = null;\n    this.mprData = {};\n    this.mprPlane = '';\n    this.volume = [];\n    this.mprSliceIndex = [0, 0, 0];\n    this.fileOpen = React.createRef();\n    this.showFileOpen = this.showFileOpen.bind(this);\n    this.openDicomdir = React.createRef();\n    this.showOpenDicomdir = this.showOpenDicomdir.bind(this);\n    this.openFolder = React.createRef();\n    this.showOpenFolder = this.showOpenFolder.bind(this);\n    this.openUrlField = React.createRef();\n    this.dicomViewersRefs = [];\n    this.dicomViewers = [];\n\n    for (let i = 0; i < 16; i++) {\n      this.dicomViewers.push(this.setDcmViewer(i, 'grid'));\n    }\n\n    this.seriesListDicomViewersRefs = [];\n    this.seriesListDicomViewers = [];\n  }\n\n  showFileOpen() {\n    this.props.isOpenStore(false);\n    this.fileOpen.current.click();\n  }\n\n  showOpenFolder() {\n    this.openFolder.current.click();\n  }\n\n  showOpenDicomdir() {\n    this.openDicomdir.current.click();\n  }\n\n  handleOpenFolder(files) {\n    console.log('handleOpenFolder: ', files);\n\n    for (let i = 0; i < files.length; i++) {\n      this.files.push(files[i]);\n    }\n\n    let seriesNumberList = [];\n    let _totalSeries = [];\n    this.seriesListDicomViewers = [];\n    let seriesCounter = 0;\n\n    for (let i = 0; i < files.length; i++) {\n      if (files[i] !== undefined) {\n        let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n        cornerstone.loadAndCacheImage(imageId).then(image => {\n          let fileImageSeriesNumber = image.data.string('x00200011'); // if found new series do:\n\n          if (!seriesNumberList.includes(fileImageSeriesNumber)) {\n            seriesNumberList.push(fileImageSeriesNumber);\n\n            _totalSeries.push({\n              seriesNumber: fileImageSeriesNumber,\n              images: [image],\n              files: [files[i]]\n            });\n\n            this.seriesListDicomViewers.push(this.setDcmViewer(seriesCounter, 'list'));\n            let image_ = files[i].image;\n            let element = document.getElementById('elem');\n            cornerstone.enable(element);\n            cornerstone.displayImage(element, image_);\n            seriesCounter = seriesCounter + 1;\n          } else {\n            _totalSeries.forEach(ts => {\n              if (ts.seriesNumber === fileImageSeriesNumber) {\n                ts.images.push(image);\n                ts.files.push(files[i]);\n              }\n            });\n          }\n        });\n      }\n    } // console.log(\"LENGTH \" + _totalSeries.length);\n    // for (let i = 0; i < files.length; i++) {\n    //   if (files[i] !== undefined) {\n    //     let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n    //     cornerstone.loadAndCacheImage(imageId).then(image => {\n    //       let fileImageSeriesNumber = image.data.string('x00200011');\n    //\n    //       if(seriesNumber.includes(fileImageSeriesNumber)){\n    //         _totalSeries.forEach(series => {\n    //           if(series[0].data.string('x00200011') === fileImageSeriesNumber){\n    //             series.push(image);\n    //           }\n    //         });\n    //       }else{\n    //         seriesNumber.push(image.data.string('x00200011'));\n    //\n    //         let newSeries = [];\n    //         newSeries.push(image);\n    //         _totalSeries.push(newSeries);\n    //       }\n    //\n    //     });\n    //   }\n    // }\n\n\n    this.changeLayout(1, 1);\n    this.mprPlane = '';\n    this.volume = [];\n\n    for (let i = 0; i < 16; i++) if (this.dicomViewersRefs[i] !== undefined) {// this.dicomViewersRefs[i].runTool('clear')\n    }\n\n    this.setState({\n      totalSeries: _totalSeries,\n      seriesListDicomViewers: this.seriesListDicomViewers,\n      sliceIndex: 0,\n      sliceMax: 1,\n      visibleMprOrthogonal: false,\n      visibleMprCoronal: false,\n      visibleMprSagittal: false,\n      visibleMprAxial: false\n    }, () => {\n      this.setState({\n        visibleOpenMultipleFilesDlg: true\n      });\n    });\n  }\n\n  handleOpenDicomdir(files) {\n    this.setState({\n      visibleDicomdir: false\n    }, () => {\n      let dicomdir = null;\n      let datafiles = [];\n\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].webkitRelativePath.includes('DICOMDIR')) {\n          dicomdir = files[i];\n        } else {\n          datafiles.push(files[i]);\n        }\n      }\n\n      if (dicomdir !== null) {\n        this.props.setDicomdirStore({\n          origin: 'local',\n          dicomdir: dicomdir,\n          files: datafiles\n        });\n        this.toggleDicomdir();\n      }\n    });\n  }\n\n  componentDidMount() {\n    // Need to set the renderNode since the drawer uses an overlay\n    //this.dialog = document.getElementById('drawer-routing-example-dialog')\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    //console.log('App render: ')\n    const classes = this.props.classes;\n    const primaryClass = {\n      primary: classes.listItemText\n    };\n    const iconSize = '1.2rem';\n    const isOpen = this.props.isOpen[this.props.activeDcmIndex];\n    const isDicomdir = this.props.dicomdir !== null;\n    const isMultipleFiles = this.props.files === null ? false : this.props.files.length > 1;\n    const openMenu = this.state.openMenu;\n    const openImageEdit = this.state.openImageEdit; // const openTools = this.state.openTools;\n\n    const openMpr = this.state.openMpr && isMultipleFiles && this.mprPlane !== ''; // const visibleMainMenu = this.state.visibleMainMenu;\n\n    const visibleHeader = this.state.visibleHeader;\n    const visibleSettings = this.state.visibleSettings;\n    const visibleAbout = this.state.visibleAbout;\n    const visibleMeasure = this.state.visibleMeasure;\n    const visibleToolbox = this.state.visibleToolbox;\n    const visibleDicomdir = this.state.visibleDicomdir;\n    const visibleFileManager = this.state.visibleFileManager;\n    const visibleClearMeasureDlg = this.state.visibleClearMeasureDlg;\n    const visibleZippedFileDlg = this.state.visibleZippedFileDlg;\n    const visibleDownloadZipDlg = this.state.visibleDownloadZipDlg;\n    const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg; // const visibleLayout = Boolean(this.state.anchorElLayout);\n\n    const visibleVolumeBuilding = this.state.visibleVolumeBuilding;\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    const visibleMprAxial = this.state.visibleMprAxial;\n    let iconToolColor = this.state.toolState === 1 ? '#FFFFFF' : '#999999';\n    const dcmViewer = this.getActiveDcmViewer(); // const sliceMax = this.state.sliceMax;\n\n    const anchorEl = this.state.anchorEl;\n    const anchorElMpr = this.state.anchorElMpr;\n    const anchorElImageEdit = this.state.anchorElImageEdit;\n    const visibleSeries = this.state.visibleSeries;\n    const anchorElLayout = this.state.anchorElLayout; // const openLayout = this.state.openLayout;\n\n    let totalSeries = this.state.totalSeries;\n    let totalSeriesView = [];\n\n    if (totalSeries !== null) {\n      totalSeries.forEach((ts, index) => {\n        totalSeriesView.push(React.createElement(ListItem, {\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1809\n          },\n          __self: this\n        }, React.createElement(\"row\", {\n          style: {\n            width: '100%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1810\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            border: 'solid 1px #fff',\n            width: '100%',\n            height: '100px',\n            marginTop: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1811\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: 'elem',\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1817\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          style: {\n            padding: 0,\n            margin: '5px 10px 5px 10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1825\n          },\n          __self: this\n        }, \"series number: \", ts.seriesNumber))));\n      });\n    } //console.log('this.dicomViewersRefs: ', this.dicomViewersRefs)\n    //console.log('isMultipleFiles: ', isMultipleFiles)\n    //console.log('this.mprPlane: ', this.mprPlane)\n\n\n    const handleClick = event => {\n      this.setState({\n        anchorElLayout: event.currentTarget\n      });\n    };\n\n    const handleClose = () => {\n      this.setState({\n        anchorElLayout: null\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1850\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      className: classes.appBar,\n      position: \"static\",\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1851\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      variant: \"dense\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1852\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"start\",\n      className: classes.menuButton,\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: this.toggleSeriesMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1853\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiViewList,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1859\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      orientation: \"vertical\",\n      style: {\n        display: 'list-item',\n        backgroundColor: '#fff'\n      },\n      flexItem: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1862\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \"File Manager\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1868\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toggleFileManager(),\n      style: {\n        marginLeft: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1869\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileCabinet,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1874\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Open\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1877\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: event => this.toggleOpenMenu(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1878\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderMultiple,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1879\n      },\n      __self: this\n    }), openMenu ? React.createElement(ExpandLess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1880\n      },\n      __self: this\n    }) : React.createElement(ExpandMore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1880\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: openMenu,\n      anchorEl: anchorEl,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      style: {\n        backgroundColor: '#6c5c89'\n      },\n      placement: 'center-top',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1893\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        backgroundColor: '#6c5c89',\n        borderRadius: '0 0 4px 4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1897\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: event => this.toggleOpenMenu(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1900\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      autoFocusItem: openMenu,\n      style: {\n        padding: '0'\n      },\n      id: \"menu-list-grow\",\n      onKeyDown: event => this.toggleOpenMenu(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1901\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showFileOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1908\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1909\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolder,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1909\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1913\n        },\n        __self: this\n      }, \"File\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1910\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showOpenUrl(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1921\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1922\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiWeb,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1922\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1926\n        },\n        __self: this\n      }, \"URL\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1923\n      },\n      __self: this\n    })), isInputDirSupported() && !isMobile ? React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showOpenFolder(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1932\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1933\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderOpen,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1933\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1937\n        },\n        __self: this\n      }, \"Folder\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1934\n      },\n      __self: this\n    })) : null, isInputDirSupported() && !isMobile ? React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.showOpenDicomdir(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1947\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1948\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderOpen,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1948\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1952\n        },\n        __self: this\n      }, \"DICOMDIR\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1949\n      },\n      __self: this\n    })) : null))))), React.createElement(Tooltip, {\n      title: \"Clear All\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1969\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1970\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiDelete,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1971\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Layout\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1974\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1975\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiViewGridPlusOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1976\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: Boolean(anchorElLayout),\n      anchorEl: anchorElLayout,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      style: {\n        backgroundColor: '#6c5c89',\n        marginTop: '3px'\n      },\n      placement: 'center-top',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1979\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1989\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        backgroundColor: '#6c5c89',\n        borderRadius: '0 0 4px 4px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1993\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1999\n      },\n      __self: this\n    }, React.createElement(LayoutTool, {\n      row: this.props.layout[0] - 1,\n      col: this.props.layout[1] - 1,\n      onChange: this.changeLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2000\n      },\n      __self: this\n    }))))), React.createElement(Tooltip, {\n      title: \"Settings\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2012\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.showSettings(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2013\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiSettings,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2014\n      },\n      __self: this\n    }))), React.createElement(Typography, {\n      variant: \"overline\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2018\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2019\n      },\n      __self: this\n    }, \"D\"), \"icom \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2019\n      },\n      __self: this\n    }, \"V\"), \"iewer\"), !isOpen && !isDicomdir ? React.createElement(IconButton, {\n      onClick: this.showAbout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2027\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiInformationOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2028\n      },\n      __self: this\n    })) : null, iconTool !== null && this.props.tool !== null && isOpen ? React.createElement(IconButton, {\n      onClick: this.toolChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2033\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: iconTool,\n      size: iconSize,\n      color: iconToolColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2034\n      },\n      __self: this\n    })) : null, isOpen && dcmViewer.numberOfFrames > 1 && isOpen ? React.createElement(IconButton, {\n      onClick: this.cinePlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2039\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiVideo,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2040\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      onClick: this.resetImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2045\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiRefresh,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2046\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.saveShot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2051\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCamera,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2052\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleToolbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2057\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiToolbox,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2058\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2063\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileCad,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2064\n      },\n      __self: this\n    })) : null, isOpen && dcmViewer.isDicom ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2069\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileDocument,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2070\n      },\n      __self: this\n    })) : null, isDicomdir ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleDicomdir,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2075\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFolderOpen,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2076\n      },\n      __self: this\n    })) : null, isOpen ? React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.toggleFileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2081\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiFileCabinet,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2082\n      },\n      __self: this\n    })) : null)), React.createElement(Card, {\n      className: classes.toolbarCard,\n      position: \"fixed\",\n      elevation: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2089\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      variant: \"dense\",\n      style: {\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2090\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Histogram\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2092\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toggleToolbox(),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2093\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiChartHistogram,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2094\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"MPR\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2098\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: event => this.toggleMpr(event),\n      disabled: !isOpen || !isMultipleFiles || this.mprPlane === '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiAxisArrow,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2101\n      },\n      __self: this\n    }), openMpr ? React.createElement(ExpandMore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102\n      },\n      __self: this\n    }) : React.createElement(ExpandLess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: openMpr,\n      anchorEl: anchorElMpr,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2106\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2111\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2115\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: () => this.toggleMpr(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2116\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      dense: true,\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2117\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprOrthogonal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2118\n      },\n      __self: this\n    }, visibleMprOrthogonal ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2120\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2121\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprOrthogonal ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2129\n        },\n        __self: this\n      }, \"Orthogonal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2125\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprCoronal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2134\n      },\n      __self: this\n    }, visibleMprCoronal ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2136\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2136\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprCoronal ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2142\n        },\n        __self: this\n      }, \"Coronal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2138\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprSagittal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2147\n      },\n      __self: this\n    }, visibleMprSagittal ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2149\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2149\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprSagittal ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2155\n        },\n        __self: this\n      }, \"Sagittal\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2151\n      },\n      __self: this\n    })), React.createElement(MenuItem, {\n      button: true,\n      style: {\n        paddingLeft: 40\n      },\n      onClick: () => this.mprAxial(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2159\n      },\n      __self: this\n    }, visibleMprAxial ? React.createElement(ListItemIcon, {\n      style: {\n        marginLeft: '-10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2161\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheck,\n      size: '1.0rem',\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2161\n      },\n      __self: this\n    })) : null, React.createElement(ListItemText, {\n      style: visibleMprAxial ? {\n        marginLeft: '-7px'\n      } : {\n        marginLeft: '40px'\n      },\n      classes: primaryClass,\n      primary: React.createElement(Typography, {\n        type: \"body1\",\n        style: {\n          fontSize: '0.80em',\n          marginLeft: '-23px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2167\n        },\n        __self: this\n      }, \"Axial\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2163\n      },\n      __self: this\n    }))))))), React.createElement(Tooltip, {\n      title: \"Edit\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2179\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: event => this.toggleImageEdit(event) // disabled={!isOpen}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2180\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiImageEdit,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2185\n      },\n      __self: this\n    }), openImageEdit ? React.createElement(ExpandMore, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2186\n      },\n      __self: this\n    }) : React.createElement(ExpandLess, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2186\n      },\n      __self: this\n    }))), React.createElement(Popper, {\n      open: Boolean(anchorElImageEdit),\n      anchorEl: anchorElImageEdit,\n      role: undefined,\n      transition: true,\n      style: {\n        backgroundColor: '#6C5C89'\n      },\n      placement: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2207\n      },\n      __self: this\n    }, ({\n      TransitionProps,\n      placement\n    }) => React.createElement(Grow, Object.assign({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2216\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      style: {\n        backgroundColor: '#6C5C89'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2220\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: event => this.toggleImageEdit(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2221\n      },\n      __self: this\n    }, React.createElement(MenuList, {\n      dense: true,\n      component: \"div\",\n      style: {\n        padding: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2222\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      button: true,\n      onClick: () => this.toolExecute('Invert'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2223\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2224\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiInvertColors,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2224\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: \"Invert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2225\n      },\n      __self: this\n    }))))))), React.createElement(Divider, {\n      orientation: \"vertical\",\n      style: {\n        display: 'list-item',\n        backgroundColor: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2234\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \"No tool\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2236\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('notool'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2237\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCursorDefault,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2239\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"WW/WC\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2242\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Wwwc'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2243\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiArrowAll,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2245\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Pan\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2248\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Pan'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2249\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCursorPointer,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2250\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Zoom\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2253\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Zoom'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2254\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiMagnify,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2256\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Magnify\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2259\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Magnify'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2260\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiCheckboxIntermediate,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2262\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Length\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2266\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Length'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2267\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiRuler,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2269\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Probe\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2272\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Probe'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2273\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiEyedropper,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2275\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Angle\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2278\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('Angle'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2279\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiAngleAcute,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2281\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Elliptical Roi\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2284\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('EllipticalRoi'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2285\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiEllipse,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2287\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Rectangle Roi\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2290\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('RectangleRoi'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2291\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiRectangle,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2293\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \"Freehand Roi\",\n      placement: \"top\",\n      arrow: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2296\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      button: true,\n      onClick: () => this.toolExecute('FreehandRoi'),\n      disabled: !isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2297\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiGesture,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2299\n      },\n      __self: this\n    }))))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      open: visibleSeries,\n      style: {\n        position: 'relative',\n        zIndex: 1\n      },\n      onClose: this.toggleSeriesMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      style: {\n        marginTop: '48px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2312\n      },\n      __self: this\n    }, React.createElement(List, {\n      dense: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2313\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      onClick: () => this.showAppBar(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2314\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2315\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiArrowLeftCircle,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2315\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: primaryClass,\n      primary: \"Hide Series\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2316\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2318\n      },\n      __self: this\n    }), totalSeries ? totalSeriesView : React.createElement(\"p\", {\n      style: {\n        padding: 0,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2321\n      },\n      __self: this\n    }, \"nothing\")))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: visibleHeader,\n      onClose: this.toggleHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2583\n      },\n      __self: this\n    }, visibleHeader ? React.createElement(DicomHeader, {\n      dcmViewer: dcmViewer,\n      classes: classes,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2589\n      },\n      __self: this\n    }) : null), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: visibleMeasure,\n      onClose: this.toggleMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2592\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: '48px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2598\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      variant: \"dense\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2599\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2600\n      },\n      __self: this\n    }, \"Measurements\\xA0\\xA0\"), React.createElement(\"div\", {\n      className: classes.grow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2603\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.saveMeasure,\n      edge: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2604\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiContentSaveOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2605\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: this.clearMeasure,\n      edge: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2607\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      path: mdiTrashCanOutline,\n      size: iconSize,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2608\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2611\n      },\n      __self: this\n    }, isOpen ? React.createElement(Measurements, {\n      dcmViewer: dcmViewer,\n      toolRemove: this.toolRemove,\n      classes: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2612\n      },\n      __self: this\n    }) : null))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: \"right\",\n      open: visibleToolbox,\n      onClose: this.toggleToolbox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2617\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginTop: '48px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2623\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2624\n      },\n      __self: this\n    }, isOpen ? React.createElement(Histogram, {\n      key: this.getFileName(dcmViewer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2625\n      },\n      __self: this\n    }) : null))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: getSettingsDicomdirView(),\n      open: visibleDicomdir,\n      onClose: this.toggleDicomdir,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2630\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2636\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2637\n      },\n      __self: this\n    }, visibleDicomdir ? React.createElement(Dicomdir, {\n      onOpenFile: this.handleOpenFileDicomdir,\n      onOpenFs: this.handleOpenSandboxFs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2639\n      },\n      __self: this\n    }) : null))), React.createElement(Drawer, {\n      variant: \"persistent\",\n      anchor: getSettingsFsView(),\n      open: visibleFileManager,\n      onClose: this.toggleFileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2644\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2650\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2651\n      },\n      __self: this\n    }, visibleFileManager ? React.createElement(FsUI, {\n      onOpen: this.handleOpenSandboxFs,\n      onOpenImage: this.handleOpenImage,\n      onOpenMultipleFilesCompleted: this.openMultipleFilesCompleted,\n      onOpenDicomdir: this.handleOpenFsDicomdir,\n      color: iconColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2653\n      },\n      __self: this\n    }) : null))), visibleSettings ? React.createElement(Settings, {\n      onClose: this.hideSettings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2665\n      },\n      __self: this\n    }) : null, visibleAbout ? React.createElement(AboutDlg, {\n      onClose: this.showAbout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2667\n      },\n      __self: this\n    }) : null, visibleDownloadZipDlg ? React.createElement(DownloadZipDlg, {\n      onClose: this.hideDownloadZipDlg,\n      url: this.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2669\n      },\n      __self: this\n    }) : null, visibleOpenMultipleFilesDlg ? React.createElement(OpenMultipleFilesDlg, {\n      onClose: this.hideOpenMultipleFilesDlg,\n      files: this.files,\n      origin: 'local',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2672\n      },\n      __self: this\n    }) : null, React.createElement(Dialog, {\n      open: visibleClearMeasureDlg,\n      onClose: this.hideClearMeasureDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2674\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2678\n      },\n      __self: this\n    }, \"Are you sure to remove all the measurements?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2679\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hideClearMeasureDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2680\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.confirmClearMeasureDlg,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2683\n      },\n      __self: this\n    }, \"Ok\"))), React.createElement(Dialog, {\n      open: visibleZippedFileDlg,\n      onClose: this.hideZippedFileDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2689\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2693\n      },\n      __self: this\n    }, \"This is a zipped file, would you import into sandbox file system?\"), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2694\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.hideZippedFileDlg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2695\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.confirmZippedFileDlg,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2698\n      },\n      __self: this\n    }, \"Ok\"))), React.createElement(Dialog, {\n      open: this.state.visibleOpenUrl,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2704\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2708\n      },\n      __self: this\n    }, \"Open URL\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2709\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2710\n      },\n      __self: this\n    }, \"Insert an URL to download a DICOM or image file:\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"id-open-url\",\n      inputRef: input => this.openUrlField = input,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2713\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2721\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.hideOpenUrl(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2722\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: () => this.hideOpenUrl(true),\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2725\n      },\n      __self: this\n    }, \"Ok\"))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      open: visibleVolumeBuilding,\n      autoHideDuration: 6000,\n      message: \"Volume building, wait please ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2752\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: 'calc(100vh - 48px)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2762\n      },\n      __self: this\n    }, this.buildLayoutGrid()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2766\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file_open\",\n      style: {\n        display: \"none\"\n      },\n      ref: this.fileOpen,\n      onChange: e => this.handleOpenLocalFs(e.target.files),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2767\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2777\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file_dicomdir\",\n      style: {\n        display: \"none\"\n      },\n      ref: this.openDicomdir,\n      onChange: e => this.handleOpenDicomdir(e.target.files),\n      webkitdirectory: \"\",\n      mozdirectory: \"\",\n      directory: \"\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2778\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2788\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file_folder\",\n      style: {\n        display: \"none\"\n      },\n      ref: this.openFolder,\n      onChange: e => this.handleOpenFolder(e.target.files),\n      webkitdirectory: \"\",\n      mozdirectory: \"\",\n      directory: \"\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2789\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    localFileStore: state.localFileStore,\n    files: state.files,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    dicomdir: state.dicomdir,\n    fsZippedFile: state.fsZippedFile\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearingStore: () => dispatch(clearStore()),\n    setLocalFileStore: file => dispatch(localFileStore(file)),\n    toolStore: tool => dispatch(dcmTool(tool)),\n    isOpenStore: value => dispatch(dcmIsOpen(value)),\n    setActiveDcm: dcm => dispatch(activeDcm(dcm)),\n    setActiveDcmIndex: index => dispatch(activeDcmIndex(index)),\n    setActiveMeasurements: measurements => dispatch(activeMeasurements(measurements)),\n    setLayoutStore: (row, col) => dispatch(setLayout(row, col)),\n    setDicomdirStore: dicomdir => dispatch(setDicomdir(dicomdir)),\n    setFsZippedFile: file => dispatch(setZippedFile(file)),\n    setVolumeStore: file => dispatch(setVolume(file)),\n    setFilesStore: files => dispatch(filesStore(files))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App));","map":{"version":3,"sources":["/media/mohammad/work/websites/cornerstone/dicom-viewer/src/App.js"],"names":["React","PureComponent","withStyles","connect","Dicomdir","DicomViewer","DicomHeader","Measurements","Settings","AboutDlg","Histogram","LayoutTool","FsUI","DownloadZipDlg","OpenMultipleFilesDlg","AppBar","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","Drawer","ExpandLess","ExpandMore","Icon","IconButton","List","ListItem","ListItemIcon","ListItemText","Snackbar","TextField","Toolbar","Typography","isMobile","isTablet","clearStore","localFileStore","dcmIsOpen","activeDcm","activeDcmIndex","activeMeasurements","setLayout","dcmTool","setDicomdir","setZippedFile","setVolume","filesStore","getPixelSpacing","getSpacingBetweenSlice","getSliceThickness","getSliceLocation","getFileExtReal","isInputDirSupported","getSettingsFsView","getSettingsDicomdirView","getSettingsMprInterpolation","mdiAngleAcute","mdiArrowAll","mdiAxisArrow","mdiCamera","mdiChartHistogram","mdiCheck","mdiCheckboxIntermediate","mdiContentSaveOutline","mdiCursorDefault","mdiCursorPointer","mdiDelete","mdiEllipse","mdiEyedropper","mdiFileCabinet","mdiFileDocument","mdiFileCad","mdiFolder","mdiFolderMultiple","mdiGesture","mdiViewGridPlusOutline","mdiImageEdit","mdiInformationOutline","mdiInvertColors","mdiMagnify","mdiFolderOpen","mdiRefresh","mdiRectangle","mdiRuler","mdiSettings","mdiToolbox","mdiTrashCanOutline","mdiVideo","mdiWeb","mdiArrowLeft","mdiArrowLeftCircle","mdiViewList","Tooltip","MenuItem","Popper","Grow","Paper","ClickAwayListener","MenuList","Card","cornerstoneWADOImageLoader","cornerstone","localStorage","setItem","drawerWidth","iconColor","iconTool","styles","theme","body","backgroundColor","palette","common","black","grow","flexGrow","root","display","menuButton","marginRight","spacing","title","textAlign","appBar","position","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","toolbarCard","margin","top","bottom","right","left","appBarShift","marginLeft","width","enteringScreen","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","padding","listItemText","fontSize","App","constructor","props","state","anchorElLayout","openMenu","openImageEdit","openTools","openMpr","openLayout","visibleMainMenu","visibleHeader","visibleSettings","visibleToolbar","visibleOpenUrl","visibleToolbox","visibleMeasure","visibleClearMeasureDlg","visibleAbout","visibleDicomdir","visibleFileManager","visibleZippedFileDlg","visibleDownloadZipDlg","visibleOpenMultipleFilesDlg","toolState","sliceIndex","sliceMax","listOpenFilesScrolling","visibleVolumeBuilding","visibleMprOrthogonal","visibleMprCoronal","visibleMprSagittal","visibleMprAxial","anchorEl","anchorElMpr","anchorElImageEdit","visibleSeries","totalSeries","seriesListDicomViewers","setDcmViewer","index","type","ref","dicomViewersRefs","runTool","changeTool","console","log","seriesListDicomViewersRefs","getDcmViewerRef","getDcmViewer","dicomViewers","getActiveDcmViewer","toggleFileManager","setState","handleOpenLocalFs","filesSelected","length","files","changeLayout","mprPlane","volume","i","undefined","file","url","setLocalFileStore","handleOpenSandboxFs","fsItem","handleOpenImage","plane","mprPlanePosition","mprRenderXZPlane","filename","mprData","mprRenderYZPlane","handleOpenFileDicomdir","handleOpenFsDicomdir","setDicomdirStore","origin","dicomdir","toggleDicomdir","showAppBar","window","scrollTo","toggleSeriesMenu","toggleMainMenu","showMainMenu","hideMainMenu","handleVisibility","toggleHeader","visible","toggleToolbox","saveMeasure","toggleMeasure","hideMeasure","handleVisibilityMeasure","clearMeasure","showClearMeasureDlg","hideClearMeasureDlg","confirmClearMeasureDlg","showZippedFileDlg","hideZippedFileDlg","confirmZippedFileDlg","setFsZippedFile","showAbout","showSettings","hideSettings","handleVisibilitySettings","hideDownloadZipDlg","hideOpenMultipleFilesDlg","openMultipleFilesCompleted","showOpenUrl","hideOpenUrl","openDlg","openUrlField","value","downloadOpenUrl","resetImage","saveShot","cinePlayer","clear","setFilesStore","clearingStore","handleLayout","event","currentTarget","closeLayout","row","col","layout","layoutGridClick","j","setLayoutStore","toolExecute","tool","toolStore","toolChange","toolRemove","toggleOpenMenu","toggleImageEdit","toggleTools","toggleMpr","mprSliceIndex","setActiveDcmIndex","image","columns","rows","dcmViewer","setActiveMeasurements","measurements","setActiveDcm","element","dicomImage","isDicom","layoutGridTouch","buildLayoutGrid","dicomviewers","styleLayoutGrid","border","push","gridTemplateRows","gridTemplateColumns","height","buildLayoutList","marginTop","seriesNumber","getFileName","getStringVisiblePlane","appBarTitle","classes","isOpen","webkitRelativePath","getImageOrientationZ","iop","data","string","split","v","Array","fill","map","parseFloat","mprBuildVolume","t0","performance","now","xPixelSpacing","spacingBetweenSlice","sliceThickness","getPixelData","sliceLocation","zDim","Math","round","zDimMethod2","max","min","sliceDistance","abs","len","emptyPlane","Int16Array","order","iFile","instanceNumber","reduce","previous","current","object","filter","sort","l","r","reorder","intervals","step","k","ceil","interpolationMethod","p","w","p0","p1","t1","zStep","changeToOrthogonalView","changeToSagittalView","changeToCoronalView","changeToAxialView","xzIndex","yzIndex","mprOrthogonal","setTimeout","mprSagittal","mprCoronal","mprAxial","listOpenFilesFirstFrame","listOpenFilesPreviousFrame","listOpenFilesNextFrame","listOpenFilesLastFrame","scrolling","clearInterval","timerScrolling","setInterval","handleSliceChange","floor","dicomImageRef","el","imageId","fileOpen","createRef","showFileOpen","bind","openDicomdir","showOpenDicomdir","openFolder","showOpenFolder","isOpenStore","click","handleOpenFolder","seriesNumberList","_totalSeries","seriesCounter","wadouri","fileManager","add","loadAndCacheImage","then","fileImageSeriesNumber","includes","images","image_","document","getElementById","enable","displayImage","forEach","ts","handleOpenDicomdir","datafiles","componentDidMount","render","primaryClass","primary","iconSize","isDicomdir","isMultipleFiles","iconToolColor","totalSeriesView","handleClick","handleClose","TransitionProps","placement","transformOrigin","borderRadius","Boolean","numberOfFrames","justifyContent","paddingLeft","input","vertical","horizontal","e","target","mapStateToProps","fsZippedFile","mapDispatchToProps","dispatch","dcm","setVolumeStore"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;AACA;;AAEA,SACEC,QADF,EAEEC,QAFF,QAGO,qBAHP;AAIA,SACEC,UADF,EAEEC,cAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,cALF,EAMEC,kBANF,EAOEC,SAPF,EAQEC,OARF,EASEC,WATF,EAUEC,aAVF,EAWEC,SAXF,EAYEC,UAZF,QAaO,iBAbP;AAcA,SACE;AACAC,eAFF,EAGEC,sBAHF,EAIEC,iBAJF,EAKEC,gBALF,CAME;AANF,EAOEC,cAPF,EAQEC,mBARF,EASEC,iBATF,EAUEC,uBAVF,EAWEC,2BAXF,QAYO,aAZP;AAaA,SACEC,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,SAJF,EAKEC,iBALF,EAMEC,QANF,EAOEC,uBAPF,EAQEC,qBARF,EASEC,gBATF,EAUEC,gBAVF,EAWEC,SAXF,EAYEC,UAZF,EAaEC,aAbF,EAcEC,cAdF,EAeEC,eAfF,EAgBEC,UAhBF,EAiBEC,SAjBF,EAkBEC,iBAlBF,EAmBEC,UAnBF,EAoBEC,sBApBF,EAqBEC,YArBF,EAsBEC,qBAtBF,EAuBEC,eAvBF,EAwBEC,UAxBF,EAyBEC,aAzBF,EA0BEC,UA1BF,EA2BEC,YA3BF,EA4BEC,QA5BF,EA6BEC,WA7BF,EA8BEC,UA9BF,CA+BE;AA/BF,EAgCEC,kBAhCF,EAiCEC,QAjCF,EAkCEC,MAlCF,CAoCE;AACA;AACA;AACA;AACA;AACA;AAzCF,EA0CEC,YA1CF,EA0CgBC,kBA1ChB,EA0CoCC,WA1CpC,QA2CO,SA3CP;AA6CA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,KAAKC,0BAAZ,MAA4C,+BAA5C;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B,C,CACA;AACA;AAEA;;AAEAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,kBAA9B;AAEA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,SAAS,GAAG,SAAlB;AACA,IAAIC,QAAQ,GAAG,IAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvB,aAAW;AACTC,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC;AADlC;AADG,GADY;AAOvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAPiB;AAWvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GAXiB;AAevBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd;AADH,GAfW;AAmBvBC,EAAAA,KAAK,EAAE;AACLN,IAAAA,QAAQ,EAAE,CADL;AAELO,IAAAA,SAAS,EAAE;AAFN,GAnBgB;AAwBvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENd,IAAAA,eAAe,EAAE,SAFX;AAGNe,IAAAA,MAAM,EAAEjB,KAAK,CAACiB,MAAN,CAAaC,MAAb,GAAsB,CAHxB;AAINC,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEtB,KAAK,CAACoB,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAExB,KAAK,CAACoB,WAAN,CAAkBI,QAAlB,CAA2BC;AAFmB,KAA9C;AAJN,GAxBe;AAkCvBC,EAAAA,WAAW,EAAE;AACXT,IAAAA,MAAM,EAAEjB,KAAK,CAACiB,MAAN,CAAaC,MAAb,GAAsB,CADnB;AAEXhB,IAAAA,eAAe,EAAE,SAFN;AAGXc,IAAAA,QAAQ,EAAE,UAHC;AAIXW,IAAAA,MAAM,EAAE,aAJG;AAKXR,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEtB,KAAK,CAACoB,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAExB,KAAK,CAACoB,WAAN,CAAkBI,QAAlB,CAA2BC;AAFmB,KAA9C,CALD;AASXG,IAAAA,GAAG,EAAE,MATM;AAUXC,IAAAA,MAAM,EAAE,CAVG;AAWXC,IAAAA,KAAK,EAAE,CAXI;AAYXC,IAAAA,IAAI,EAAE;AAZK,GAlCU;AAiDvBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAErC,WADD;AAEXsC,IAAAA,KAAK,EAAG,eAActC,WAAY,KAFvB;AAGXuB,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,OAAD,EAAU,QAAV,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEtB,KAAK,CAACoB,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAExB,KAAK,CAACoB,WAAN,CAAkBI,QAAlB,CAA2BW;AAFmB,KAA9C;AAHD,GAjDU;AA0DvBC,EAAAA,IAAI,EAAE;AACJ3B,IAAAA,OAAO,EAAE;AADL,GA1DiB;AA8DvBS,EAAAA,MAAM,EAAE;AACNgB,IAAAA,KAAK,EAAEtC,WADD;AAENyC,IAAAA,UAAU,EAAE,CAFN;AAGNC,IAAAA,UAAU,EAAE;AAHN,GA9De;AAoEvBC,EAAAA,UAAU,EAAE;AACVL,IAAAA,KAAK,EAAEtC,WADG;AAEVuB,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEtB,KAAK,CAACoB,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAExB,KAAK,CAACoB,WAAN,CAAkBI,QAAlB,CAA2BW;AAFO,KAAlC;AAFF,GApEW;AA4EvBK,EAAAA,WAAW,EAAE;AACXrB,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEtB,KAAK,CAACoB,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAExB,KAAK,CAACoB,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,KAAlC,CADD;AAKXgB,IAAAA,SAAS,EAAE,QALA;AAMXP,IAAAA,KAAK,EAAElC,KAAK,CAACY,OAAN,CAAc,CAAd,IAAmB,CANf;AAOX,KAACZ,KAAK,CAAC0C,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BT,MAAAA,KAAK,EAAElC,KAAK,CAACY,OAAN,CAAc,CAAd,IAAmB;AADE;AAPnB,GA5EU;AAwFvB;AACAgC,EAAAA,OAAO,EAAE5C,KAAK,CAAC6C,MAAN,CAAaD,OAzFC;AA2FvBE,EAAAA,OAAO,EAAE;AACPvC,IAAAA,QAAQ,EAAE,CADH;AAEPwC,IAAAA,OAAO,EAAE/C,KAAK,CAACY,OAAN,CAAc,CAAd;AAFF,GA3Fc;AAgGvBoC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,QADE;AAEZhB,IAAAA,UAAU,EAAE;AAFA;AAhGS,CAAL,CAApB;;AAuGA,MAAMiB,GAAN,SAAkBhK,aAAlB,CAAgC;AAE9BiK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAqCnBC,KArCmB,GAqCX;AACNC,MAAAA,cAAc,EAAE,IADV;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,aAAa,EAAE,KAHT;AAINC,MAAAA,SAAS,EAAE,KAJL;AAKNC,MAAAA,OAAO,EAAE,KALH;AAMNC,MAAAA,UAAU,EAAE,KANN;AAONC,MAAAA,eAAe,EAAE,IAPX;AAQNC,MAAAA,aAAa,EAAE,KART;AASNC,MAAAA,eAAe,EAAE,KATX;AAUNC,MAAAA,cAAc,EAAE,IAVV;AAWNC,MAAAA,cAAc,EAAE,KAXV;AAYNC,MAAAA,cAAc,EAAE,KAZV;AAaNC,MAAAA,cAAc,EAAE,KAbV;AAcNC,MAAAA,sBAAsB,EAAE,KAdlB;AAeNC,MAAAA,YAAY,EAAE,KAfR;AAgBNC,MAAAA,eAAe,EAAE,KAhBX;AAiBNC,MAAAA,kBAAkB,EAAE,KAjBd;AAkBNC,MAAAA,oBAAoB,EAAE,KAlBhB;AAmBNC,MAAAA,qBAAqB,EAAE,KAnBjB;AAoBNC,MAAAA,2BAA2B,EAAE,KApBvB;AAqBNC,MAAAA,SAAS,EAAE,CArBL;AAsBNC,MAAAA,UAAU,EAAE,CAtBN;AAuBNC,MAAAA,QAAQ,EAAE,CAvBJ;AAwBNC,MAAAA,sBAAsB,EAAE,KAxBlB;AAyBNC,MAAAA,qBAAqB,EAAE,KAzBjB;AA0BNC,MAAAA,oBAAoB,EAAE,KA1BhB;AA2BNC,MAAAA,iBAAiB,EAAE,KA3Bb;AA4BNC,MAAAA,kBAAkB,EAAE,KA5Bd;AA6BNC,MAAAA,eAAe,EAAE,KA7BX;AA+BNC,MAAAA,QAAQ,EAAE,IA/BJ;AAgCNC,MAAAA,WAAW,EAAE,IAhCP;AAiCNC,MAAAA,iBAAiB,EAAE,IAjCb;AAkCNC,MAAAA,aAAa,EAAE,KAlCT;AAoCNC,MAAAA,WAAW,EAAE,IApCP;AAqCNC,MAAAA,sBAAsB,EAAE;AArClB,KArCW;;AAAA,SA6EnBC,YA7EmB,GA6EJ,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC9B,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,eACE,oBAAC,WAAD;AACE,UAAA,MAAM,EAAGC,GAAD,IAAS;AACf,iBAAKC,gBAAL,CAAsBH,KAAtB,IAA+BE,GAA/B;AACD,WAHH;AAIE,UAAA,KAAK,EAAEF,KAJT;AAKE,UAAA,OAAO,EAAEE,GAAG,IAAK,KAAKE,OAAL,GAAeF,GALlC;AAME,UAAA,UAAU,EAAEA,GAAG,IAAK,KAAKG,UAAL,GAAkBH,GANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,OAXD,MAWO,IAAID,IAAI,KAAK,MAAb,EAAqB;AAC1BK,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,eACE,oBAAC,WAAD;AACE,UAAA,MAAM,EAAGL,GAAD,IAAS;AACf,iBAAKM,0BAAL,CAAgCR,KAAhC,IAAyCE,GAAzC;AACD,WAHH;AAIE,UAAA,KAAK,EAAEF,KAJT;AAKE,UAAA,OAAO,EAAEE,GAAG,IAAK,KAAKE,OAAL,GAAeF,GALlC;AAME,UAAA,UAAU,EAAEA,GAAG,IAAK,KAAKG,UAAL,GAAkBH,GANxC,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AACF,KAvGkB;;AAAA,SAyGnBO,eAzGmB,GAyGAT,KAAD,IAAW;AAC3B,aAAO,KAAKG,gBAAL,CAAsBH,KAAtB,CAAP;AACD,KA3GkB;;AAAA,SA6GnBU,YA7GmB,GA6GHV,KAAD,IAAW;AACxB,aAAO,KAAKW,YAAL,CAAkBX,KAAlB,CAAP;AACD,KA/GkB;;AAAA,SAiHnBY,kBAjHmB,GAiHE,MAAM;AACzB,aAAO,KAAKT,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,CAAP;AACD,KAnHkB;;AAAA,SAqHnB4K,iBArHmB,GAqHC,MAAM;AACxB,UAAI9J,iBAAiB,OAAO,MAA5B,EAAoC;AAClC,aAAK+J,QAAL,CAAc;AAAC5C,UAAAA,eAAe,EAAE,KAAlB;AAAyBU,UAAAA,kBAAkB,EAAE,CAAC,KAAKjB,KAAL,CAAWiB;AAAzD,SAAd;AACD,OAFD,MAEO;AACL,aAAKkC,QAAL,CAAc;AAAClC,UAAAA,kBAAkB,EAAE,CAAC,KAAKjB,KAAL,CAAWiB;AAAjC,SAAd;AACD;AACF,KA3HkB;;AAAA,SAkInBmC,iBAlImB,GAkIEC,aAAD,IAAmB;AACrC;AACA,UAAIA,aAAa,CAACC,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAKC,KAAL,GAAaF,aAAb;AACA,aAAKG,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AACA,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKC,MAAL,GAAc,EAAd;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACE,IAAI,KAAKnB,gBAAL,CAAsBmB,CAAtB,MAA6BC,SAAjC,EAA4C,CAC1C;AACD;;AACH,aAAKT,QAAL,CAAc;AACZ7B,UAAAA,UAAU,EAAE,CADA;AAEZC,UAAAA,QAAQ,EAAE,CAFE;AAGZG,UAAAA,oBAAoB,EAAE,KAHV;AAIZC,UAAAA,iBAAiB,EAAE,KAJP;AAKZC,UAAAA,kBAAkB,EAAE,KALR;AAMZC,UAAAA,eAAe,EAAE;AANL,SAAd,EAOG,MAAM;AACP,eAAKsB,QAAL,CAAc;AAAC/B,YAAAA,2BAA2B,EAAE;AAA9B,WAAd;AACD,SATD;AAUD,OAnBD,MAmBO;AACL,cAAMyC,IAAI,GAAGR,aAAa,CAAC,CAAD,CAA1B;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBiB,IAAtB;;AACA,YAAIA,IAAI,CAACvB,IAAL,KAAc,8BAAd,IAAgDuB,IAAI,CAACvB,IAAL,KAAc,iBAAlE,EAAqF;AACnF,eAAKuB,IAAL,GAAYA,IAAZ;AACA,eAAKC,GAAL,GAAW,IAAX;AACA,eAAKX,QAAL,CAAc;AAACjC,YAAAA,oBAAoB,EAAE;AAAvB,WAAd;AACD,SAJD,MAIO;AACL,eAAKiC,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAE,CAAb;AAAgBC,YAAAA,QAAQ,EAAE;AAA1B,WAAd;AACA,eAAKxB,KAAL,CAAWgE,iBAAX,CAA6BF,IAA7B;AACA,eAAKrB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,OAAzD;AACA,eAAKD,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,aAAzD,EAAwEoB,IAAxE;AACD;AACF;AACF,KArKkB;;AAAA,SAuKnBG,mBAvKmB,GAuKIC,MAAD,IAAY;AAChC;AACA,WAAKzB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,OAAzD;AACA,WAAKD,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,eAAzD,EAA0EwB,MAA1E;AACD,KA3KkB;;AAAA,SA6KnBC,eA7KmB,GA6KA7B,KAAD,IAAW;AAC3B;AACA,YAAMX,oBAAoB,GAAG,KAAK1B,KAAL,CAAW0B,oBAAxC;AACA,YAAME,kBAAkB,GAAG,KAAK5B,KAAL,CAAW4B,kBAAtC;AACA,YAAMD,iBAAiB,GAAG,KAAK3B,KAAL,CAAW2B,iBAArC;AACA,YAAME,eAAe,GAAG,KAAK7B,KAAL,CAAW6B,eAAnC;AACA,YAAMsC,KAAK,GAAG,KAAKC,gBAAL,EAAd,CAN2B,CAO3B;;AAEA,UAAI1C,oBAAJ,EAA0B;AACxB,YAAI,KAAK3B,KAAL,CAAWzH,cAAX,KAA8B,CAAlC,EAAqC;AACnC,eAAKkK,gBAAL,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiC,WAAjC,EAA8CJ,KAA9C;AAED,SAHD,MAGO,IAAI,KAAKtC,KAAL,CAAWzH,cAAX,KAA8B,CAAlC,EAAqC;AAC1C,cAAI6L,KAAK,KAAK,UAAd,EAA0B;AAAE;AAC1B,iBAAK3B,gBAAL,CAAsB,CAAtB,EAAyB6B,gBAAzB,CAA0C,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoF9B,KAApF,EAA2F,KAAKkC,OAAhG;AACD,WAFD,MAEO,IAAIJ,KAAK,KAAK,OAAd,EAAuB;AAAE;AAC9B,iBAAK3B,gBAAL,CAAsB,CAAtB,EAAyB6B,gBAAzB,CAA0C,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoF9B,KAApF,EAA2F,KAAKkC,OAAhG;AACD,WAFM,MAEA;AAAE;AACP,iBAAK/B,gBAAL,CAAsB,CAAtB,EAAyB6B,gBAAzB,CAA0C,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoF9B,KAApF,EAA2F,KAAKkC,OAAhG;AACD;AAEF,SATM,MASA,IAAI,KAAKxE,KAAL,CAAWzH,cAAX,KAA8B,CAAlC,EAAqC;AAC1C,cAAI6L,KAAK,KAAK,UAAd,EAA0B;AAAE;AAC1B,iBAAK3B,gBAAL,CAAsB,CAAtB,EAAyBgC,gBAAzB,CAA0C,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoF9B,KAApF,EAA2F,KAAKkC,OAAhG;AACD,WAFD,MAEO,IAAIJ,KAAK,KAAK,OAAd,EAAuB;AAAE;AAC9B,iBAAK3B,gBAAL,CAAsB,CAAtB,EAAyBgC,gBAAzB,CAA0C,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoF9B,KAApF,EAA2F,KAAKkC,OAAhG;AACD,WAFM,MAEA;AAAE;AACP,iBAAK/B,gBAAL,CAAsB,CAAtB,EAAyBgC,gBAAzB,CAA0C,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoF9B,KAApF,EAA2F,KAAKkC,OAAhG;AACD;AACF;AAEF,OAvBD,MAuBO,IAAKJ,KAAK,KAAK,UAAV,IAAwBvC,kBAAzB,IACRuC,KAAK,KAAK,OAAV,IAAqBtC,eADb,IAERsC,KAAK,KAAK,SAAV,IAAuBxC,iBAFnB,EAGL,KAAKa,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,WAAzD,EAAsEJ,KAAtE,EAHK,KAIF,IAAI8B,KAAK,KAAK,UAAV,IAAwBtC,eAA5B,EACH,KAAKW,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiD+L,gBAAjD,CAAkE,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH,EADG,KAEA,IAAIJ,KAAK,KAAK,UAAV,IAAwBxC,iBAA5B,EACH,KAAKa,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDkM,gBAAjD,CAAkE,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH,EADG,KAEA,IAAIJ,KAAK,KAAK,OAAV,IAAqBvC,kBAAzB,EACH,KAAKY,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDkM,gBAAjD,CAAkE,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH,EADG,KAEA,IAAIJ,KAAK,KAAK,OAAV,IAAqBxC,iBAAzB,EACH,KAAKa,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiD+L,gBAAjD,CAAkE,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH,EADG,KAEA,IAAIJ,KAAK,KAAK,SAAV,IAAuBvC,kBAA3B,EACH,KAAKY,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDkM,gBAAjD,CAAkE,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH,EADG,KAEA,IAAIJ,KAAK,KAAK,SAAV,IAAuBtC,eAA3B,EACH,KAAKW,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiD+L,gBAAjD,CAAkE,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH,EADG,KAEA;AACH,aAAK/B,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,WAAzD,EAAsEJ,KAAtE;AACH,KA/NkB;;AAAA,SA0OnBoC,sBA1OmB,GA0OOZ,IAAD,IAAU;AACjC,WAAKrB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,OAAzD;AACA,WAAKD,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,aAAzD,EAAwEoB,IAAxE;AACD,KA7OkB;;AAAA,SA4WnBa,oBA5WmB,GA4WKT,MAAD,IAAY;AACjC,WAAKlE,KAAL,CAAW4E,gBAAX,CAA4B;AAACC,QAAAA,MAAM,EAAE,IAAT;AAAeC,QAAAA,QAAQ,EAAEZ,MAAzB;AAAiCV,QAAAA,KAAK,EAAE;AAAxC,OAA5B;AACA,WAAKuB,cAAL;AACD,KA/WkB;;AAAA,SAwXnBC,UAxXmB,GAwXN,MAAM;AACjBC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,KA1XkB;;AAAA,SA6XnBC,gBA7XmB,GA6XA,MAAM;AACvB,YAAMjD,aAAa,GAAG,KAAKjC,KAAL,CAAWiC,aAAjC,CADuB,CAEvB;;AACA,UAAI7I,iBAAiB,OAAO,MAA5B,EAAoC;AAClC,aAAK+J,QAAL,CAAc;AAAClB,UAAAA,aAAa,EAAE,CAACA,aAAjB;AAAgChB,UAAAA,kBAAkB,EAAE;AAApD,SAAd;AACD,OAFD,MAEO;AACL,aAAKkC,QAAL,CAAc;AAAClB,UAAAA,aAAa,EAAE,CAACA;AAAjB,SAAd;AACD;AACF,KArYkB;;AAAA,SAsYnBkD,cAtYmB,GAsYF,MAAM;AACrB,YAAM5E,eAAe,GAAG,KAAKP,KAAL,CAAWO,eAAnC,CADqB,CAErB;;AACA,UAAInH,iBAAiB,OAAO,MAA5B,EAAoC;AAClC,aAAK+J,QAAL,CAAc;AAAC5C,UAAAA,eAAe,EAAE,CAACA,eAAnB;AAAoCU,UAAAA,kBAAkB,EAAE;AAAxD,SAAd;AACD,OAFD,MAEO;AACL,aAAKkC,QAAL,CAAc;AAAC5C,UAAAA,eAAe,EAAE,CAACA;AAAnB,SAAd;AACD;AACF,KA9YkB;;AAAA,SAgZnB6E,YAhZmB,GAgZJ,MAAM;AACnB,WAAKjC,QAAL,CAAc;AAAC5C,QAAAA,eAAe,EAAE;AAAlB,OAAd;AACD,KAlZkB;;AAAA,SAoZnB8E,YApZmB,GAoZJ,MAAM;AACnB,WAAKlC,QAAL,CAAc;AAAC5C,QAAAA,eAAe,EAAE;AAAlB,OAAd;AACD,KAtZkB;;AAAA,SAwZnB+E,gBAxZmB,GAwZC/E,eAAD,IAAqB;AACtC,WAAK4C,QAAL,CAAc;AAAC5C,QAAAA;AAAD,OAAd;AACD,KA1ZkB;;AAAA,SA6ZnBgF,YA7ZmB,GA6ZJ,MAAM;AACnB,YAAMC,OAAO,GAAG,CAAC,KAAKxF,KAAL,CAAWQ,aAA5B;AACA,WAAK2C,QAAL,CAAc;AAAC3C,QAAAA,aAAa,EAAEgF;AAAhB,OAAd;AACA,UAAIA,OAAJ,EACE,KAAKrC,QAAL,CAAc;AACZtC,QAAAA,cAAc,EAAE,KADJ;AAEZD,QAAAA,cAAc,EAAE,KAFJ;AAGZI,QAAAA,eAAe,EAAE,KAHL;AAIZC,QAAAA,kBAAkB,EAAE;AAJR,OAAd;AAMH,KAvakB;;AAAA,SA0anBwE,aA1amB,GA0aH,MAAM;AACpB,YAAMD,OAAO,GAAG,CAAC,KAAKxF,KAAL,CAAWY,cAA5B;AACA,WAAKuC,QAAL,CAAc;AAACvC,QAAAA,cAAc,EAAE4E;AAAjB,OAAd;AACA,UAAIA,OAAJ,EACE,KAAKrC,QAAL,CAAc;AACZtC,QAAAA,cAAc,EAAE,KADJ;AAEZL,QAAAA,aAAa,EAAE,KAFH;AAGZQ,QAAAA,eAAe,EAAE,KAHL;AAIZC,QAAAA,kBAAkB,EAAE;AAJR,OAAd;AAMH,KApbkB;;AAAA,SAsbnByE,WAtbmB,GAsbL,MAAM;AAClB,WAAKlD,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,WAAzD;AACD,KAxbkB;;AAAA,SA0bnBkD,aA1bmB,GA0bH,MAAM;AACpB,YAAMH,OAAO,GAAG,CAAC,KAAKxF,KAAL,CAAWa,cAA5B;AACA,WAAKsC,QAAL,CAAc;AAACtC,QAAAA,cAAc,EAAE2E;AAAjB,OAAd;AACA,UAAIA,OAAJ,EACE,KAAKrC,QAAL,CAAc;AACZvC,QAAAA,cAAc,EAAE,KADJ;AAEZJ,QAAAA,aAAa,EAAE,KAFH;AAGZQ,QAAAA,eAAe,EAAE,KAHL;AAIZC,QAAAA,kBAAkB,EAAE;AAJR,OAAd;AAMH,KApckB;;AAAA,SAscnB2E,WAtcmB,GAscL,MAAM;AAClB,WAAKzC,QAAL,CAAc;AAACtC,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,KAxckB;;AAAA,SA0cnBgF,uBA1cmB,GA0cQhF,cAAD,IAAoB;AAC5C,WAAKsC,QAAL,CAAc;AAACtC,QAAAA;AAAD,OAAd;AACD,KA5ckB;;AAAA,SA+cnBiE,cA/cmB,GA+cF,MAAM;AACrB,YAAMU,OAAO,GAAG,CAAC,KAAKxF,KAAL,CAAWgB,eAA5B;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC4C,OAAhC;AACA,WAAKrC,QAAL,CAAc;AAACnC,QAAAA,eAAe,EAAEwE;AAAlB,OAAd;AACA,UAAIA,OAAJ,EACE,KAAKrC,QAAL,CAAc;AACZtC,QAAAA,cAAc,EAAE,KADJ;AAEZD,QAAAA,cAAc,EAAE,KAFJ;AAGZJ,QAAAA,aAAa,EAAE,KAHH;AAIZS,QAAAA,kBAAkB,EAAE;AAJR,OAAd;AAMH,KA1dkB;;AAAA,SA6dnB6E,YA7dmB,GA6dJ,MAAM;AACnB,WAAKC,mBAAL;AACD,KA/dkB;;AAAA,SAienBA,mBAjemB,GAieG,MAAM;AAC1B,WAAK5C,QAAL,CAAc;AAACrC,QAAAA,sBAAsB,EAAE;AAAzB,OAAd;AACD,KAnekB;;AAAA,SAqenBkF,mBAremB,GAqeG,MAAM;AAC1B,WAAK7C,QAAL,CAAc;AAACrC,QAAAA,sBAAsB,EAAE;AAAzB,OAAd;AACD,KAvekB;;AAAA,SAyenBmF,sBAzemB,GAyeM,MAAM;AAC7B,WAAKD,mBAAL;AACA,WAAKxD,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,aAAzD;AACD,KA5ekB;;AAAA,SA+enByD,iBA/emB,GA+eC,MAAM;AACxB,WAAK/C,QAAL,CAAc;AAACjC,QAAAA,oBAAoB,EAAE;AAAvB,OAAd;AACD,KAjfkB;;AAAA,SAmfnBiF,iBAnfmB,GAmfC,MAAM;AACxB,WAAKhD,QAAL,CAAc;AAACjC,QAAAA,oBAAoB,EAAE;AAAvB,OAAd;AACD,KArfkB;;AAAA,SAufnBkF,oBAvfmB,GAufI,MAAM;AAC3B,WAAKD,iBAAL;AACA,WAAKhD,QAAL,CAAc;AAAClC,QAAAA,kBAAkB,EAAE;AAArB,OAAd,EAA0C,MAAM;AAC9C0B,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKkB,GAA/B;;AACA,YAAI,KAAKA,GAAL,KAAa,IAAjB,EAAuB;AACrB,eAAKX,QAAL,CAAc;AAAChC,YAAAA,qBAAqB,EAAE;AAAxB,WAAd;AACD,SAFD,MAEO;AACL,eAAKpB,KAAL,CAAWsG,eAAX,CAA2B,KAAKxC,IAAhC;AACD;AACF,OAPD;AAQD,KAjgBkB;;AAAA,SAogBnByC,SApgBmB,GAogBP,MAAM;AAChB,WAAKnD,QAAL,CAAc;AAACpC,QAAAA,YAAY,EAAE,CAAC,KAAKf,KAAL,CAAWe;AAA3B,OAAd;AACD,KAtgBkB;;AAAA,SAwgBnBwF,YAxgBmB,GAwgBJ,MAAM;AACnB,WAAKpD,QAAL,CAAc;AACZ5C,QAAAA,eAAe,EAAE,KADL;AAEZE,QAAAA,eAAe,EAAE,IAFL;AAGZC,QAAAA,cAAc,EAAE,KAHJ;AAIZ/C,QAAAA,QAAQ,EAAE;AAJE,OAAd;AAMD,KA/gBkB;;AAAA,SAihBnB6I,YAjhBmB,GAihBJ,MAAM;AACnB,WAAKrD,QAAL,CAAc;AACZ5C,QAAAA,eAAe,EAAE,IADL;AAEZE,QAAAA,eAAe,EAAE,KAFL;AAGZC,QAAAA,cAAc,EAAE,IAHJ;AAIZO,QAAAA,kBAAkB,EAAE,KAJR;AAKZD,QAAAA,eAAe,EAAE;AALL,OAAd;AAOD,KAzhBkB;;AAAA,SA2hBnByF,wBA3hBmB,GA2hBShG,eAAD,IAAqB;AAC9C,WAAK0C,QAAL,CAAc;AAAC1C,QAAAA;AAAD,OAAd;AACD,KA7hBkB;;AAAA,SA+hBnBiG,kBA/hBmB,GA+hBE,MAAM;AACzB,WAAKvD,QAAL,CAAc;AAAChC,QAAAA,qBAAqB,EAAE;AAAxB,OAAd;AACD,KAjiBkB;;AAAA,SAmiBnBwF,wBAniBmB,GAmiBQ,MAAM;AAC/B,WAAKxD,QAAL,CAAc;AAAC/B,QAAAA,2BAA2B,EAAE;AAA9B,OAAd;AACA,WAAKwF,0BAAL;AACD,KAtiBkB;;AAAA,SAwiBnBA,0BAxiBmB,GAwiBU,MAAM;AACjC,UAAI,KAAK7G,KAAL,CAAWwD,KAAX,KAAqB,IAAzB,EAA+B;AAC7B,aAAKC,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AACA,aAAKhB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,WAAzD,EAAsE,CAAtE;AACA,cAAMlB,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiBD,MAAlC;AACA,aAAKH,QAAL,CAAc;AAAC5B,UAAAA,QAAQ,EAAEA;AAAX,SAAd,EAAoC,MAAM;AACxC,eAAK6C,gBAAL;AACA,cAAI,KAAKX,QAAL,KAAkB,UAAtB,EACE,KAAKN,QAAL,CAAc;AACZzB,YAAAA,oBAAoB,EAAE,KADV;AAEZE,YAAAA,kBAAkB,EAAE,IAFR;AAGZC,YAAAA,eAAe,EAAE,KAHL;AAIZF,YAAAA,iBAAiB,EAAE;AAJP,WAAd,EADF,KAOK,IAAI,KAAK8B,QAAL,KAAkB,SAAtB,EACH,KAAKN,QAAL,CAAc;AACZzB,YAAAA,oBAAoB,EAAE,KADV;AAEZE,YAAAA,kBAAkB,EAAE,KAFR;AAGZC,YAAAA,eAAe,EAAE,KAHL;AAIZF,YAAAA,iBAAiB,EAAE;AAJP,WAAd,EADG,KAQH,KAAKwB,QAAL,CAAc;AACZzB,YAAAA,oBAAoB,EAAE,KADV;AAEZE,YAAAA,kBAAkB,EAAE,KAFR;AAGZC,YAAAA,eAAe,EAAE,IAHL;AAIZF,YAAAA,iBAAiB,EAAE;AAJP,WAAd;AAMH,SAvBD;AAwBD;AACF,KAtkBkB;;AAAA,SAwkBnBkF,WAxkBmB,GAwkBL,MAAM;AAClB,WAAK1D,QAAL,CAAc;AAACxC,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,KA1kBkB;;AAAA,SA4kBnBmG,WA5kBmB,GA4kBJC,OAAD,IAAa;AACzB,WAAK5D,QAAL,CAAc;AAACxC,QAAAA,cAAc,EAAE;AAAjB,OAAd,EACE,MAAM;AACJ,YAAIoG,OAAJ,EAAa;AACX,eAAK1B,YAAL;AACA,eAAKxB,IAAL,GAAY,IAAZ;AACA,eAAKC,GAAL,GAAW,KAAKkD,YAAL,CAAkBC,KAA7B,CAHW,CAIX;AACA;AACA;;AACA,cAAI/N,cAAc,CAAC,KAAK4K,GAAN,CAAd,KAA6B,KAAjC,EAAwC;AACtC,iBAAKX,QAAL,CAAc;AAACjC,cAAAA,oBAAoB,EAAE;AAAvB,aAAd;AACD,WAFD,MAEO;AACL,mBAAO,KAAKsB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,SAAzD,EAAoE,KAAKuE,YAAL,CAAkBC,KAAtF,CAAP;AACD;AACF;AACF,OAfH;AAgBD,KA7lBkB;;AAAA,SA+lBnBC,eA/lBmB,GA+lBD,MAAM;AACtB,WAAK/D,QAAL,CAAc;AAACxC,QAAAA,cAAc,EAAE,KAAjB;AAAwBD,QAAAA,cAAc,EAAE;AAAxC,OAAd;AACD,KAjmBkB;;AAAA,SAmmBnByG,UAnmBmB,GAmmBN,MAAM;AACjB,WAAK3E,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,OAAzD;AACD,KArmBkB;;AAAA,SAumBnB2E,QAvmBmB,GAumBR,MAAM;AACf,WAAK5E,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,QAAzD;AACD,KAzmBkB;;AAAA,SA2mBnB4E,UA3mBmB,GA2mBN,MAAM;AACjB,WAAK7E,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,MAAzD;AACD,KA7mBkB;;AAAA,SA+mBnB6E,KA/mBmB,GA+mBX,MAAM;AACZ,WAAKnE,QAAL,CAAc;AACZhD,QAAAA,aAAa,EAAE,KADH;AAEZC,QAAAA,SAAS,EAAE,KAFC;AAGZC,QAAAA,OAAO,EAAE,KAHG;AAIZO,QAAAA,cAAc,EAAE,KAJJ;AAKZC,QAAAA,cAAc,EAAE,KALJ;AAMZL,QAAAA,aAAa,EAAE,KANH;AAOZQ,QAAAA,eAAe,EAAE;AAPL,OAAd;AASA,WAAKwC,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AACA,WAAKzD,KAAL,CAAWwH,aAAX,CAAyB,IAAzB;AACA,WAAKxH,KAAL,CAAW4E,gBAAX,CAA4B,IAA5B;AACA,WAAK5E,KAAL,CAAWyH,aAAX;AACA,WAAKhF,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,OAAzD;AACD,KA9nBkB;;AAAA,SAgoBnBgF,YAhoBmB,GAgoBHC,KAAD,IAAW;AACxB,UAAI,KAAK1H,KAAL,CAAWM,UAAf,EAA2B;AACzB,aAAK6C,QAAL,CAAc;AACZlD,UAAAA,cAAc,EAAE,IADJ;AAEZK,UAAAA,UAAU,EAAE;AAFA,SAAd;AAID,OALD,MAKO;AACL,aAAK6C,QAAL,CAAc;AACZlD,UAAAA,cAAc,EAAEyH,KAAK,CAACC,aADV;AAEZrH,UAAAA,UAAU,EAAE;AAFA,SAAd;AAID;AACF,KA5oBkB;;AAAA,SA8oBnBsH,WA9oBmB,GA8oBL,MAAM;AAClB,WAAKzE,QAAL,CAAc;AAAClD,QAAAA,cAAc,EAAE,IAAjB;AAAuBK,QAAAA,UAAU,EAAE;AAAnC,OAAd;AACD,KAhpBkB;;AAAA,SAkpBnBkD,YAlpBmB,GAkpBJ,CAACqE,GAAD,EAAMC,GAAN,KAAc;AAC3B;AACA,UAAID,GAAG,GAAG,KAAK9H,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAAN,IAA8BD,GAAG,GAAG,KAAK/H,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAAxC,EAA8D;AAC5D,aAAKC,eAAL,CAAqB,CAArB;;AACA,aAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,eAAK,IAAIsE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,gBAAKtE,CAAC,GAAG,CAAJ,GAAQkE,GAAT,IAAkBI,CAAC,GAAG,CAAJ,GAAQH,GAA9B,EAAoC;AAClC,oBAAMzF,KAAK,GAAGsB,CAAC,GAAG,CAAJ,GAAQsE,CAAtB;;AACA,kBAAI,KAAKzF,gBAAL,CAAsBH,KAAtB,MAAiCuB,SAArC,EAAgD,CAC9C;AACD;AACF;AACF;AACF;AACF;;AACD,WAAK7D,KAAL,CAAWmI,cAAX,CAA0BL,GAA1B,EAA+BC,GAA/B;AACD,KAlqBkB;;AAAA,SAoqBnBK,WApqBmB,GAoqBJC,IAAD,IAAU;AACtB,WAAK/C,YAAL;;AACA,cAAQ+C,IAAR;AACE,aAAK,QAAL;AACE3L,UAAAA,QAAQ,GAAG,IAAX;AACA,eAAK0G,QAAL,CAAc;AAAC9B,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACF,aAAK,MAAL;AACE5E,UAAAA,QAAQ,GAAGjD,WAAX;AACA;;AACF,aAAK,KAAL;AACEiD,UAAAA,QAAQ,GAAGzC,gBAAX;AACA;;AACF,aAAK,MAAL;AACEyC,UAAAA,QAAQ,GAAG3B,UAAX;AACA;;AACF,aAAK,QAAL;AACE2B,UAAAA,QAAQ,GAAGvB,QAAX;AACA;;AACF,aAAK,OAAL;AACEuB,UAAAA,QAAQ,GAAGtC,aAAX;AACA;;AACF,aAAK,OAAL;AACEsC,UAAAA,QAAQ,GAAGlD,aAAX;AACA;;AACF,aAAK,eAAL;AACEkD,UAAAA,QAAQ,GAAGvC,UAAX;AACA;;AACF,aAAK,cAAL;AACEuC,UAAAA,QAAQ,GAAGxB,YAAX;AACA;;AACF,aAAK,aAAL;AACEwB,UAAAA,QAAQ,GAAGhC,UAAX;AACA;;AAEF;AACE;AAlCJ;;AAoCA,WAAKsF,KAAL,CAAWsI,SAAX,CAAqBD,IAArB;AACA,WAAK5F,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD2F,IAAzD;AACD,KA5sBkB;;AAAA,SA8sBnBE,UA9sBmB,GA8sBN,MAAM;AACjB,YAAMjH,SAAS,GAAG,IAAI,KAAKrB,KAAL,CAAWqB,SAAjC;AACA,WAAK8B,QAAL,CAAc;AAAC9B,QAAAA,SAAS,EAAEA;AAAZ,OAAd,EAAsC,MAAM;AAC1C,aAAKqB,UAAL,CAAgBA,UAAhB,CAA2B,KAAK3C,KAAL,CAAWqI,IAAtC,EAA4C/G,SAA5C;AACD,OAFD;AAGD,KAntBkB;;AAAA,SAqtBnBkH,UArtBmB,GAqtBLlG,KAAD,IAAW;AACtB,WAAKG,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,YAAzD,EAAuEJ,KAAvE;AACD,KAvtBkB;;AAAA,SAytBnBmG,cAztBmB,GAytBDd,KAAD,IAAW;AAC1B,UAAI,KAAK1H,KAAL,CAAWE,QAAf,EAAyB;AACvB,aAAKiD,QAAL,CAAc;AACZjD,UAAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWE,QADV;AAEZ4B,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OALD,MAKO;AACL,aAAKqB,QAAL,CAAc;AACZjD,UAAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWE,QADV;AAEZ4B,UAAAA,QAAQ,EAAE4F,KAAK,CAACC;AAFJ,SAAd;AAID;AACF,KAruBkB;;AAAA,SAuuBnBc,eAvuBmB,GAuuBAf,KAAD,IAAW;AAC3B,UAAI,KAAK1H,KAAL,CAAWgC,iBAAf,EAAkC;AAChC,aAAKmB,QAAL,CAAc;AACZhD,UAAAA,aAAa,EAAE,CAAC,KAAKH,KAAL,CAAWG,aADf;AAEZ6B,UAAAA,iBAAiB,EAAE;AAFP,SAAd;AAID,OALD,MAKO;AACL,aAAKmB,QAAL,CAAc;AACZhD,UAAAA,aAAa,EAAE,CAAC,KAAKH,KAAL,CAAWG,aADf;AAEZ6B,UAAAA,iBAAiB,EAAE0F,KAAK,CAACC;AAFb,SAAd;AAID;AACF,KAnvBkB;;AAAA,SAqvBnBe,WArvBmB,GAqvBL,MAAM;AAClB,WAAKvF,QAAL,CAAc;AAAC/C,QAAAA,SAAS,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAxB,OAAd;AACD,KAvvBkB;;AAAA,SAyvBnBuI,SAzvBmB,GAyvBNjB,KAAD,IAAW;AACrB,UAAI,KAAK1H,KAAL,CAAWK,OAAf,EAAwB;AACtB,aAAK8C,QAAL,CAAc;AAAC9C,UAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK,OAAtB;AAA+B0B,UAAAA,WAAW,EAAE;AAA5C,SAAd;AACD,OAFD,MAEO;AACL,aAAKoB,QAAL,CAAc;AAAC9C,UAAAA,OAAO,EAAE,CAAC,KAAKL,KAAL,CAAWK,OAAtB;AAA+B0B,UAAAA,WAAW,EAAE2F,KAAK,CAACC;AAAlD,SAAd;AACD;AAEF,KAhwBkB;;AAAA,SAkwBnBK,eAlwBmB,GAkwBA3F,KAAD,IAAW;AAC3B,UAAIrK,QAAQ,IAAIqK,KAAK,KAAK,KAAKtC,KAAL,CAAWzH,cAArC,EAAqD;AAErD,WAAKsQ,aAAL,CAAmB,KAAK7I,KAAL,CAAWzH,cAA9B,IAAgD,KAAK0H,KAAL,CAAWsB,UAA3D;AAEA,WAAKvB,KAAL,CAAW8I,iBAAX,CAA6BxG,KAA7B;;AAEA,UAAI,KAAKrC,KAAL,CAAW0B,oBAAf,EAAqC;AACnC,YAAIW,KAAK,KAAK,CAAd,EAAiB;AACf,gBAAMd,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,KAAqB,IAArB,GAA4B,CAA5B,GAAgC,KAAKxD,KAAL,CAAWwD,KAAX,CAAiBD,MAAlE;AACA,eAAKH,QAAL,CAAc;AAAC5B,YAAAA,QAAQ,EAAEA,QAAX;AAAqBD,YAAAA,UAAU,EAAE,KAAKsH,aAAL,CAAmB,CAAnB;AAAjC,WAAd;AAED,SAJD,MAIO,IAAIvG,KAAK,KAAK,CAAd,EAAiB;AACtB,gBAAMd,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BC,OAA3C;AACA,eAAK5F,QAAL,CAAc;AAAC5B,YAAAA,QAAQ,EAAEA,QAAX;AAAqBD,YAAAA,UAAU,EAAE,KAAKsH,aAAL,CAAmB,CAAnB;AAAjC,WAAd;AAED,SAJM,MAIA,IAAIvG,KAAK,KAAK,CAAd,EAAiB;AACtB,gBAAMd,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BE,IAA3C;AACA,eAAK7F,QAAL,CAAc;AAAC5B,YAAAA,QAAQ,EAAEA,QAAX;AAAqBD,YAAAA,UAAU,EAAE,KAAKsH,aAAL,CAAmB,CAAnB;AAAjC,WAAd;AACD;AACF;;AAED,YAAMK,SAAS,GAAG,KAAKnG,eAAL,CAAqBT,KAArB,CAAlB,CAtB2B,CAuB3B;;AACA,WAAKtC,KAAL,CAAWmJ,qBAAX,CAAiCD,SAAS,CAACE,YAA3C;AACA,WAAKpJ,KAAL,CAAWqJ,YAAX,CAAwB;AAACN,QAAAA,KAAK,EAAEG,SAAS,CAACH,KAAlB;AAAyBO,QAAAA,OAAO,EAAEJ,SAAS,CAACK,UAA5C;AAAwDC,QAAAA,OAAO,EAAEN,SAAS,CAACM;AAA3E,OAAxB;AACD,KA5xBkB;;AAAA,SA8xBnBC,eA9xBmB,GA8xBAnH,KAAD,IAAW;AAC3B,UAAI,CAACrK,QAAD,IAAaqK,KAAK,KAAK,KAAKtC,KAAL,CAAWzH,cAAtC,EAAsD;AAEtD,WAAKsQ,aAAL,CAAmB,KAAK7I,KAAL,CAAWzH,cAA9B,IAAgD,KAAK0H,KAAL,CAAWsB,UAA3D;AAEA,WAAKvB,KAAL,CAAW8I,iBAAX,CAA6BxG,KAA7B;;AAEA,UAAI,KAAKrC,KAAL,CAAW0B,oBAAf,EAAqC;AACnC,YAAIW,KAAK,KAAK,CAAd,EAAiB;AACf,gBAAMd,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,KAAqB,IAArB,GAA4B,CAA5B,GAAgC,KAAKxD,KAAL,CAAWwD,KAAX,CAAiBD,MAAlE;AACA,eAAKH,QAAL,CAAc;AAAC5B,YAAAA,QAAQ,EAAEA,QAAX;AAAqBD,YAAAA,UAAU,EAAE,KAAKsH,aAAL,CAAmB,CAAnB;AAAjC,WAAd;AAED,SAJD,MAIO,IAAIvG,KAAK,KAAK,CAAd,EAAiB;AACtB,gBAAMd,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BC,OAA3C;AACA,eAAK5F,QAAL,CAAc;AAAC5B,YAAAA,QAAQ,EAAEA,QAAX;AAAqBD,YAAAA,UAAU,EAAE,KAAKsH,aAAL,CAAmB,CAAnB;AAAjC,WAAd;AAED,SAJM,MAIA,IAAIvG,KAAK,KAAK,CAAd,EAAiB;AACtB,gBAAMd,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BE,IAA3C;AACA,eAAK7F,QAAL,CAAc;AAAC5B,YAAAA,QAAQ,EAAEA,QAAX;AAAqBD,YAAAA,UAAU,EAAE,KAAKsH,aAAL,CAAmB,CAAnB;AAAjC,WAAd;AACD;AACF;;AAED,YAAMK,SAAS,GAAG,KAAKnG,eAAL,CAAqBT,KAArB,CAAlB;AACA,WAAKtC,KAAL,CAAWmJ,qBAAX,CAAiCD,SAAS,CAACE,YAA3C;AACA,WAAKpJ,KAAL,CAAWqJ,YAAX,CAAwB;AAACN,QAAAA,KAAK,EAAEG,SAAS,CAACH,KAAlB;AAAyBO,QAAAA,OAAO,EAAEJ,SAAS,CAACK,UAA5C;AAAwDC,QAAAA,OAAO,EAAEN,SAAS,CAACM;AAA3E,OAAxB;AACD,KAvzBkB;;AAAA,SAyzBnBE,eAzzBmB,GAyzBD,MAAM;AACtB,UAAIC,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK5D,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAApB,EAA0CpE,CAAC,EAA3C,EAA+C;AAC7C,aAAK,IAAIsE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlI,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAApB,EAA0CE,CAAC,EAA3C,EAA+C;AAC7C,gBAAM0B,eAAe,GAAG;AACtBC,YAAAA,MAAM,EAAE,KAAK7J,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,MAAyB,CAAzB,IAA8B,KAAKhI,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,MAAyB,CAAvD,GAA2D,mBAA3D,GAAiF;AADnE,WAAxB;AAGA,gBAAM1F,KAAK,GAAGsB,CAAC,GAAG,CAAJ,GAAQsE,CAAtB;AACAyB,UAAAA,YAAY,CAACG,IAAb,CACE;AACE,YAAA,GAAG,EAAExH,KADP;AAEE,YAAA,KAAK,EAAEsH,eAFT;AAGE,YAAA,OAAO,EAAE,MAAM,KAAK3B,eAAL,CAAqB3F,KAArB,CAHjB;AAIE,YAAA,YAAY,EAAE,MAAM,KAAKmH,eAAL,CAAqBnH,KAArB,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMG,KAAKU,YAAL,CAAkBV,KAAlB,CANH,CADF;AAUD;AACF;;AAED,aACE;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,KAAK,EAAE;AACLjF,UAAAA,OAAO,EAAE,MADJ;AAEL0M,UAAAA,gBAAgB,EAAG,UAAS,KAAK/J,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAAqB,KAAI,MAAM,KAAKhI,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAAqB,IAF3E;AAGLgC,UAAAA,mBAAmB,EAAG,UAAS,KAAKhK,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAAqB,KAAI,MAAM,KAAKhI,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,CAAqB,IAH9E;AAILiC,UAAAA,MAAM,EAAE,MAJH;AAKLnL,UAAAA,KAAK,EAAE;AALF,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUG6K,YAVH,CADF;AAcD,KA51BkB;;AAAA,SA81BnBO,eA91BmB,GA81BA/H,WAAD,IAAiB;AACjC,UAAIwH,YAAY,GAAG,EAAnB;;AAEA,WAAK,IAAI/F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAMgG,eAAe,GAAG;AACtBC,UAAAA,MAAM,EAAE,gBADc;AAEtB/K,UAAAA,KAAK,EAAE,MAFe;AAGtBmL,UAAAA,MAAM,EAAE,OAHc;AAItBE,UAAAA,SAAS,EAAE;AAJW,SAAxB;AAOA,aAAK1H,gBAAL,CAAsBmB,CAAtB,EAAyBlB,OAAzB,CAAiC,WAAjC,EAA8C,CAA9C;AAEAiH,QAAAA,YAAY,CAACG,IAAb,CACE,oBAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,KAAK,EAAE;AAAChL,YAAAA,KAAK,EAAE;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,GAAG,EAAE8E,CADP;AAEE,UAAA,KAAK,EAAEgG,eAFT,CAGE;AACA;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMG,KAAKxH,sBAAL,CAA4BwB,CAA5B,CANH,CADF,EASE;AACE,UAAA,KAAK,EAAE;AAACjE,YAAAA,OAAO,EAAE,CAAV;AAAapB,YAAAA,MAAM,EAAE;AAArB,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAGkB4D,WAAW,CAACyB,CAAD,CAAX,GAAiBzB,WAAW,CAACyB,CAAD,CAAX,CAAewG,YAAhC,GAA+C,mBAHjE,CATF,CADF,CADF;AAmBD;;AAED,aACE;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,KAAK,EAAE;AACL/M,UAAAA,OAAO,EAAE,MADJ;AAEL;AACA;AACA4M,UAAAA,MAAM,EAAE,MAJH;AAKLnL,UAAAA,KAAK,EAAE;AALF,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUG6K,YAVH,CADF,CAlCiC,CAiDjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAx7BkB;;AAAA,SA07BnBU,WA17BmB,GA07BJnB,SAAD,IAAe;AAC3B,aAAOA,SAAS,CAAC3E,QAAjB;AACA;;;;;;;AAOD,KAn8BkB;;AAAA,SAq8BnB+F,qBAr8BmB,GAq8BK,MAAM;AAC5B,UAAI,KAAKrK,KAAL,CAAW0B,oBAAf,EACE,OAAO,YAAP,CADF,KAEK,IAAI,KAAK1B,KAAL,CAAW4B,kBAAf,EACH,OAAO,UAAP,CADG,KAEA,IAAI,KAAK5B,KAAL,CAAW6B,eAAf,EACH,OAAO,OAAP,CADG,KAEA,IAAI,KAAK7B,KAAL,CAAW2B,iBAAf,EACH,OAAO,SAAP;AACH,KA98BkB;;AAAA,SAg9BnB2I,WAh9BmB,GAg9BL,CAACC,OAAD,EAAUC,MAAV,EAAkBvB,SAAlB,KAAgC;AAC5C,UAAIjR,QAAQ,IAAI,CAACC,QAAjB,EAA2B;AACzB,YAAIuS,MAAJ,EACE,OAAO,IAAP,CADF,KAGE,OACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,UAApB;AAA+B,UAAA,SAAS,EAAED,OAAO,CAAC/M,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD7B,WACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADpD,UADF;AAKH,OATD,MASO;AACL,YAAIgN,MAAJ,EAAY;AACV,gBAAMrG,KAAK,GAAG,KAAKkG,qBAAL,EAAd;;AACA,cAAI,KAAKrK,KAAL,CAAWuB,QAAX,GAAsB,CAAtB,IAA2B,KAAKkC,QAAL,KAAkBU,KAA7C,IAAsD,KAAKV,QAAL,KAAkB,EAA5E,EAAgF;AAC9E,mBACE,oBAAC,UAAD;AAAY,cAAA,OAAO,EAAC,UAApB;AAA+B,cAAA,SAAS,EAAE8G,OAAO,CAAC/M,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACG,SAAS2G,KADZ,CADF;AAKD;;AACD,iBACE,oBAAC,UAAD;AAAY,YAAA,OAAO,EAAC,UAApB;AAA+B,YAAA,SAAS,EAAEoG,OAAO,CAAC/M,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAK4M,WAAL,CAAiBnB,SAAjB,CADH,CADF;AAKD,SAdD,MAcO,IAAI,KAAKlJ,KAAL,CAAW8E,QAAX,KAAwB,IAA5B,EAAkC;AACvC,iBACE,oBAAC,UAAD;AAAY,YAAA,OAAO,EAAC,UAApB;AAA+B,YAAA,SAAS,EAAE0F,OAAO,CAAC/M,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAKuC,KAAL,CAAW8E,QAAX,CAAoBA,QAApB,CAA6B4F,kBADhC,CADF;AAKD,SANM,MAOL,OACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAC,UAApB;AAA+B,UAAA,SAAS,EAAEF,OAAO,CAAC/M,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD7B,WACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADpD,UADF;AAKH;AACF,KAt/BkB;;AAAA,SA0/BnBkN,oBA1/BmB,GA0/BK5B,KAAD,IAAW;AAChC,YAAM6B,GAAG,GAAG7B,KAAK,CAAC8B,IAAN,CAAWC,MAAX,CAAkB,WAAlB,EAA+BC,KAA/B,CAAqC,IAArC,CAAZ,CADgC,CACwB;;AAExD,UAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,CAAlB,EAAqBC,GAArB,CAAyB,MAAM,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,CAAlB,CAA/B,CAAR;AAEAF,MAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUI,UAAU,CAACR,GAAG,CAAC,CAAD,CAAJ,CAApB,CALgC,CAKF;;AAC9BI,MAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUI,UAAU,CAACR,GAAG,CAAC,CAAD,CAAJ,CAApB,CANgC,CAMF;;AAC9BI,MAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUI,UAAU,CAACR,GAAG,CAAC,CAAD,CAAJ,CAApB,CAPgC,CAOF;;AAC9BI,MAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUI,UAAU,CAACR,GAAG,CAAC,CAAD,CAAJ,CAApB,CARgC,CAQF;;AAC9BI,MAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUI,UAAU,CAACR,GAAG,CAAC,CAAD,CAAJ,CAApB,CATgC,CASF;;AAC9BI,MAAAA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUI,UAAU,CAACR,GAAG,CAAC,CAAD,CAAJ,CAApB,CAVgC,CAUF;AAC9B;;AACA,aAAOI,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAP;AACD,KAvgCkB;;AAAA,SAygCnBK,cAzgCmB,GAygCF,MAAM;AACrB,UAAI,KAAK1H,MAAL,CAAYJ,MAAZ,GAAqB,CAAzB,EAA4B;AAE5B,WAAK+H,EAAL,GAAUC,WAAW,CAACC,GAAZ,EAAV;AAEA,YAAMhI,KAAK,GAAG,KAAKxD,KAAL,CAAWwD,KAAzB;AACA,YAAMiI,aAAa,GAAG1S,eAAe,CAACyK,KAAK,CAAC,CAAD,CAAL,CAASuF,KAAV,EAAiB,CAAjB,CAArC;AACA,YAAM2C,mBAAmB,GAAG1S,sBAAsB,CAACwK,KAAK,CAAC,CAAD,CAAL,CAASuF,KAAV,CAAlD;AACA,YAAM4C,cAAc,GAAG1S,iBAAiB,CAACuK,KAAK,CAAC,CAAD,CAAL,CAASuF,KAAV,CAAxC;AACA,YAAMxF,MAAM,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASuF,KAAT,CAAe6C,YAAf,GAA8BrI,MAA7C;AACA,YAAMsI,aAAa,GAAG3S,gBAAgB,CAACsK,KAAK,CAAC,CAAD,CAAL,CAASuF,KAAV,CAAtC;AACA,WAAKpF,MAAL,GAAc,EAAd,CAXqB,CAYrB;;AACA,WAAKa,OAAL,CAAasH,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWxI,KAAK,CAACD,MAAN,GAAemI,mBAAf,GAAqCD,aAAhD,CAApB,CAbqB,CAerB;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,UAAIQ,WAAW,GAAG,KAAlB;;AACA,UAAIP,mBAAmB,GAAGC,cAAtB,IAAwCE,aAAa,KAAKhI,SAA9D,EAAyE;AACvE,YAAIqI,GAAG,GAAG,CAAV;AACA,YAAIC,GAAG,GAAG,CAAV;;AACA,aAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACD,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC,cAAIJ,KAAK,CAACI,CAAD,CAAL,CAASwI,aAAT,GAAyBF,GAA7B,EACEA,GAAG,GAAG1I,KAAK,CAACI,CAAD,CAAL,CAASwI,aAAf;AACF,cAAI5I,KAAK,CAACI,CAAD,CAAL,CAASwI,aAAT,GAAyBD,GAA7B,EACEA,GAAG,GAAG3I,KAAK,CAACI,CAAD,CAAL,CAASwI,aAAf;AACH;;AACD,aAAK5H,OAAL,CAAasH,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACM,GAAL,CAASH,GAAG,GAAGC,GAAf,IAAsBV,aAAjC,CAApB,CATuE,CAUvE;;AACAQ,QAAAA,WAAW,GAAG,IAAd;AACD;;AAED,UAAIzI,KAAK,CAACD,MAAN,KAAiB,KAAKiB,OAAL,CAAasH,IAAlC,EAAwC;AAAE;AACxC,aAAK,IAAIlI,CAAC,GAAG,CAAR,EAAW0I,GAAG,GAAG9I,KAAK,CAACD,MAA5B,EAAoCK,CAAC,GAAG0I,GAAxC,EAA6C1I,CAAC,EAA9C,EAAkD;AAChD,eAAKD,MAAL,CAAYmG,IAAZ,CAAiBtG,KAAK,CAACI,CAAD,CAAL,CAASmF,KAAT,CAAe6C,YAAf,EAAjB;AACD;AAEF,OALD,MAKO,IAAIpI,KAAK,CAACD,MAAN,GAAe,KAAKiB,OAAL,CAAasH,IAAhC,EAAsC;AAAE;AAE7C,YAAIS,UAAU,GAAG,IAAIC,UAAJ,CAAejJ,MAAf,EAAuB2H,IAAvB,CAA4B,CAA5B,CAAjB;;AACA,aAAK,IAAItH,CAAC,GAAG,CAAR,EAAW0I,GAAG,GAAG,KAAK9H,OAAL,CAAasH,IAAnC,EAAyClI,CAAC,GAAG0I,GAA7C,EAAkD1I,CAAC,EAAnD,EAAuD;AACrD,eAAKD,MAAL,CAAYmG,IAAZ,CAAiByC,UAAjB;AACD;;AAED,YAAIE,KAAK,GAAG,EAAZ;;AAEA,aAAK,IAAI7I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACD,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC6I,UAAAA,KAAK,CAAC3C,IAAN,CAAW;AACT4C,YAAAA,KAAK,EAAE9I,CADE;AAET+I,YAAAA,cAAc,EAAEnJ,KAAK,CAACI,CAAD,CAAL,CAAS+I,cAFhB;AAGTP,YAAAA,aAAa,EAAE5I,KAAK,CAACI,CAAD,CAAL,CAASwI,aAHf;AAITP,YAAAA,aAAa,EAAErI,KAAK,CAACI,CAAD,CAAL,CAASiI;AAJf,WAAX;AAMD;;AAED,YAAII,WAAJ,EAAiB;AACf;AACAQ,UAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAa,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAC1C,gBAAIC,MAAM,GAAGF,QAAQ,CAACG,MAAT,CAAgBD,MAAM,IAAIA,MAAM,CAACX,aAAP,KAAyBU,OAAO,CAACV,aAA3D,CAAb;;AACA,gBAAIW,MAAM,CAACxJ,MAAP,KAAkB,CAAtB,EAAyB;AACvBsJ,cAAAA,QAAQ,CAAC/C,IAAT,CAAcgD,OAAd;AACD;;AACD,mBAAOD,QAAP;AACD,WANO,EAML,EANK,CAAR;AAQAJ,UAAAA,KAAK,CAACQ,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB;AACA,mBAAOD,CAAC,CAACP,cAAF,GAAmBQ,CAAC,CAACR,cAA5B;AACD,WAHD,EAVe,CAcf;AACD,SAfD,MAeO;AACL;AACA,gBAAMS,OAAO,GAAG5J,KAAK,CAAC,CAAD,CAAL,CAASqI,aAAT,GAAyBrI,KAAK,CAAC,CAAD,CAAL,CAASqI,aAAlD;;AACA,cAAIuB,OAAJ,EAAa;AACXX,YAAAA,KAAK,CAACQ,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB;AACA;AACA,qBAAOA,CAAC,CAACtB,aAAF,GAAkBqB,CAAC,CAACrB,aAA3B;AACD,aAJD,EADW,CAMX;AACD;AACF;AACD;;;;;;;;;AAQA,YAAIwB,SAAS,GAAG,CAAC,CAAD,CAAhB;AACA,aAAK1J,MAAL,CAAY,CAAZ,IAAiBH,KAAK,CAACiJ,KAAK,CAAC,CAAD,CAAL,CAASC,KAAV,CAAL,CAAsB3D,KAAtB,CAA4B6C,YAA5B,EAAjB;AACA,aAAKjI,MAAL,CAAY,KAAKa,OAAL,CAAasH,IAAb,GAAoB,CAAhC,IAAqCtI,KAAK,CAACiJ,KAAK,CAACA,KAAK,CAAClJ,MAAN,GAAe,CAAhB,CAAL,CAAwBmJ,KAAzB,CAAL,CAAqC3D,KAArC,CAA2C6C,YAA3C,EAArC;AACA,cAAM0B,IAAI,GAAG,CAAC,KAAK9I,OAAL,CAAasH,IAAb,GAAoB,CAArB,KAA2BW,KAAK,CAAClJ,MAAN,GAAe,CAA1C,CAAb;AACA,YAAIK,CAAC,GAAG,CAAR;;AACA,aAAK,IAAI2J,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAId,KAAK,CAAClJ,MAAN,GAAe,CAApC,EAAuCgK,CAAC,EAAxC,EAA4C;AAC1C3J,UAAAA,CAAC,GAAGmI,IAAI,CAACyB,IAAL,CAAU5J,CAAC,GAAG0J,IAAd,CAAJ,CAD0C,CAE1C;;AACA,eAAK3J,MAAL,CAAYC,CAAZ,IAAiBJ,KAAK,CAACiJ,KAAK,CAACc,CAAD,CAAL,CAASb,KAAV,CAAL,CAAsB3D,KAAtB,CAA4B6C,YAA5B,EAAjB,CAH0C,CAGmB;;AAC7DyB,UAAAA,SAAS,CAACvD,IAAV,CAAelG,CAAf;AACD;;AACDyJ,QAAAA,SAAS,CAACvD,IAAV,CAAe,KAAKtF,OAAL,CAAasH,IAAb,GAAoB,CAAnC;AACAlJ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BwK,SAA3B,EAjE2C,CAmE3C;;AAEA,cAAMI,mBAAmB,GAAGlU,2BAA2B,EAAvD;;AAEA,YAAIkU,mBAAmB,KAAK,IAA5B,EAAkC;AAChC;AACA,eAAK,IAAI7J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyJ,SAAS,CAAC9J,MAAV,GAAmB,CAAvC,EAA0CK,CAAC,EAA3C,EAA+C;AAC7C;AACA,iBAAK,IAAIsE,CAAC,GAAGmF,SAAS,CAACzJ,CAAD,CAAT,GAAe,CAA5B,EAA+BsE,CAAC,IAAImF,SAAS,CAACzJ,CAAC,GAAG,CAAL,CAAT,GAAmB,CAAvD,EAA0DsE,CAAC,EAA3D,EAA+D;AAC7D;AACA,mBAAKvE,MAAL,CAAYuE,CAAZ,IAAiB,KAAKvE,MAAL,CAAY0J,SAAS,CAACzJ,CAAC,GAAG,CAAL,CAArB,CAAjB;AACD;AACF;AAEF,SAVD,MAUO,IAAI6J,mBAAmB,KAAK,gBAA5B,EAA8C;AACnD;AACA,eAAK,IAAI7J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyJ,SAAS,CAAC9J,MAAV,GAAmB,CAAvC,EAA0CK,CAAC,EAA3C,EAA+C;AAC7C;AACA,kBAAM0J,IAAI,GAAGD,SAAS,CAACzJ,CAAC,GAAG,CAAL,CAAT,GAAmByJ,SAAS,CAACzJ,CAAD,CAAzC;;AAEA,iBAAK,IAAIsE,CAAC,GAAGmF,SAAS,CAACzJ,CAAD,CAAT,GAAe,CAA5B,EAA+BsE,CAAC,GAAGmF,SAAS,CAACzJ,CAAC,GAAG,CAAL,CAA5C,EAAqDsE,CAAC,EAAtD,EAA0D;AACxD;AAEA,kBAAIwF,CAAC,GAAG,IAAIlB,UAAJ,CAAejJ,MAAf,CAAR;AACA,oBAAMoK,CAAC,GAAG,CAACzF,CAAC,GAAGmF,SAAS,CAACzJ,CAAD,CAAd,IAAqB0J,IAA/B;;AAEA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhK,MAAM,GAAG,CAA7B,EAAgCgK,CAAC,EAAjC,EAAqC;AACnC;AACA;AACA;AACA;AAEA;AACA,sBAAMK,EAAE,GAAG,KAAKjK,MAAL,CAAY0J,SAAS,CAACzJ,CAAD,CAArB,EAA0B2J,CAA1B,KAAgC,IAAII,CAApC,CAAX;AACA,sBAAME,EAAE,GAAG,KAAKlK,MAAL,CAAY0J,SAAS,CAACzJ,CAAC,GAAG,CAAL,CAArB,EAA8B2J,CAA9B,IAAmCI,CAA9C;AACAD,gBAAAA,CAAC,CAACH,CAAD,CAAD,GAAOK,EAAE,GAAGC,EAAZ;;AACA,oBAAID,EAAE,KAAK/J,SAAP,IAAoBgK,EAAE,KAAKhK,SAA/B,EAA0C;AACxCjB,kBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,iBAZkC,CAanC;;AACA;;;;;;;;;;;;;;AAaD;;AAED,mBAAKc,MAAL,CAAYuE,CAAZ,IAAiBwF,CAAjB;AACD;AACF;AACF;;AAED,aAAKI,EAAL,GAAUvC,WAAW,CAACC,GAAZ,EAAV;AACA5I,QAAAA,OAAO,CAACC,GAAR,CAAa,gCAA+B,KAAKiL,EAAL,GAAU,KAAKxC,EAAG,eAA9D;AAED,OAlIM,MAkIA;AAAE;AACP,aAAK9G,OAAL,CAAauJ,KAAb,GAAqBvK,KAAK,CAACD,MAAN,GAAe,KAAKiB,OAAL,CAAasH,IAAjD,CADK,CAEL;;AACA,aAAK,IAAIlI,CAAC,GAAG,CAAR,EAAW0I,GAAG,GAAG,KAAK9H,OAAL,CAAasH,IAAnC,EAAyClI,CAAC,GAAG0I,GAA7C,EAAkD1I,CAAC,EAAnD,EAAuD;AACrD,gBAAM2J,CAAC,GAAGxB,IAAI,CAACC,KAAL,CAAWpI,CAAC,GAAG,KAAKY,OAAL,CAAauJ,KAA5B,CAAV;AACA,eAAKpK,MAAL,CAAYmG,IAAZ,CAAiBtG,KAAK,CAAC+J,CAAD,CAAL,CAASxE,KAAT,CAAe6C,YAAf,EAAjB;AACD;AACF;;AAED,UAAI,KAAK3L,KAAL,CAAW0B,oBAAf,EAAqC;AACnC,aAAKqM,sBAAL;AAED,OAHD,MAGO,IAAI,KAAK/N,KAAL,CAAW4B,kBAAf,EAAmC;AACxC,aAAKoM,oBAAL;AAED,OAHM,MAGA,IAAI,KAAKhO,KAAL,CAAW2B,iBAAf,EAAkC;AACvC,aAAKsM,mBAAL;AAED,OAHM,MAGA;AAAE;AACP,aAAKC,iBAAL;AACD;AACF,KA3sCkB;;AAAA,SA6sCnBH,sBA7sCmB,GA6sCM,MAAM;AAC7B,WAAKvK,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AAEA,WAAKL,QAAL,CAAc;AAAC1B,QAAAA,qBAAqB,EAAE;AAAxB,OAAd,EAA8C,MAAM;AAClD,cAAM0C,KAAK,GAAG,KAAKC,gBAAL,EAAd;AAEA,cAAM/B,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAW,KAAKhM,KAAL,CAAWwD,KAAX,CAAiBD,MAAjB,GAA0B,CAArC,CAAd;AAEA,YAAI,KAAKd,gBAAL,CAAsB,CAAtB,EAAyBkB,MAAzB,KAAoC,IAAxC,EACE,KAAKlB,gBAAL,CAAsB,CAAtB,EAAyBkB,MAAzB,GAAkC,KAAKA,MAAvC;AAEF,aAAKkF,aAAL,CAAmB,CAAnB,IAAwBvG,KAAxB;AACA,aAAKG,gBAAL,CAAsB,CAAtB,EAAyBC,OAAzB,CAAiC,WAAjC,EAA8CJ,KAA9C;AAEA,YAAI,KAAKG,gBAAL,CAAsB,CAAtB,EAAyBkB,MAAzB,KAAoC,IAAxC,EACE,KAAKlB,gBAAL,CAAsB,CAAtB,EAAyBkB,MAAzB,GAAkC,KAAKA,MAAvC;AACF,cAAMyK,OAAO,GAAGrC,IAAI,CAACC,KAAL,CAAW,KAAKhM,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BC,OAA1B,GAAoC,CAA/C,CAAhB;AACA,aAAKH,aAAL,CAAmB,CAAnB,IAAwBuF,OAAxB;AACA,aAAK3L,gBAAL,CAAsB,CAAtB,EAAyB6B,gBAAzB,CAA0C,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoFgK,OAApF,EAA6F,KAAK5J,OAAlG;AAEA,YAAI,KAAK/B,gBAAL,CAAsB,CAAtB,EAAyBkB,MAAzB,KAAoC,IAAxC,EACE,KAAKlB,gBAAL,CAAsB,CAAtB,EAAyBkB,MAAzB,GAAkC,KAAKA,MAAvC;AACF,cAAM0K,OAAO,GAAGtC,IAAI,CAACC,KAAL,CAAW,KAAKhM,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BE,IAA1B,GAAiC,CAA5C,CAAhB;AACA,aAAKJ,aAAL,CAAmB,CAAnB,IAAwBwF,OAAxB;AACA,aAAK5L,gBAAL,CAAsB,CAAtB,EAAyBgC,gBAAzB,CAA0C,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAAnE,EAA6EH,KAA7E,EAAoFiK,OAApF,EAA6F,KAAK7J,OAAlG;AACD,OAtBD;AAwBD,KAxuCkB;;AAAA,SA0uCnByJ,oBA1uCmB,GA0uCI,MAAM;AAC3B,WAAKxK,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AAEA,WAAKL,QAAL,CAAc;AAAC1B,QAAAA,qBAAqB,EAAE;AAAxB,OAAd,EAA8C,MAAM;AAClD,cAAM0C,KAAK,GAAG,KAAKC,gBAAL,EAAd;AAEA,YAAI,KAAK5B,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDoL,MAAjD,KAA4D,IAAhE,EACE,KAAKlB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDoL,MAAjD,GAA0D,KAAKA,MAA/D,CAJgD,CAKlD;;AAEA,YAAIS,KAAK,KAAK,UAAd,EAA0B;AACxB,gBAAM5C,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,KAAqB,IAArB,GAA4B,CAA5B,GAAgC,KAAKxD,KAAL,CAAWwD,KAAX,CAAiBD,MAAlE;AACA,gBAAMjB,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,WAAzD,EAAsEJ,KAAtE;AAED,SAND,MAMO,IAAI8B,KAAK,KAAK,OAAd,EAAuB;AAC5B,gBAAM5C,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BC,OAA3C;AACA,gBAAM1G,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDkM,gBAAjD,CAAkE,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH;AAED,SANM,MAMA;AACL,gBAAMhD,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BE,IAA3C;AACA,gBAAM3G,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiD+L,gBAAjD,CAAkE,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH;AACD;AACF,OAzBD;AA0BD,KAvwCkB;;AAAA,SAywCnB0J,mBAzwCmB,GAywCG,MAAM;AAC1B,WAAKzK,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AAEA,WAAKL,QAAL,CAAc;AAAC1B,QAAAA,qBAAqB,EAAE;AAAxB,OAAd,EAA8C,MAAM;AAClD,cAAM0C,KAAK,GAAG,KAAKC,gBAAL,EAAd;AAEA,YAAI,KAAK5B,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDoL,MAAjD,KAA4D,IAAhE,EACE,KAAKlB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDoL,MAAjD,GAA0D,KAAKA,MAA/D,CAJgD,CAKlD;;AAEA,YAAIS,KAAK,KAAK,SAAd,EAAyB;AACvB,gBAAM5C,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,KAAqB,IAArB,GAA4B,CAA5B,GAAgC,KAAKxD,KAAL,CAAWwD,KAAX,CAAiBD,MAAlE;AACA,gBAAMjB,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,WAAzD,EAAsEJ,KAAtE;AAED,SAND,MAMO,IAAI8B,KAAK,KAAK,OAAd,EAAuB;AAC5B,gBAAM5C,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BC,OAA3C;AACA,gBAAM1G,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiD+L,gBAAjD,CAAkE,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH;AAED,SANM,MAMA;AAAE;AACP,gBAAMhD,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BE,IAA3C;AACA,gBAAM3G,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDkM,gBAAjD,CAAkE,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH;AACD;AACF,OAzBD;AA0BD,KAtyCkB;;AAAA,SAwyCnB2J,iBAxyCmB,GAwyCC,MAAM;AACxB,WAAK1K,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AAEA,WAAKL,QAAL,CAAc;AAAC1B,QAAAA,qBAAqB,EAAE;AAAxB,OAAd,EAA8C,MAAM;AAClD,cAAM0C,KAAK,GAAG,KAAKC,gBAAL,EAAd;AAEA,YAAI,KAAK5B,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDoL,MAAjD,KAA4D,IAAhE,EACE,KAAKlB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDoL,MAAjD,GAA0D,KAAKA,MAA/D,CAJgD,CAKlD;;AAEA,YAAIS,KAAK,KAAK,OAAd,EAAuB;AACrB,gBAAM5C,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,KAAqB,IAArB,GAA4B,CAA5B,GAAgC,KAAKxD,KAAL,CAAWwD,KAAX,CAAiBD,MAAlE;AACA,gBAAMjB,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDmK,OAAjD,CAAyD,WAAzD,EAAsEJ,KAAtE;AAED,SAND,MAMO,IAAI8B,KAAK,KAAK,UAAd,EAA0B;AAC/B,gBAAM5C,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BC,OAA3C;AACA,gBAAM1G,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiD+L,gBAAjD,CAAkE,KAAK7B,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH;AAED,SANM,MAMA;AACL,gBAAMhD,QAAQ,GAAG,KAAKxB,KAAL,CAAWwD,KAAX,CAAiB,CAAjB,EAAoBuF,KAApB,CAA0BE,IAA3C;AACA,gBAAM3G,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAWxK,QAAQ,GAAG,CAAtB,CAAd;AACA,eAAK4B,QAAL,CAAc;AAAC7B,YAAAA,UAAU,EAAEe,KAAb;AAAoBd,YAAAA,QAAQ,EAAEA;AAA9B,WAAd;AACA,eAAKiB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiDkM,gBAAjD,CAAkE,KAAKhC,gBAAL,CAAsB,CAAtB,EAAyB8B,QAA3F,EAAqGH,KAArG,EAA4G9B,KAA5G,EAAmH,KAAKkC,OAAxH;AACD;AACF,OAzBD;AA0BD,KAr0CkB;;AAAA,SAu0CnBH,gBAv0CmB,GAu0CA,MAAM;AACvB,UAAI,KAAKX,QAAL,KAAkB,EAAtB,EAA0B;AACxB,aAAKA,QAAL,GAAgB,KAAKjB,gBAAL,CAAsB,KAAKzC,KAAL,CAAWzH,cAAjC,EAAiD8L,gBAAjD,EAAhB;AACD;;AACD,aAAO,KAAKX,QAAZ;AACD,KA50CkB;;AAAA,SA80CnB4K,aA90CmB,GA80CH,MAAM;AACpB,YAAM3M,oBAAoB,GAAG,KAAK1B,KAAL,CAAW0B,oBAAxC;;AACA,UAAI,CAACA,oBAAL,EAA2B;AACzB,cAAMW,KAAK,GAAGyJ,IAAI,CAACC,KAAL,CAAW,KAAKhM,KAAL,CAAWwD,KAAX,CAAiBD,MAAjB,GAA0B,CAArC,CAAd,CADyB,CAEzB;;AACA,aAAKH,QAAL,CAAc;AAAC7B,UAAAA,UAAU,EAAEe;AAAb,SAAd;AACA,aAAKc,QAAL,CAAc;AACZzB,UAAAA,oBAAoB,EAAE,IADV;AAEZC,UAAAA,iBAAiB,EAAE,KAFP;AAGZC,UAAAA,kBAAkB,EAAE,KAHR;AAIZC,UAAAA,eAAe,EAAE;AAJL,SAAd,EAKG,MAAM;AACP,cAAI,KAAK6B,MAAL,CAAYJ,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,iBAAKH,QAAL,CAAc;AAAC1B,cAAAA,qBAAqB,EAAE;AAAxB,aAAd,EAA6C,MAAM;AACjD6M,cAAAA,UAAU,CAAC,MAAM;AACf,qBAAKlD,cAAL;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD;AAKD,WAND,MAMO;AACL,iBAAK2C,sBAAL;AACD;AACF,SAfD;AAgBD;AACF,KAr2CkB;;AAAA,SAu2CnBQ,WAv2CmB,GAu2CL,MAAM;AAClB,YAAM3M,kBAAkB,GAAG,KAAK5B,KAAL,CAAW4B,kBAAtC;;AACA,UAAI,CAACA,kBAAL,EAAyB;AACvB,aAAKuB,QAAL,CAAc;AACZzB,UAAAA,oBAAoB,EAAE,KADV;AAEZE,UAAAA,kBAAkB,EAAE,IAFR;AAGZD,UAAAA,iBAAiB,EAAE,KAHP;AAIZE,UAAAA,eAAe,EAAE;AAJL,SAAd,EAKG,MAAM;AACP,cAAI,KAAK6B,MAAL,CAAYJ,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,iBAAKH,QAAL,CAAc;AAAC1B,cAAAA,qBAAqB,EAAE;AAAxB,aAAd,EAA6C,MAAM;AACjD6M,cAAAA,UAAU,CAAC,MAAM;AACf,qBAAKlD,cAAL;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD;AAKD,WAND,MAMO;AACL,iBAAK4C,oBAAL;AACD;AACF,SAfD;AAgBD;AACF,KA33CkB;;AAAA,SA63CnBQ,UA73CmB,GA63CN,MAAM;AACjB,YAAM7M,iBAAiB,GAAG,KAAK3B,KAAL,CAAW2B,iBAArC;;AACA,UAAI,CAACA,iBAAL,EAAwB;AACtB,aAAKwB,QAAL,CAAc;AACZzB,UAAAA,oBAAoB,EAAE,KADV;AAEZE,UAAAA,kBAAkB,EAAE,KAFR;AAGZD,UAAAA,iBAAiB,EAAE,IAHP;AAIZE,UAAAA,eAAe,EAAE;AAJL,SAAd,EAKG,MAAM;AACP,cAAI,KAAK6B,MAAL,CAAYJ,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,iBAAKH,QAAL,CAAc;AAAC1B,cAAAA,qBAAqB,EAAE;AAAxB,aAAd,EAA6C,MAAM;AACjD6M,cAAAA,UAAU,CAAC,MAAM;AACf,qBAAKlD,cAAL;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD;AAKD,WAND,MAMO;AACL,iBAAK6C,mBAAL;AACD;AACF,SAfD;AAgBD;AACF,KAj5CkB;;AAAA,SAm5CnBQ,QAn5CmB,GAm5CR,MAAM;AACf,YAAM5M,eAAe,GAAG,KAAK7B,KAAL,CAAW6B,eAAnC;;AACA,UAAI,CAACA,eAAL,EAAsB;AACpB,aAAKsB,QAAL,CAAc;AACZzB,UAAAA,oBAAoB,EAAE,KADV;AAEZE,UAAAA,kBAAkB,EAAE,KAFR;AAGZD,UAAAA,iBAAiB,EAAE,KAHP;AAIZE,UAAAA,eAAe,EAAE;AAJL,SAAd,EAKG,MAAM;AACP,cAAI,KAAK6B,MAAL,CAAYJ,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,iBAAKH,QAAL,CAAc;AAAC1B,cAAAA,qBAAqB,EAAE;AAAxB,aAAd,EAA6C,MAAM;AACjD6M,cAAAA,UAAU,CAAC,MAAM;AACf,qBAAKlD,cAAL;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD;AAKD,WAND,MAMO;AACL,iBAAK8C,iBAAL;AACD;AACF,SAfD;AAgBD;AACF,KAv6CkB;;AAAA,SA26CnBQ,uBA36CmB,GA26CO,MAAM;AAC9B,YAAMrM,KAAK,GAAG,CAAd,CAD8B,CAE9B;;AACA,WAAKc,QAAL,CAAc;AAAC7B,QAAAA,UAAU,EAAEe;AAAb,OAAd,EAAmC,MAAM;AACvC,aAAK6B,eAAL,CAAqB7B,KAArB;AACD,OAFD;AAGD,KAj7CkB;;AAAA,SAm7CnBsM,0BAn7CmB,GAm7CU,MAAM;AACjC,UAAItM,KAAK,GAAG,KAAKrC,KAAL,CAAWsB,UAAvB;AACAe,MAAAA,KAAK,GAAGA,KAAK,KAAK,CAAV,GAAc,KAAKrC,KAAL,CAAWuB,QAAX,GAAsB,CAApC,GAAwCc,KAAK,GAAG,CAAxD,CAFiC,CAGjC;;AACA,WAAKc,QAAL,CAAc;AAAC7B,QAAAA,UAAU,EAAEe;AAAb,OAAd,EAAmC,MAAM;AACvC,aAAK6B,eAAL,CAAqB7B,KAArB;AACD,OAFD;AAGD,KA17CkB;;AAAA,SA47CnBuM,sBA57CmB,GA47CM,MAAM;AAC7B,UAAIvM,KAAK,GAAG,KAAKrC,KAAL,CAAWsB,UAAvB;AACAe,MAAAA,KAAK,GAAGA,KAAK,KAAK,KAAKrC,KAAL,CAAWuB,QAAX,GAAsB,CAAhC,GAAoC,CAApC,GAAwCc,KAAK,GAAG,CAAxD,CAF6B,CAG7B;;AACA,WAAKc,QAAL,CAAc;AAAC7B,QAAAA,UAAU,EAAEe;AAAb,OAAd,EAAmC,MAAM;AACvC,aAAK6B,eAAL,CAAqB7B,KAArB;AACD,OAFD;AAGD,KAn8CkB;;AAAA,SAq8CnBwM,sBAr8CmB,GAq8CM,MAAM;AAC7B,YAAMxM,KAAK,GAAG,KAAKrC,KAAL,CAAWuB,QAAX,GAAsB,CAApC,CAD6B,CAE7B;;AACA,WAAK4B,QAAL,CAAc;AAAC7B,QAAAA,UAAU,EAAEe;AAAb,OAAd,EAAmC,MAAM;AACvC,aAAK6B,eAAL,CAAqB7B,KAArB;AACD,OAFD;AAGD,KA38CkB;;AAAA,SA68CnBb,sBA78CmB,GA68CM,MAAM;AAC7B,YAAMsN,SAAS,GAAG,KAAK9O,KAAL,CAAWwB,sBAA7B;AACA,WAAK2B,QAAL,CAAc;AAAC3B,QAAAA,sBAAsB,EAAE,CAACsN;AAA1B,OAAd,EAAoD,MAAM;AACxD,YAAIA,SAAJ,EAAe;AACbC,UAAAA,aAAa,CAAC,KAAKC,cAAN,CAAb;AACD,SAFD,MAEO;AACL,eAAKA,cAAL,GAAsBC,WAAW,CAAC,MAAM;AACtC,iBAAKL,sBAAL;AACD,WAFgC,EAE9B,GAF8B,CAAjC;AAGD;AACF,OARD;AASD,KAx9CkB;;AAAA,SA09CnBM,iBA19CmB,GA09CC,CAACxH,KAAD,EAAQT,KAAR,KAAkB;AACpCtE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BkJ,IAAI,CAACqD,KAAL,CAAWlI,KAAX,CAA7B;AACA,WAAK9D,QAAL,CAAc;AAAC7B,QAAAA,UAAU,EAAEwK,IAAI,CAACqD,KAAL,CAAWlI,KAAX;AAAb,OAAd,EAA+C,MAAM;AACnD,YAAI5E,KAAK,GAAG,KAAKrC,KAAL,CAAWsB,UAAvB;AACA,aAAKvB,KAAL,CAAWgE,iBAAX,CAA6B,KAAKR,KAAL,CAAWlB,KAAX,CAA7B;AACA,aAAK6B,eAAL,CAAqB7B,KAArB;AACD,OAJD;AAKD,KAj+CkB;;AAAA,SAm+CnB+M,aAn+CmB,GAm+CHC,EAAE,IAAI;AACpB,WAAK/F,UAAL,GAAkB+F,EAAlB;AACD,KAr+CkB;;AAEjB,SAAK9L,KAAL,GAAa,EAAb;AACA,SAAKM,IAAL,GAAY,IAAZ;AACA,SAAKC,GAAL,GAAW,IAAX;AAEA,SAAKwF,UAAL,GAAkB,IAAlB;AACA,SAAKgG,OAAL,GAAe,IAAf;AACA,SAAKxG,KAAL,GAAa,IAAb;AAEA,SAAKvE,OAAL,GAAe,EAAf;AACA,SAAKd,QAAL,GAAgB,EAAhB;AAEA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKkF,aAAL,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB;AAEA,SAAK2G,QAAL,GAAgB3Z,KAAK,CAAC4Z,SAAN,EAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKC,YAAL,GAAoB/Z,KAAK,CAAC4Z,SAAN,EAApB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKG,UAAL,GAAkBja,KAAK,CAAC4Z,SAAN,EAAlB;AACA,SAAKM,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AAEA,SAAK1I,YAAL,GAAoBpR,KAAK,CAAC4Z,SAAN,EAApB;AAEA,SAAKhN,gBAAL,GAAwB,EAAxB;AACA,SAAKQ,YAAL,GAAoB,EAApB;;AACA,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,WAAKX,YAAL,CAAkB6G,IAAlB,CAAuB,KAAKzH,YAAL,CAAkBuB,CAAlB,EAAqB,MAArB,CAAvB;AACD;;AAED,SAAKd,0BAAL,GAAkC,EAAlC;AACA,SAAKV,sBAAL,GAA8B,EAA9B;AACD;;AA0FDsN,EAAAA,YAAY,GAAG;AACb,SAAK1P,KAAL,CAAWgQ,WAAX,CAAuB,KAAvB;AACA,SAAKR,QAAL,CAAc1C,OAAd,CAAsBmD,KAAtB;AACD;;AA+GDF,EAAAA,cAAc,GAAG;AACf,SAAKD,UAAL,CAAgBhD,OAAhB,CAAwBmD,KAAxB;AACD;;AAEDJ,EAAAA,gBAAgB,GAAG;AACjB,SAAKD,YAAL,CAAkB9C,OAAlB,CAA0BmD,KAA1B;AACD;;AAEDC,EAAAA,gBAAgB,CAAC1M,KAAD,EAAQ;AACtBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCW,KAAlC;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACD,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC,WAAKJ,KAAL,CAAWsG,IAAX,CAAgBtG,KAAK,CAACI,CAAD,CAArB;AACD;;AAED,QAAIuM,gBAAgB,GAAG,EAAvB;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,SAAKhO,sBAAL,GAA8B,EAA9B;AACA,QAAIiO,aAAa,GAAG,CAApB;;AACA,SAAK,IAAIzM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACD,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AAErC,UAAIJ,KAAK,CAACI,CAAD,CAAL,KAAaC,SAAjB,EAA4B;AAE1B,YAAI0L,OAAO,GAAGnT,0BAA0B,CAACkU,OAA3B,CAAmCC,WAAnC,CAA+CC,GAA/C,CAAmDhN,KAAK,CAACI,CAAD,CAAxD,CAAd;AAEAvH,QAAAA,WAAW,CAACoU,iBAAZ,CAA8BlB,OAA9B,EAAuCmB,IAAvC,CAA4C3H,KAAK,IAAI;AAEnD,cAAI4H,qBAAqB,GAAG5H,KAAK,CAAC8B,IAAN,CAAWC,MAAX,CAAkB,WAAlB,CAA5B,CAFmD,CAInD;;AACA,cAAI,CAACqF,gBAAgB,CAACS,QAAjB,CAA0BD,qBAA1B,CAAL,EAAuD;AACrDR,YAAAA,gBAAgB,CAACrG,IAAjB,CAAsB6G,qBAAtB;;AACAP,YAAAA,YAAY,CAACtG,IAAb,CAAkB;AAChBM,cAAAA,YAAY,EAAEuG,qBADE;AAEhBE,cAAAA,MAAM,EAAE,CAAC9H,KAAD,CAFQ;AAGhBvF,cAAAA,KAAK,EAAE,CAACA,KAAK,CAACI,CAAD,CAAN;AAHS,aAAlB;;AAMA,iBAAKxB,sBAAL,CAA4B0H,IAA5B,CACE,KAAKzH,YAAL,CAAkBgO,aAAlB,EAAiC,MAAjC,CADF;AAIA,gBAAIS,MAAM,GAAGtN,KAAK,CAACI,CAAD,CAAL,CAASmF,KAAtB;AACA,gBAAIO,OAAO,GAAGyH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAd;AACA3U,YAAAA,WAAW,CAAC4U,MAAZ,CAAmB3H,OAAnB;AACAjN,YAAAA,WAAW,CAAC6U,YAAZ,CAAyB5H,OAAzB,EAAkCwH,MAAlC;AAEAT,YAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACD,WAlBD,MAkBO;AACLD,YAAAA,YAAY,CAACe,OAAb,CAAqBC,EAAE,IAAI;AACzB,kBAAIA,EAAE,CAAChH,YAAH,KAAoBuG,qBAAxB,EAA+C;AAC7CS,gBAAAA,EAAE,CAACP,MAAH,CAAU/G,IAAV,CAAef,KAAf;AACAqI,gBAAAA,EAAE,CAAC5N,KAAH,CAASsG,IAAT,CAActG,KAAK,CAACI,CAAD,CAAnB;AACD;AACF,aALD;AAMD;AAEF,SAhCD;AAiCD;AACF,KAlDqB,CAoDtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAKH,YAAL,CAAkB,CAAlB,EAAqB,CAArB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,MAAL,GAAc,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACE,IAAI,KAAKnB,gBAAL,CAAsBmB,CAAtB,MAA6BC,SAAjC,EAA4C,CAC1C;AACD;;AACH,SAAKT,QAAL,CAAc;AACZjB,MAAAA,WAAW,EAAEiO,YADD;AAEZhO,MAAAA,sBAAsB,EAAE,KAAKA,sBAFjB;AAGZb,MAAAA,UAAU,EAAE,CAHA;AAIZC,MAAAA,QAAQ,EAAE,CAJE;AAKZG,MAAAA,oBAAoB,EAAE,KALV;AAMZC,MAAAA,iBAAiB,EAAE,KANP;AAOZC,MAAAA,kBAAkB,EAAE,KAPR;AAQZC,MAAAA,eAAe,EAAE;AARL,KAAd,EASG,MAAM;AACP,WAAKsB,QAAL,CAAc;AAAC/B,QAAAA,2BAA2B,EAAE;AAA9B,OAAd;AACD,KAXD;AAYD;;AAEDgQ,EAAAA,kBAAkB,CAAC7N,KAAD,EAAQ;AACxB,SAAKJ,QAAL,CAAc;AAACnC,MAAAA,eAAe,EAAE;AAAlB,KAAd,EAAwC,MAAM;AAC5C,UAAI6D,QAAQ,GAAG,IAAf;AACA,UAAIwM,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAI1N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACD,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC,YAAIJ,KAAK,CAACI,CAAD,CAAL,CAAS8G,kBAAT,CAA4BkG,QAA5B,CAAqC,UAArC,CAAJ,EAAsD;AACpD9L,UAAAA,QAAQ,GAAGtB,KAAK,CAACI,CAAD,CAAhB;AACD,SAFD,MAEO;AACL0N,UAAAA,SAAS,CAACxH,IAAV,CAAetG,KAAK,CAACI,CAAD,CAApB;AACD;AACF;;AACD,UAAIkB,QAAQ,KAAK,IAAjB,EAAuB;AACrB,aAAK9E,KAAL,CAAW4E,gBAAX,CAA4B;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,QAAQ,EAAEA,QAA5B;AAAsCtB,UAAAA,KAAK,EAAE8N;AAA7C,SAA5B;AACA,aAAKvM,cAAL;AACD;AACF,KAdD;AAeD;;AAODwM,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACAtM,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;AAknCDsM,EAAAA,MAAM,GAAG;AACP;AADO,UAGAhH,OAHA,GAGW,KAAKxK,KAHhB,CAGAwK,OAHA;AAKP,UAAMiH,YAAY,GAAG;AAACC,MAAAA,OAAO,EAAElH,OAAO,CAAC5K;AAAlB,KAArB;AACA,UAAM+R,QAAQ,GAAG,QAAjB;AAEA,UAAMlH,MAAM,GAAG,KAAKzK,KAAL,CAAWyK,MAAX,CAAkB,KAAKzK,KAAL,CAAWzH,cAA7B,CAAf;AACA,UAAMqZ,UAAU,GAAG,KAAK5R,KAAL,CAAW8E,QAAX,KAAwB,IAA3C;AACA,UAAM+M,eAAe,GAAG,KAAK7R,KAAL,CAAWwD,KAAX,KAAqB,IAArB,GAA4B,KAA5B,GAAoC,KAAKxD,KAAL,CAAWwD,KAAX,CAAiBD,MAAjB,GAA0B,CAAtF;AAEA,UAAMpD,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA5B;AACA,UAAMC,aAAa,GAAG,KAAKH,KAAL,CAAWG,aAAjC,CAbO,CAcP;;AACA,UAAME,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAX,IAAsBuR,eAAtB,IAAyC,KAAKnO,QAAL,KAAkB,EAA3E,CAfO,CAgBP;;AACA,UAAMjD,aAAa,GAAG,KAAKR,KAAL,CAAWQ,aAAjC;AACA,UAAMC,eAAe,GAAG,KAAKT,KAAL,CAAWS,eAAnC;AACA,UAAMM,YAAY,GAAG,KAAKf,KAAL,CAAWe,YAAhC;AACA,UAAMF,cAAc,GAAG,KAAKb,KAAL,CAAWa,cAAlC;AACA,UAAMD,cAAc,GAAG,KAAKZ,KAAL,CAAWY,cAAlC;AACA,UAAMI,eAAe,GAAG,KAAKhB,KAAL,CAAWgB,eAAnC;AACA,UAAMC,kBAAkB,GAAG,KAAKjB,KAAL,CAAWiB,kBAAtC;AACA,UAAMH,sBAAsB,GAAG,KAAKd,KAAL,CAAWc,sBAA1C;AACA,UAAMI,oBAAoB,GAAG,KAAKlB,KAAL,CAAWkB,oBAAxC;AACA,UAAMC,qBAAqB,GAAG,KAAKnB,KAAL,CAAWmB,qBAAzC;AACA,UAAMC,2BAA2B,GAAG,KAAKpB,KAAL,CAAWoB,2BAA/C,CA3BO,CA4BP;;AACA,UAAMK,qBAAqB,GAAG,KAAKzB,KAAL,CAAWyB,qBAAzC;AACA,UAAMC,oBAAoB,GAAG,KAAK1B,KAAL,CAAW0B,oBAAxC;AACA,UAAMC,iBAAiB,GAAG,KAAK3B,KAAL,CAAW2B,iBAArC;AACA,UAAMC,kBAAkB,GAAG,KAAK5B,KAAL,CAAW4B,kBAAtC;AACA,UAAMC,eAAe,GAAG,KAAK7B,KAAL,CAAW6B,eAAnC;AAEA,QAAIgQ,aAAa,GAAG,KAAK7R,KAAL,CAAWqB,SAAX,KAAyB,CAAzB,GAA6B,SAA7B,GAAyC,SAA7D;AAEA,UAAM4H,SAAS,GAAG,KAAKhG,kBAAL,EAAlB,CArCO,CAuCP;;AAEA,UAAMnB,QAAQ,GAAG,KAAK9B,KAAL,CAAW8B,QAA5B;AACA,UAAMC,WAAW,GAAG,KAAK/B,KAAL,CAAW+B,WAA/B;AACA,UAAMC,iBAAiB,GAAG,KAAKhC,KAAL,CAAWgC,iBAArC;AACA,UAAMC,aAAa,GAAG,KAAKjC,KAAL,CAAWiC,aAAjC;AACA,UAAMhC,cAAc,GAAG,KAAKD,KAAL,CAAWC,cAAlC,CA7CO,CA8CP;;AAEA,QAAIiC,WAAW,GAAG,KAAKlC,KAAL,CAAWkC,WAA7B;AACA,QAAI4P,eAAe,GAAG,EAAtB;;AACA,QAAI5P,WAAW,KAAK,IAApB,EAA0B;AAExBA,MAAAA,WAAW,CAACgP,OAAZ,CAAoB,CAACC,EAAD,EAAI9O,KAAJ,KAAc;AAEhCyP,QAAAA,eAAe,CAACjI,IAAhB,CACE,oBAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,KAAK,EAAE;AAAChL,YAAAA,KAAK,EAAE;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,KAAK,EAAE;AACV+K,YAAAA,MAAM,EAAE,gBADE;AAEV/K,YAAAA,KAAK,EAAE,MAFG;AAGVmL,YAAAA,MAAM,EAAE,OAHE;AAIVE,YAAAA,SAAS,EAAE;AAJD,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AACE,UAAA,EAAE,EAAE,MADN;AAEE,UAAA,KAAK,EAAE;AAACrL,YAAAA,KAAK,EAAE,MAAR;AACLmL,YAAAA,MAAM,EAAE,MADH;AAELrM,YAAAA,QAAQ,EAAE;AAFL,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF,EAeE;AACE,UAAA,KAAK,EAAE;AAAC+B,YAAAA,OAAO,EAAE,CAAV;AAAapB,YAAAA,MAAM,EAAE;AAArB,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAGkB6S,EAAE,CAAChH,YAHrB,CAfF,CADF,CADF;AAyBD,OA3BD;AA6BD,KAjFM,CAmFP;AACA;AACA;;;AAEA,UAAM4H,WAAW,GAAIrK,KAAD,IAAW;AAC7B,WAAKvE,QAAL,CAAc;AAAClD,QAAAA,cAAc,EAAEyH,KAAK,CAACC;AAAvB,OAAd;AACD,KAFD;;AAIA,UAAMqK,WAAW,GAAG,MAAM;AACxB,WAAK7O,QAAL,CAAc;AAAClD,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACD,KAFD;;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEsK,OAAO,CAAC7M,MAA3B;AAAmC,MAAA,QAAQ,EAAC,QAA5C;AAAqD,MAAA,SAAS,EAAE,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAE6M,OAAO,CAAClN,UAFrB;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,oBAAW,MAJb;AAKE,MAAA,OAAO,EAAE,KAAK6H,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAExJ,WAAZ;AAAyB,MAAA,IAAI,EAAEgW,QAA/B;AAAyC,MAAA,KAAK,EAAElV,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,EAUE,oBAAC,OAAD;AACE,MAAA,WAAW,EAAE,UADf;AAEE,MAAA,KAAK,EAAE;AAACY,QAAAA,OAAO,EAAE,WAAV;AAAuBP,QAAAA,eAAe,EAAE;AAAxC,OAFT;AAGE,MAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAgBE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,cAAhB;AAAgC,MAAA,KAAK,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKqG,iBAAL,EAFjB;AAGE,MAAA,KAAK,EAAE;AAACtE,QAAAA,UAAU,EAAE;AAAb,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAExE,cAAZ;AAA4B,MAAA,IAAI,EAAEsX,QAAlC;AAA4C,MAAA,KAAK,EAAElV,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CAhBF,EAyBE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAhB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAGkL,KAAD,IAAW,KAAKc,cAAL,CAAoBd,KAApB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAElN,iBAAZ;AAA+B,MAAA,IAAI,EAAEkX,QAArC;AAA+C,MAAA,KAAK,EAAElV,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG0D,QAAQ,GAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAmB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF9B,CADF,CAzBF,EA+BE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAEA,QADR;AAEE,MAAA,QAAQ,EAAE4B,QAFZ;AAGE,MAAA,IAAI,EAAE8B,SAHR;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,aAAa,MALf;AAME,MAAA,KAAK,EAAE;AAAC/G,QAAAA,eAAe,EAAE;AAAlB,OANT;AAOE,MAAA,SAAS,EAAE,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,CAAC;AAACoV,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,KAAD,KACC,oBAAC,IAAD,oBACMD,eADN;AAEE,MAAA,KAAK,EAAE;AAACE,QAAAA,eAAe,EAAED,SAAS,KAAK,QAAd,GAAyB,YAAzB,GAAwC;AAA1D,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAACrV,QAAAA,eAAe,EAAE,SAAlB;AAA6BuV,QAAAA,YAAY,EAAE;AAA3C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAG1K,KAAD,IAAW,KAAKc,cAAL,CAAoBd,KAApB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,aAAa,EAAExH,QADjB;AAEE,MAAA,KAAK,EAAE;AAACR,QAAAA,OAAO,EAAE;AAAV,OAFT;AAGE,MAAA,EAAE,EAAC,gBAHL;AAIE,MAAA,SAAS,EAAGgI,KAAD,IAAW,KAAKc,cAAL,CAAoBd,KAApB,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAM,KAAK+H,YAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAElV,SAAZ;AAAuB,MAAA,IAAI,EAAE,QAA7B;AAAuC,MAAA,KAAK,EAAEiC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADF,EAEE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAEgV,YADX;AAEE,MAAA,OAAO,EACL,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAE;AACL5R,UAAAA,QAAQ,EAAE,QADL;AAELhB,UAAAA,UAAU,EAAE;AAFP,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPF,EAoBE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAM,KAAKiI,WAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEtL,MAAZ;AAAoB,MAAA,IAAI,EAAE,QAA1B;AAAoC,MAAA,KAAK,EAAEiB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADF,EAEE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAEgV,YADX;AAEE,MAAA,OAAO,EACL,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAE;AAAC5R,UAAAA,QAAQ,EAAE,QAAX;AAAqBhB,UAAAA,UAAU,EAAE;AAAjC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,EA8BGzF,mBAAmB,MAAM,CAACnB,QAA1B,GACC,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAM,KAAK8X,cAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE/U,aAAZ;AAA2B,MAAA,IAAI,EAAE,QAAjC;AAA2C,MAAA,KAAK,EAAEyB,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADF,EAEE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAEgV,YADX;AAEE,MAAA,OAAO,EACL,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAE;AACL5R,UAAAA,QAAQ,EAAE,QADL;AAELhB,UAAAA,UAAU,EAAE;AAFP,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,GAcG,IA5CN,EA6CGzF,mBAAmB,MAAM,CAACnB,QAA1B,GACC,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAM,KAAK4X,gBAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE7U,aAAZ;AAA2B,MAAA,IAAI,EAAE,QAAjC;AAA2C,MAAA,KAAK,EAAEyB,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADF,EAEE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAEgV,YADX;AAEE,MAAA,OAAO,EACL,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAE;AACL5R,UAAAA,QAAQ,EAAE,QADL;AAELhB,UAAAA,UAAU,EAAE;AAFP,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,GAeG,IA5DN,CADF,CAHF,CAJF,CAVJ,CA/BF,EAqHE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,WAAhB;AAA6B,MAAA,KAAK,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK0I,KAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAErN,SAAZ;AAAuB,MAAA,IAAI,EAAEyX,QAA7B;AAAuC,MAAA,KAAK,EAAElV,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CArHF,EA0HE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,QAAhB;AAA0B,MAAA,KAAK,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAEuV,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAErX,sBAAZ;AAAoC,MAAA,IAAI,EAAEgX,QAA1C;AAAoD,MAAA,KAAK,EAAElV,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CA1HF,EA+HE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE6V,OAAO,CAACpS,cAAD,CADf;AAEE,MAAA,QAAQ,EAAEA,cAFZ;AAGE,MAAA,IAAI,EAAE2D,SAHR;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,aAAa,MALf;AAME,MAAA,KAAK,EAAE;AAAC/G,QAAAA,eAAe,EAAE,SAAlB;AAA6BqN,QAAAA,SAAS,EAAE;AAAxC,OANT;AAOE,MAAA,SAAS,EAAE,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,CAAC;AAAC+H,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,KAAD,KACC,oBAAC,IAAD,oBACMD,eADN;AAEE,MAAA,KAAK,EAAE;AAACE,QAAAA,eAAe,EAAED,SAAS,KAAK,QAAd,GAAyB,YAAzB,GAAwC;AAA1D,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AACLrV,QAAAA,eAAe,EAAE,SADZ;AAELuV,QAAAA,YAAY,EAAE;AAFT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAEJ,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAE,KAAKjS,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,IAAuB,CAD9B;AAEE,MAAA,GAAG,EAAE,KAAKhI,KAAL,CAAWgI,MAAX,CAAkB,CAAlB,IAAuB,CAF9B;AAGE,MAAA,QAAQ,EAAE,KAAKvE,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CAJF,CAVJ,CA/HF,EAgKE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,UAAhB;AAA4B,MAAA,KAAK,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK+C,YAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEpL,WAAZ;AAAyB,MAAA,IAAI,EAAEuW,QAA/B;AAAyC,MAAA,KAAK,EAAElV,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAhKF,EAsKE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,UAApB;AAA+B,MAAA,SAAS,EAAE+N,OAAO,CAAC/M,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,WACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADzB,UAtKF,EA8KG,CAACgN,MAAD,IAAW,CAACmH,UAAZ,GACC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKrL,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE1L,qBAAZ;AAAmC,MAAA,IAAI,EAAE8W,QAAzC;AAAmD,MAAA,KAAK,EAAElV,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAIG,IAlLN,EAoLGC,QAAQ,KAAK,IAAb,IAAqB,KAAKsD,KAAL,CAAWqI,IAAX,KAAoB,IAAzC,IAAiDoC,MAAjD,GACC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKlC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE7L,QAAZ;AAAsB,MAAA,IAAI,EAAEiV,QAA5B;AAAsC,MAAA,KAAK,EAAEG,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAIG,IAxLN,EA0LGrH,MAAM,IAAIvB,SAAS,CAACqJ,cAAV,GAA2B,CAArC,IAA0C9H,MAA1C,GACC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKnD,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE/L,QAAZ;AAAsB,MAAA,IAAI,EAAEoW,QAA5B;AAAsC,MAAA,KAAK,EAAElV,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAIG,IA9LN,EAgMGgO,MAAM,GACL,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKrD,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEnM,UAAZ;AAAwB,MAAA,IAAI,EAAE0W,QAA9B;AAAwC,MAAA,KAAK,EAAElV,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,GAIH,IApMN,EAsMGgO,MAAM,GACL,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAKpD,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE1N,SAAZ;AAAuB,MAAA,IAAI,EAAEgY,QAA7B;AAAuC,MAAA,KAAK,EAAElV,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,GAIH,IA1MN,EA4MGgO,MAAM,GACL,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAK/E,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAErK,UAAZ;AAAwB,MAAA,IAAI,EAAEsW,QAA9B;AAAwC,MAAA,KAAK,EAAElV,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,GAIH,IAhNN,EAkNGgO,MAAM,GACL,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAK7E,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAErL,UAAZ;AAAwB,MAAA,IAAI,EAAEoX,QAA9B;AAAwC,MAAA,KAAK,EAAElV,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,GAIH,IAtNN,EAwNGgO,MAAM,IAAIvB,SAAS,CAACM,OAApB,GACC,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAKhE,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAElL,eAAZ;AAA6B,MAAA,IAAI,EAAEqX,QAAnC;AAA6C,MAAA,KAAK,EAAElV,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAIG,IA5NN,EA8NGmV,UAAU,GACT,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAK7M,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE/J,aAAZ;AAA2B,MAAA,IAAI,EAAE2W,QAAjC;AAA2C,MAAA,KAAK,EAAElV,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADS,GAIP,IAlON,EAoOGgO,MAAM,GACL,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAKtH,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE9I,cAAZ;AAA4B,MAAA,IAAI,EAAEsX,QAAlC;AAA4C,MAAA,KAAK,EAAElV,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADK,GAIH,IAxON,CADF,CADF,EA+OE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE+N,OAAO,CAAClM,WAAzB;AAAsC,MAAA,QAAQ,EAAC,OAA/C;AAAuD,MAAA,SAAS,EAAE,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,OAAjB;AAAyB,MAAA,KAAK,EAAE;AAACkU,QAAAA,cAAc,EAAE;AAAjB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,WAAhB;AAA6B,MAAA,SAAS,EAAE,KAAxC;AAA+C,MAAA,KAAK,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK9M,aAAL,EAAlC;AAAwD,MAAA,QAAQ,EAAE,CAAC+E,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE7Q,iBAAZ;AAA+B,MAAA,IAAI,EAAE+X,QAArC;AAA+C,MAAA,KAAK,EAAElV,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFF,EAQE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAhB;AAAuB,MAAA,SAAS,EAAE,KAAlC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAGkL,KAAD,IAAW,KAAKiB,SAAL,CAAejB,KAAf,CAAvC;AACY,MAAA,QAAQ,EAAE,CAAC8C,MAAD,IAAW,CAACoH,eAAZ,IAA+B,KAAKnO,QAAL,KAAkB,EADvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEhK,YAAZ;AAA0B,MAAA,IAAI,EAAEiY,QAAhC;AAA0C,MAAA,KAAK,EAAElV,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG6D,OAAO,GAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAmB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH7B,CADF,CARF,EAgBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAEA,OADR;AAEE,MAAA,QAAQ,EAAE0B,WAFZ;AAGE,MAAA,IAAI,EAAE6B,SAHR;AAGmB,MAAA,UAAU,MAH7B;AAG8B,MAAA,aAAa,MAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,CAAC;AAACqO,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,KAAD,KACC,oBAAC,IAAD,oBACMD,eADN;AAEE,MAAA,KAAK,EAAE;AAACE,QAAAA,eAAe,EAAED,SAAS,KAAK,QAAd,GAAyB,YAAzB,GAAwC;AAA1D,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAE,MAAM,KAAKvJ,SAAL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,IAAjB;AAAuB,MAAA,SAAS,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAC6J,QAAAA,WAAW,EAAE;AAAd,OAAxB;AAA2C,MAAA,OAAO,EAAE,MAAM,KAAKnE,aAAL,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG3M,oBAAoB,GACnB,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAC9C,QAAAA,UAAU,EAAE;AAAb,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEhF,QADR;AAEE,MAAA,IAAI,EAAE,QAFR;AAGE,MAAA,KAAK,EAAE4C,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADmB,GAKsB,IAN7C,EAOE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEkF,oBAAoB,GAAG;AAAC9C,QAAAA,UAAU,EAAE;AAAb,OAAH,GAA0B;AAACA,QAAAA,UAAU,EAAE;AAAb,OADvD;AAEE,MAAA,OAAO,EAAE4S,YAFX;AAGE,MAAA,OAAO,EACL,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAE;AAAC5R,UAAAA,QAAQ,EAAE,QAAX;AAAqBhB,UAAAA,UAAU,EAAE;AAAjC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,EAiBE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAC4T,QAAAA,WAAW,EAAE;AAAd,OAAxB;AAA2C,MAAA,OAAO,EAAE,MAAM,KAAKhE,UAAL,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG7M,iBAAiB,GAChB,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAC/C,QAAAA,UAAU,EAAE;AAAb,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEhF,QAAZ;AAAsB,MAAA,IAAI,EAAE,QAA5B;AACM,MAAA,KAAK,EAAE4C,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CADgB,GAEuE,IAH3F,EAIE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEmF,iBAAiB,GAAG;AAAC/C,QAAAA,UAAU,EAAE;AAAb,OAAH,GAA0B;AAACA,QAAAA,UAAU,EAAE;AAAb,OADpD;AAEE,MAAA,OAAO,EAAE4S,YAFX;AAGE,MAAA,OAAO,EACL,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,KAAK,EAAE;AAAC5R,UAAAA,QAAQ,EAAE,QAAX;AAAqBhB,UAAAA,UAAU,EAAE;AAAjC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAjBF,EA8BE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAC4T,QAAAA,WAAW,EAAE;AAAd,OAAxB;AAA2C,MAAA,OAAO,EAAE,MAAM,KAAKjE,WAAL,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG3M,kBAAkB,GACjB,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAChD,QAAAA,UAAU,EAAE;AAAb,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEhF,QAAZ;AAAsB,MAAA,IAAI,EAAE,QAA5B;AACM,MAAA,KAAK,EAAE4C,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CADiB,GAEsE,IAH3F,EAIE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEoF,kBAAkB,GAAG;AAAChD,QAAAA,UAAU,EAAE;AAAb,OAAH,GAA0B;AAACA,QAAAA,UAAU,EAAE;AAAb,OADrD;AAEE,MAAA,OAAO,EAAE4S,YAFX;AAGE,MAAA,OAAO,EACL,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,OAAjB;AACY,QAAA,KAAK,EAAE;AAAC5R,UAAAA,QAAQ,EAAE,QAAX;AAAqBhB,UAAAA,UAAU,EAAE;AAAjC,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CA9BF,EA0CE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAAC4T,QAAAA,WAAW,EAAE;AAAd,OAAxB;AAA2C,MAAA,OAAO,EAAE,MAAM,KAAK/D,QAAL,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG5M,eAAe,GACd,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAACjD,QAAAA,UAAU,EAAE;AAAb,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEhF,QAAZ;AAAsB,MAAA,IAAI,EAAE,QAA5B;AACM,MAAA,KAAK,EAAE4C,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,CADc,GAEyE,IAH3F,EAIE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEqF,eAAe,GAAG;AAACjD,QAAAA,UAAU,EAAE;AAAb,OAAH,GAA0B;AAACA,QAAAA,UAAU,EAAE;AAAb,OADlD;AAEE,MAAA,OAAO,EAAE4S,YAFX;AAGE,MAAA,OAAO,EACL,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAC,OAAjB;AACY,QAAA,KAAK,EAAE;AAAC5R,UAAAA,QAAQ,EAAE,QAAX;AAAqBhB,UAAAA,UAAU,EAAE;AAAjC,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CA1CF,CADF,CADF,CAJF,CALJ,CAhBF,EAyFE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAhB;AAAwB,MAAA,SAAS,EAAE,KAAnC;AAA0C,MAAA,KAAK,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,OAAO,EAAG8I,KAAD,IAAW,KAAKe,eAAL,CAAqBf,KAArB,CAFtB,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE/M,YAAZ;AAA0B,MAAA,IAAI,EAAE+W,QAAhC;AAA0C,MAAA,KAAK,EAAElV,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMG2D,aAAa,GAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAmB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANnC,CADF,CAzFF,EAqHE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAEkS,OAAO,CAACrQ,iBAAD,CADf;AAEE,MAAA,QAAQ,EAAEA,iBAFZ;AAGE,MAAA,IAAI,EAAE4B,SAHR;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,KAAK,EAAE;AAAC/G,QAAAA,eAAe,EAAE;AAAlB,OALT;AAME,MAAA,SAAS,EAAE,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,CAAC;AAACoV,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,KAAD,KACC,oBAAC,IAAD,oBACMD,eADN;AAEE,MAAA,KAAK,EAAE;AAACE,QAAAA,eAAe,EAAED,SAAS,KAAK,QAAd,GAAyB,YAAzB,GAAwC;AAA1D,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACrV,QAAAA,eAAe,EAAE;AAAlB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAG6K,KAAD,IAAW,KAAKe,eAAL,CAAqBf,KAArB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,IAAjB;AAAuB,MAAA,SAAS,EAAC,KAAjC;AAAuC,MAAA,KAAK,EAAE;AAAChI,QAAAA,OAAO,EAAE;AAAV,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAM,KAAKyI,WAAL,CAAiB,QAAjB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEtN,eAAZ;AAA6B,MAAA,IAAI,EAAE6W,QAAnC;AAA6C,MAAA,KAAK,EAAElV,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADF,EAEE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEgV,YAAvB;AAAqC,MAAA,OAAO,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CADF,CAJF,CATJ,CArHF,EAgJE,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAC,UAArB;AAAgC,MAAA,KAAK,EAAE;AAACpU,QAAAA,OAAO,EAAE,WAAV;AAAuBP,QAAAA,eAAe,EAAE;AAAxC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhJF,EAkJE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,SAAhB;AAA2B,MAAA,SAAS,EAAE,KAAtC;AAA6C,MAAA,KAAK,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAKsL,WAAL,CAAiB,QAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEzQ,gBAAZ;AAA8B,MAAA,IAAI,EAAE2X,QAApC;AAA8C,MAAA,KAAK,EAAElV,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAlJF,EAwJE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,OAAhB;AAAyB,MAAA,SAAS,EAAE,KAApC;AAA2C,MAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,MAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEhR,WAAZ;AAAyB,MAAA,IAAI,EAAEkY,QAA/B;AAAyC,MAAA,KAAK,EAAElV,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAxJF,EA8JE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAhB;AAAuB,MAAA,SAAS,EAAE,KAAlC;AAAyC,MAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,KAAjB,CAAlC;AAA2D,MAAA,QAAQ,EAAE,CAACqC,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAExQ,gBAAZ;AAA8B,MAAA,IAAI,EAAE0X,QAApC;AAA8C,MAAA,KAAK,EAAElV,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CA9JF,EAmKE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,MAAhB;AAAwB,MAAA,SAAS,EAAE,KAAnC;AAA0C,MAAA,KAAK,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,MAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE1P,UAAZ;AAAwB,MAAA,IAAI,EAAE4W,QAA9B;AAAwC,MAAA,KAAK,EAAElV,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAnKF,EAyKE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,SAAhB;AAA2B,MAAA,SAAS,EAAE,KAAtC;AAA6C,MAAA,KAAK,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,SAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE3Q,uBAAZ;AAAqC,MAAA,IAAI,EAAE6X,QAA3C;AACM,MAAA,KAAK,EAAElV,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAzKF,EAgLE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,QAAhB;AAA0B,MAAA,SAAS,EAAE,KAArC;AAA4C,MAAA,KAAK,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,QAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEtP,QAAZ;AAAsB,MAAA,IAAI,EAAEwW,QAA5B;AAAsC,MAAA,KAAK,EAAElV,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAhLF,EAsLE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,OAAhB;AAAyB,MAAA,SAAS,EAAE,KAApC;AAA2C,MAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,OAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAErQ,aAAZ;AAA2B,MAAA,IAAI,EAAEuX,QAAjC;AAA2C,MAAA,KAAK,EAAElV,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAtLF,EA4LE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,OAAhB;AAAyB,MAAA,SAAS,EAAE,KAApC;AAA2C,MAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,OAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEjR,aAAZ;AAA2B,MAAA,IAAI,EAAEmY,QAAjC;AAA2C,MAAA,KAAK,EAAElV,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CA5LF,EAkME,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,gBAAhB;AAAkC,MAAA,SAAS,EAAE,KAA7C;AAAoD,MAAA,KAAK,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,eAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEtQ,UAAZ;AAAwB,MAAA,IAAI,EAAEwX,QAA9B;AAAwC,MAAA,KAAK,EAAElV,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAlMF,EAwME,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,eAAhB;AAAiC,MAAA,SAAS,EAAE,KAA5C;AAAmD,MAAA,KAAK,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,cAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEvP,YAAZ;AAA0B,MAAA,IAAI,EAAEyW,QAAhC;AAA0C,MAAA,KAAK,EAAElV,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAxMF,EA8ME,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,cAAhB;AAAgC,MAAA,SAAS,EAAE,KAA3C;AAAkD,MAAA,KAAK,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAmB,MAAA,OAAO,EAAE,MAAM,KAAK2L,WAAL,CAAiB,aAAjB,CAAlC;AACY,MAAA,QAAQ,EAAE,CAACqC,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE/P,UAAZ;AAAwB,MAAA,IAAI,EAAEiX,QAA9B;AAAwC,MAAA,KAAK,EAAElV,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CA9MF,CADF,CA/OF,EAwcE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,IAAI,EAAEyF,aAFR;AAGE,MAAA,KAAK,EAAE;AAACtE,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAHT;AAIE,MAAA,OAAO,EAAE,KAAKsH,gBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,SAAS,EAAEqF,OAAO,CAAChL,OAAxB;AAAiC,MAAA,KAAK,EAAE;AAAC2K,QAAAA,SAAS,EAAE;AAAZ,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,OAAO,EAAE,MAAM,KAAKnF,UAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEtJ,kBAAZ;AAAgC,MAAA,IAAI,EAAEiW,QAAtC;AAAgD,MAAA,KAAK,EAAElV,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CADF,EAEE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEgV,YAAvB;AAAqC,MAAA,OAAO,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAQGtP,WAAW,GAAG4P,eAAH,GAAsB;AAAG,MAAA,KAAK,EAAE;AAACpS,QAAAA,OAAO,EAAE,CAAV;AAAajC,QAAAA,SAAS,EAAE;AAAxB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARpC,CADF,CANF,CAxcF,EA6tBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,IAAI,EAAE+C,aAHR;AAIE,MAAA,OAAO,EAAE,KAAK+E,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG/E,aAAa,GAAG,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEyI,SAAxB;AAAmC,MAAA,OAAO,EAAEsB,OAA5C;AAAqD,MAAA,KAAK,EAAE/N,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA8E,IAN9F,CA7tBF,EAsuBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,IAAI,EAAEqE,cAHR;AAIE,MAAA,OAAO,EAAE,KAAK8E,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,KAAK,EAAE;AAACuE,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,SAAS,EAAEK,OAAO,CAAC/M,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAIE;AAAK,MAAA,SAAS,EAAE+M,OAAO,CAACtN,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAKyI,WAA1C;AAAuD,MAAA,IAAI,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE5L,qBAAZ;AAAmC,MAAA,IAAI,EAAE4X,QAAzC;AAAmD,MAAA,KAAK,EAAElV,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAQE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAKsJ,YAA1C;AAAwD,MAAA,IAAI,EAAC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEzK,kBAAZ;AAAgC,MAAA,IAAI,EAAEqW,QAAtC;AAAgD,MAAA,KAAK,EAAElV,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgO,MAAM,GAAG,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEvB,SAAzB;AAAoC,MAAA,UAAU,EAAE,KAAKV,UAArD;AAAiE,MAAA,OAAO,EAAEgC,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA0F,IADnG,CAbF,CANF,CAtuBF,EA+vBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,IAAI,EAAE3J,cAHR;AAIE,MAAA,OAAO,EAAE,KAAK6E,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,KAAK,EAAE;AAACyE,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,MAAM,GAAG,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,KAAKJ,WAAL,CAAiBnB,SAAjB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAoD,IAD7D,CADF,CANF,CA/vBF,EA4wBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,MAAM,EAAE5P,uBAAuB,EAFjC;AAGE,MAAA,IAAI,EAAE2H,eAHR;AAIE,MAAA,OAAO,EAAE,KAAK8D,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9D,eAAe,GACd,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKyD,sBAA3B;AAAmD,MAAA,QAAQ,EAAE,KAAKT,mBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc,GAC6E,IAF/F,CADF,CANF,CA5wBF,EA0xBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,MAAM,EAAE5K,iBAAiB,EAF3B;AAGE,MAAA,IAAI,EAAE6H,kBAHR;AAIE,MAAA,OAAO,EAAE,KAAKiC,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjC,kBAAkB,GACjB,oBAAC,IAAD;AACE,MAAA,MAAM,EAAE,KAAK+C,mBADf;AAEE,MAAA,WAAW,EAAE,KAAKE,eAFpB;AAGE,MAAA,4BAA4B,EAAE,KAAK0C,0BAHrC;AAIE,MAAA,cAAc,EAAE,KAAKlC,oBAJvB;AAKE,MAAA,KAAK,EAAElI,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,GAQf,IATN,CADF,CANF,CA1xBF,EA+yBGiE,eAAe,GAAG,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAK+F,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA6C,IA/yB/D,EAizBGzF,YAAY,GAAG,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKuF,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA0C,IAjzBzD,EAmzBGnF,qBAAqB,GAAG,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKuF,kBAA9B;AAAkD,MAAA,GAAG,EAAE,KAAK5C,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAwE,IAnzBhG,EAqzBG1C,2BAA2B,GAC1B,oBAAC,oBAAD;AAAsB,MAAA,OAAO,EAAE,KAAKuF,wBAApC;AAA8D,MAAA,KAAK,EAAE,KAAKpD,KAA1E;AAAiF,MAAA,MAAM,EAAE,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD0B,GAC4E,IAtzB1G,EAwzBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAEzC,sBADR;AAEE,MAAA,OAAO,EAAE,KAAKkF,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,8CAAd,CAJF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKA,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,sBAAtB;AAA8C,MAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CALF,CAxzBF,EAu0BE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE/E,oBADR;AAEE,MAAA,OAAO,EAAE,KAAKiF,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,mEAAd,CAJF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKA,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,oBAAtB;AAA4C,MAAA,SAAS,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CALF,CAv0BF,EAs1BE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKpG,KAAL,CAAWW,cADnB;AAEE,yBAAgB,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,UAArC,CAJF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADF,EAIE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,QAAQ,EAAE8R,KAAK,IAAK,KAAKzL,YAAL,GAAoByL,KAJ1C;AAKE,MAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CALF,EAiBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAK3L,WAAL,CAAiB,KAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,WAAL,CAAiB,IAAjB,CAAvB;AAA+C,MAAA,SAAS,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAjBF,CAt1BF,EAs4BE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZ4L,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAElR,qBALR;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAC,kCAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAt4BF,EAg5BE;AAAK,MAAA,KAAK,EAAE;AAACuI,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,eAAL,EADH,CAh5BF,EAo5BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,KAAK,EAAE;AAACrM,QAAAA,OAAO,EAAE;AAAV,OAHT;AAIE,MAAA,GAAG,EAAE,KAAKmS,QAJZ;AAKE,MAAA,QAAQ,EAAEqD,CAAC,IAAI,KAAKxP,iBAAL,CAAuBwP,CAAC,CAACC,MAAF,CAAStP,KAAhC,CALjB;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAp5BF,EA+5BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,MAAA,KAAK,EAAE;AAACnG,QAAAA,OAAO,EAAE;AAAV,OAHT;AAIE,MAAA,GAAG,EAAE,KAAKuS,YAJZ;AAKE,MAAA,QAAQ,EAAEiD,CAAC,IAAI,KAAKxB,kBAAL,CAAwBwB,CAAC,CAACC,MAAF,CAAStP,KAAjC,CALjB;AAME,MAAA,eAAe,EAAC,EANlB;AAMqB,MAAA,YAAY,EAAC,EANlC;AAMqC,MAAA,SAAS,EAAC,EAN/C;AAMkD,MAAA,QAAQ,MAN1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/5BF,EA06BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,KAAK,EAAE;AAACnG,QAAAA,OAAO,EAAE;AAAV,OAHT;AAIE,MAAA,GAAG,EAAE,KAAKyS,UAJZ;AAKE,MAAA,QAAQ,EAAE+C,CAAC,IAAI,KAAK3C,gBAAL,CAAsB2C,CAAC,CAACC,MAAF,CAAStP,KAA/B,CALjB;AAME,MAAA,eAAe,EAAC,EANlB;AAMqB,MAAA,YAAY,EAAC,EANlC;AAMqC,MAAA,SAAS,EAAC,EAN/C;AAMkD,MAAA,QAAQ,MAN1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA16BF,CADF;AAw7BD;;AAhgF6B;;AAmgFhC,MAAMuP,eAAe,GAAI9S,KAAD,IAAW;AACjC,SAAO;AACL7H,IAAAA,cAAc,EAAE6H,KAAK,CAAC7H,cADjB;AAELoL,IAAAA,KAAK,EAAEvD,KAAK,CAACuD,KAFR;AAGLiH,IAAAA,MAAM,EAAExK,KAAK,CAACwK,MAHT;AAILpC,IAAAA,IAAI,EAAEpI,KAAK,CAACoI,IAJP;AAKL9P,IAAAA,cAAc,EAAE0H,KAAK,CAAC1H,cALjB;AAML6Q,IAAAA,YAAY,EAAEnJ,KAAK,CAACmJ,YANf;AAOLpB,IAAAA,MAAM,EAAE/H,KAAK,CAAC+H,MAPT;AAQLlD,IAAAA,QAAQ,EAAE7E,KAAK,CAAC6E,QARX;AASLkO,IAAAA,YAAY,EAAE/S,KAAK,CAAC+S;AATf,GAAP;AAWD,CAZD;;AAcA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLzL,IAAAA,aAAa,EAAE,MAAMyL,QAAQ,CAAC/a,UAAU,EAAX,CADxB;AAEL6L,IAAAA,iBAAiB,EAAGF,IAAD,IAAUoP,QAAQ,CAAC9a,cAAc,CAAC0L,IAAD,CAAf,CAFhC;AAGLwE,IAAAA,SAAS,EAAGD,IAAD,IAAU6K,QAAQ,CAACxa,OAAO,CAAC2P,IAAD,CAAR,CAHxB;AAIL2H,IAAAA,WAAW,EAAG9I,KAAD,IAAWgM,QAAQ,CAAC7a,SAAS,CAAC6O,KAAD,CAAV,CAJ3B;AAKLmC,IAAAA,YAAY,EAAG8J,GAAD,IAASD,QAAQ,CAAC5a,SAAS,CAAC6a,GAAD,CAAV,CAL1B;AAMLrK,IAAAA,iBAAiB,EAAGxG,KAAD,IAAW4Q,QAAQ,CAAC3a,cAAc,CAAC+J,KAAD,CAAf,CANjC;AAOL6G,IAAAA,qBAAqB,EAAGC,YAAD,IAAkB8J,QAAQ,CAAC1a,kBAAkB,CAAC4Q,YAAD,CAAnB,CAP5C;AAQLjB,IAAAA,cAAc,EAAE,CAACL,GAAD,EAAMC,GAAN,KAAcmL,QAAQ,CAACza,SAAS,CAACqP,GAAD,EAAMC,GAAN,CAAV,CARjC;AASLnD,IAAAA,gBAAgB,EAAGE,QAAD,IAAcoO,QAAQ,CAACva,WAAW,CAACmM,QAAD,CAAZ,CATnC;AAULwB,IAAAA,eAAe,EAAGxC,IAAD,IAAUoP,QAAQ,CAACta,aAAa,CAACkL,IAAD,CAAd,CAV9B;AAWLsP,IAAAA,cAAc,EAAGtP,IAAD,IAAUoP,QAAQ,CAACra,SAAS,CAACiL,IAAD,CAAV,CAX7B;AAYL0D,IAAAA,aAAa,EAAGhE,KAAD,IAAW0P,QAAQ,CAACpa,UAAU,CAAC0K,KAAD,CAAX;AAZ7B,GAAP;AAcD,CAfD;;AAiBA,eAAexN,OAAO,CAAC+c,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cld,UAAU,CAAC4G,MAAD,CAAV,CAAmBmD,GAAnB,CAA7C,CAAf","sourcesContent":["import React, {PureComponent} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\nimport {connect} from 'react-redux'\nimport Dicomdir from './components/Dicomdir'\nimport DicomViewer from './components/DicomViewer'\nimport DicomHeader from './components/DicomHeader'\nimport Measurements from './components/Measurements'\nimport Settings from './components/Settings'\nimport AboutDlg from './components/AboutDlg'\nimport Histogram from './components/Histogram'\nimport LayoutTool from './components/LayoutTool'\nimport FsUI from './components/FsUI'\nimport DownloadZipDlg from './components/DownloadZipDlg'\nimport OpenMultipleFilesDlg from './components/OpenMultipleFilesDlg'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Icon from '@mdi/react'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport TextField from '@material-ui/core/TextField'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n//import { FixedSizeList } from 'react-window'\n//import {List as ListVirtual} from 'react-virtualized'\n\nimport {\n  isMobile,\n  isTablet,\n} from 'react-device-detect'\nimport {\n  clearStore,\n  localFileStore,\n  dcmIsOpen,\n  activeDcm,\n  activeDcmIndex,\n  activeMeasurements,\n  setLayout,\n  dcmTool,\n  setDicomdir,\n  setZippedFile,\n  setVolume,\n  filesStore,\n} from './actions/index'\nimport {\n  //log,\n  getPixelSpacing,\n  getSpacingBetweenSlice,\n  getSliceThickness,\n  getSliceLocation,\n  //getFileNameCorrect,\n  getFileExtReal,\n  isInputDirSupported,\n  getSettingsFsView,\n  getSettingsDicomdirView,\n  getSettingsMprInterpolation,\n} from './functions'\nimport {\n  mdiAngleAcute,\n  mdiArrowAll,\n  mdiAxisArrow,\n  mdiCamera,\n  mdiChartHistogram,\n  mdiCheck,\n  mdiCheckboxIntermediate,\n  mdiContentSaveOutline,\n  mdiCursorDefault,\n  mdiCursorPointer,\n  mdiDelete,\n  mdiEllipse,\n  mdiEyedropper,\n  mdiFileCabinet,\n  mdiFileDocument,\n  mdiFileCad,\n  mdiFolder,\n  mdiFolderMultiple,\n  mdiGesture,\n  mdiViewGridPlusOutline,\n  mdiImageEdit,\n  mdiInformationOutline,\n  mdiInvertColors,\n  mdiMagnify,\n  mdiFolderOpen,\n  mdiRefresh,\n  mdiRectangle,\n  mdiRuler,\n  mdiSettings,\n  mdiToolbox,\n  //mdiTools,\n  mdiTrashCanOutline,\n  mdiVideo,\n  mdiWeb,\n\n  // mdiPlay,\n  // mdiPause,\n  // mdiSkipBackward,\n  // mdiSkipForward,\n  // mdiSkipNext,\n  // mdiSkipPrevious, \n  mdiArrowLeft, mdiArrowLeftCircle, mdiViewList,\n} from '@mdi/js'\n\nimport './App.css'\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import Menu from \"@material-ui/core/Menu\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Card from \"@material-ui/core/Card\";\nimport * as cornerstoneWADOImageLoader from \"cornerstone-wado-image-loader\";\nimport * as cornerstone from \"cornerstone-core\";\n// import * as dicomParser from \"dicom-parser\";\n// import SeriesList from \"./components/SeriesList\";\n\n// log();\n\nlocalStorage.setItem(\"debug\", \"cornerstoneTools\");\n\nconst drawerWidth = 240;\nconst iconColor = '#FFFFFF';\nlet iconTool = null;\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.black,\n    },\n  },\n\n  grow: {\n    flexGrow: 1,\n  },\n\n  root: {\n    display: 'flex',\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n\n  title: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n\n  appBar: {\n    position: 'relative',\n    backgroundColor: '#453479',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  toolbarCard: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: '#453479',\n    position: 'absolute',\n    margin: '0 25% 0 25%',\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    top: 'auto',\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  hide: {\n    display: 'none',\n  },\n\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n\n  // Loads information about the app bar, including app bar height\n  toolbar: theme.mixins.toolbar,\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  listItemText: {\n    fontSize: '0.85em',\n    marginLeft: '-20px'\n  },\n\n});\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.files = [];\n    this.file = null;\n    this.url = null;\n\n    this.dicomImage = null;\n    this.imageId = null;\n    this.image = null;\n\n    this.mprData = {};\n    this.mprPlane = '';\n\n    this.volume = [];\n    this.mprSliceIndex = [0, 0, 0];\n\n    this.fileOpen = React.createRef();\n    this.showFileOpen = this.showFileOpen.bind(this);\n\n    this.openDicomdir = React.createRef();\n    this.showOpenDicomdir = this.showOpenDicomdir.bind(this);\n\n    this.openFolder = React.createRef();\n    this.showOpenFolder = this.showOpenFolder.bind(this);\n\n    this.openUrlField = React.createRef();\n\n    this.dicomViewersRefs = [];\n    this.dicomViewers = [];\n    for (let i = 0; i < 16; i++) {\n      this.dicomViewers.push(this.setDcmViewer(i, 'grid'))\n    }\n\n    this.seriesListDicomViewersRefs = [];\n    this.seriesListDicomViewers = [];\n  }\n\n  state = {\n    anchorElLayout: null,\n    openMenu: false,\n    openImageEdit: false,\n    openTools: false,\n    openMpr: false,\n    openLayout: false,\n    visibleMainMenu: true,\n    visibleHeader: false,\n    visibleSettings: false,\n    visibleToolbar: true,\n    visibleOpenUrl: false,\n    visibleToolbox: false,\n    visibleMeasure: false,\n    visibleClearMeasureDlg: false,\n    visibleAbout: false,\n    visibleDicomdir: false,\n    visibleFileManager: false,\n    visibleZippedFileDlg: false,\n    visibleDownloadZipDlg: false,\n    visibleOpenMultipleFilesDlg: false,\n    toolState: 1,\n    sliceIndex: 0,\n    sliceMax: 1,\n    listOpenFilesScrolling: false,\n    visibleVolumeBuilding: false,\n    visibleMprOrthogonal: false,\n    visibleMprCoronal: false,\n    visibleMprSagittal: false,\n    visibleMprAxial: false,\n\n    anchorEl: null,\n    anchorElMpr: null,\n    anchorElImageEdit: null,\n    visibleSeries: false,\n\n    totalSeries: null,\n    seriesListDicomViewers: [],\n  };\n\n  setDcmViewer = (index, type) => {\n    if (type === 'grid') {\n      return (\n        <DicomViewer\n          dcmRef={(ref) => {\n            this.dicomViewersRefs[index] = ref\n          }}\n          index={index}\n          runTool={ref => (this.runTool = ref)}\n          changeTool={ref => (this.changeTool = ref)}\n        />\n      )\n    } else if (type === 'list') {\n      console.log('listttttttttttt');\n      return (\n        <DicomViewer\n          dcmRef={(ref) => {\n            this.seriesListDicomViewersRefs[index] = ref\n          }}\n          index={index}\n          runTool={ref => (this.runTool = ref)}\n          changeTool={ref => (this.changeTool = ref)}\n          // files={this.state.totalSeries ? this.state.totalSeries[index].files : []}\n        />\n      )\n    }\n  };\n\n  getDcmViewerRef = (index) => {\n    return this.dicomViewersRefs[index]\n  };\n\n  getDcmViewer = (index) => {\n    return this.dicomViewers[index]\n  };\n\n  getActiveDcmViewer = () => {\n    return this.dicomViewersRefs[this.props.activeDcmIndex]\n  };\n\n  toggleFileManager = () => {\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleMainMenu: false, visibleFileManager: !this.state.visibleFileManager})\n    } else {\n      this.setState({visibleFileManager: !this.state.visibleFileManager})\n    }\n  };\n\n  showFileOpen() {\n    this.props.isOpenStore(false);\n    this.fileOpen.current.click()\n  }\n\n  handleOpenLocalFs = (filesSelected) => {\n    //console.log('handleOpenLocalFs: ', filesSelected)\n    if (filesSelected.length > 1) {\n      this.files = filesSelected;\n      this.changeLayout(1, 1);\n      this.mprPlane = '';\n      this.volume = [];\n      for (let i = 0; i < 16; i++)\n        if (this.dicomViewersRefs[i] !== undefined) {\n          // this.dicomViewersRefs[i].runTool('clear')\n        }\n      this.setState({\n        sliceIndex: 0,\n        sliceMax: 1,\n        visibleMprOrthogonal: false,\n        visibleMprCoronal: false,\n        visibleMprSagittal: false,\n        visibleMprAxial: false\n      }, () => {\n        this.setState({visibleOpenMultipleFilesDlg: true})\n      })\n    } else {\n      const file = filesSelected[0];\n      console.log('file: ', file);\n      if (file.type === 'application/x-zip-compressed' || file.type === 'application/zip') {\n        this.file = file;\n        this.url = null;\n        this.setState({visibleZippedFileDlg: true})\n      } else {\n        this.setState({sliceIndex: 0, sliceMax: 1});\n        this.props.setLocalFileStore(file);\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)\n      }\n    }\n  };\n\n  handleOpenSandboxFs = (fsItem) => {\n    //this.hideMainMenu()\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openSandboxFs', fsItem)\n  };\n\n  handleOpenImage = (index) => {\n    //console.log('handleOpenImage : ', index)\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    const visibleMprAxial = this.state.visibleMprAxial;\n    const plane = this.mprPlanePosition();\n    //console.log('plane: ', plane)\n\n    if (visibleMprOrthogonal) {\n      if (this.props.activeDcmIndex === 0) {\n        this.dicomViewersRefs[0].runTool('openimage', index)\n\n      } else if (this.props.activeDcmIndex === 1) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }\n\n      } else if (this.props.activeDcmIndex === 2) {\n        if (plane === 'sagittal') { // then open axial plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else if (plane === 'axial') { // then open coronal plane in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        } else { // plane is coronal, then open axial in second view\n          this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n        }\n      }\n\n    } else if ((plane === 'sagittal' && visibleMprSagittal) ||\n      (plane === 'axial' && visibleMprAxial) ||\n      (plane === 'coronal' && visibleMprCoronal))\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index);\n    else if (plane === 'sagittal' && visibleMprAxial)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'sagittal' && visibleMprCoronal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'axial' && visibleMprSagittal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'axial' && visibleMprCoronal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'coronal' && visibleMprSagittal)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else if (plane === 'coronal' && visibleMprAxial)\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData);\n    else // it's not a possible MPR, then open as normal dicom file  \n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n  };\n\n  /*\n    handleOpenMprXZImage = (index) => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.mprPlanePosition(), index)\n    }\n\n    handleOpenMprYZImage = (index) => {\n      this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.mprPlanePosition(), index)\n    }\n  */\n  handleOpenFileDicomdir = (file) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear');\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openLocalFs', file)\n  };\n\n  showOpenFolder() {\n    this.openFolder.current.click()\n  }\n\n  showOpenDicomdir() {\n    this.openDicomdir.current.click()\n  }\n\n  handleOpenFolder(files) {\n    console.log('handleOpenFolder: ', files);\n    for (let i = 0; i < files.length; i++) {\n      this.files.push(files[i])\n    }\n\n    let seriesNumberList = [];\n    let _totalSeries = [];\n    this.seriesListDicomViewers = [];\n    let seriesCounter = 0;\n    for (let i = 0; i < files.length; i++) {\n\n      if (files[i] !== undefined) {\n\n        let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n\n        cornerstone.loadAndCacheImage(imageId).then(image => {\n\n          let fileImageSeriesNumber = image.data.string('x00200011');\n\n          // if found new series do:\n          if (!seriesNumberList.includes(fileImageSeriesNumber)) {\n            seriesNumberList.push(fileImageSeriesNumber);\n            _totalSeries.push({\n              seriesNumber: fileImageSeriesNumber,\n              images: [image,],\n              files: [files[i],]\n            });\n\n            this.seriesListDicomViewers.push(\n              this.setDcmViewer(seriesCounter, 'list')\n            );\n\n            let image_ = files[i].image;\n            let element = document.getElementById('elem');\n            cornerstone.enable(element);\n            cornerstone.displayImage(element, image_);\n\n            seriesCounter = seriesCounter + 1;\n          } else {\n            _totalSeries.forEach(ts => {\n              if (ts.seriesNumber === fileImageSeriesNumber) {\n                ts.images.push(image);\n                ts.files.push(files[i]);\n              }\n            });\n          }\n\n        });\n      }\n    }\n\n    // console.log(\"LENGTH \" + _totalSeries.length);\n\n    // for (let i = 0; i < files.length; i++) {\n    //   if (files[i] !== undefined) {\n    //     let imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(files[i]);\n    //     cornerstone.loadAndCacheImage(imageId).then(image => {\n    //       let fileImageSeriesNumber = image.data.string('x00200011');\n    //\n    //       if(seriesNumber.includes(fileImageSeriesNumber)){\n    //         _totalSeries.forEach(series => {\n    //           if(series[0].data.string('x00200011') === fileImageSeriesNumber){\n    //             series.push(image);\n    //           }\n    //         });\n    //       }else{\n    //         seriesNumber.push(image.data.string('x00200011'));\n    //\n    //         let newSeries = [];\n    //         newSeries.push(image);\n    //         _totalSeries.push(newSeries);\n    //       }\n    //\n    //     });\n    //   }\n    // }\n\n    this.changeLayout(1, 1);\n    this.mprPlane = '';\n    this.volume = [];\n    for (let i = 0; i < 16; i++)\n      if (this.dicomViewersRefs[i] !== undefined) {\n        // this.dicomViewersRefs[i].runTool('clear')\n      }\n    this.setState({\n      totalSeries: _totalSeries,\n      seriesListDicomViewers: this.seriesListDicomViewers,\n      sliceIndex: 0,\n      sliceMax: 1,\n      visibleMprOrthogonal: false,\n      visibleMprCoronal: false,\n      visibleMprSagittal: false,\n      visibleMprAxial: false\n    }, () => {\n      this.setState({visibleOpenMultipleFilesDlg: true})\n    })\n  }\n\n  handleOpenDicomdir(files) {\n    this.setState({visibleDicomdir: false}, () => {\n      let dicomdir = null;\n      let datafiles = [];\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].webkitRelativePath.includes('DICOMDIR')) {\n          dicomdir = files[i]\n        } else {\n          datafiles.push(files[i])\n        }\n      }\n      if (dicomdir !== null) {\n        this.props.setDicomdirStore({origin: 'local', dicomdir: dicomdir, files: datafiles});\n        this.toggleDicomdir()\n      }\n    })\n  }\n\n  handleOpenFsDicomdir = (fsItem) => {\n    this.props.setDicomdirStore({origin: 'fs', dicomdir: fsItem, files: []});\n    this.toggleDicomdir()\n  };\n\n  componentDidMount() {\n    // Need to set the renderNode since the drawer uses an overlay\n    //this.dialog = document.getElementById('drawer-routing-example-dialog')\n    window.scrollTo(0, 0)\n  }\n\n\n  showAppBar = () => {\n    window.scrollTo(0, 0)\n  };\n\n\n  toggleSeriesMenu = () => {\n    const visibleSeries = this.state.visibleSeries;\n    //const visibleFileManager = this.state.visibleFileManager\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleSeries: !visibleSeries, visibleFileManager: false})\n    } else {\n      this.setState({visibleSeries: !visibleSeries})\n    }\n  };\n  toggleMainMenu = () => {\n    const visibleMainMenu = this.state.visibleMainMenu;\n    //const visibleFileManager = this.state.visibleFileManager\n    if (getSettingsFsView() === 'left') {\n      this.setState({visibleMainMenu: !visibleMainMenu, visibleFileManager: false})\n    } else {\n      this.setState({visibleMainMenu: !visibleMainMenu})\n    }\n  };\n\n  showMainMenu = () => {\n    this.setState({visibleMainMenu: true})\n  };\n\n  hideMainMenu = () => {\n    this.setState({visibleMainMenu: false})\n  };\n\n  handleVisibility = (visibleMainMenu) => {\n    this.setState({visibleMainMenu})\n  };\n\n\n  toggleHeader = () => {\n    const visible = !this.state.visibleHeader;\n    this.setState({visibleHeader: visible});\n    if (visible)\n      this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      })\n  };\n\n\n  toggleToolbox = () => {\n    const visible = !this.state.visibleToolbox;\n    this.setState({visibleToolbox: visible});\n    if (visible)\n      this.setState({\n        visibleMeasure: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      })\n  };\n\n  saveMeasure = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('savetools')\n  };\n\n  toggleMeasure = () => {\n    const visible = !this.state.visibleMeasure;\n    this.setState({visibleMeasure: visible});\n    if (visible)\n      this.setState({\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleDicomdir: false,\n        visibleFileManager: false\n      })\n  };\n\n  hideMeasure = () => {\n    this.setState({visibleMeasure: false})\n  };\n\n  handleVisibilityMeasure = (visibleMeasure) => {\n    this.setState({visibleMeasure})\n  };\n\n\n  toggleDicomdir = () => {\n    const visible = !this.state.visibleDicomdir;\n    console.log('toggleDicomdir: ', visible);\n    this.setState({visibleDicomdir: visible});\n    if (visible)\n      this.setState({\n        visibleMeasure: false,\n        visibleToolbox: false,\n        visibleHeader: false,\n        visibleFileManager: false\n      })\n  };\n\n\n  clearMeasure = () => {\n    this.showClearMeasureDlg()\n  };\n\n  showClearMeasureDlg = () => {\n    this.setState({visibleClearMeasureDlg: true})\n  };\n\n  hideClearMeasureDlg = () => {\n    this.setState({visibleClearMeasureDlg: false})\n  };\n\n  confirmClearMeasureDlg = () => {\n    this.hideClearMeasureDlg();\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetools')\n  };\n\n\n  showZippedFileDlg = () => {\n    this.setState({visibleZippedFileDlg: true})\n  };\n\n  hideZippedFileDlg = () => {\n    this.setState({visibleZippedFileDlg: false})\n  };\n\n  confirmZippedFileDlg = () => {\n    this.hideZippedFileDlg();\n    this.setState({visibleFileManager: true}, () => {\n      console.log('this.url: ', this.url);\n      if (this.url !== null) {\n        this.setState({visibleDownloadZipDlg: true})\n      } else {\n        this.props.setFsZippedFile(this.file)\n      }\n    })\n  };\n\n\n  showAbout = () => {\n    this.setState({visibleAbout: !this.state.visibleAbout})\n  };\n\n  showSettings = () => {\n    this.setState({\n      visibleMainMenu: false,\n      visibleSettings: true,\n      visibleToolbar: false,\n      position: 'right'\n    })\n  };\n\n  hideSettings = () => {\n    this.setState({\n      visibleMainMenu: true,\n      visibleSettings: false,\n      visibleToolbar: true,\n      visibleFileManager: false,\n      visibleDicomdir: false,\n    })\n  };\n\n  handleVisibilitySettings = (visibleSettings) => {\n    this.setState({visibleSettings})\n  };\n\n  hideDownloadZipDlg = () => {\n    this.setState({visibleDownloadZipDlg: false})\n  };\n\n  hideOpenMultipleFilesDlg = () => {\n    this.setState({visibleOpenMultipleFilesDlg: false});\n    this.openMultipleFilesCompleted()\n  };\n\n  openMultipleFilesCompleted = () => {\n    if (this.props.files !== null) {\n      this.changeLayout(1, 1);\n      this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', 0);\n      const sliceMax = this.props.files.length;\n      this.setState({sliceMax: sliceMax}, () => {\n        this.mprPlanePosition();\n        if (this.mprPlane === 'sagittal')\n          this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: true,\n            visibleMprAxial: false,\n            visibleMprCoronal: false\n          });\n        else if (this.mprPlane === 'coronal')\n          this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: false,\n            visibleMprCoronal: true\n          });\n        else\n          this.setState({\n            visibleMprOrthogonal: false,\n            visibleMprSagittal: false,\n            visibleMprAxial: true,\n            visibleMprCoronal: false\n          })\n      })\n    }\n  };\n\n  showOpenUrl = () => {\n    this.setState({visibleOpenUrl: true})\n  };\n\n  hideOpenUrl = (openDlg) => {\n    this.setState({visibleOpenUrl: false},\n      () => {\n        if (openDlg) {\n          this.hideMainMenu();\n          this.file = null;\n          this.url = this.openUrlField.value;\n          //console.log('this.url :', this.url)\n          //const ext = getFileExtReal(this.url)\n          //console.log('ext :', ext)\n          if (getFileExtReal(this.url) === 'zip') {\n            this.setState({visibleZippedFileDlg: true})\n          } else {\n            return this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openurl', this.openUrlField.value)\n          }\n        }\n      })\n  };\n\n  downloadOpenUrl = () => {\n    this.setState({visibleOpenUrl: false, visibleToolbar: true})\n  };\n\n  resetImage = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('reset')\n  };\n\n  saveShot = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('saveas')\n  };\n\n  cinePlayer = () => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('cine')\n  };\n\n  clear = () => {\n    this.setState({\n      openImageEdit: false,\n      openTools: false,\n      openMpr: false,\n      visibleToolbox: false,\n      visibleMeasure: false,\n      visibleHeader: false,\n      visibleDicomdir: false\n    });\n    this.changeLayout(1, 1);\n    this.props.setFilesStore(null);\n    this.props.setDicomdirStore(null);\n    this.props.clearingStore();\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('clear')\n  };\n\n  handleLayout = (event) => {\n    if (this.state.openLayout) {\n      this.setState({\n        anchorElLayout: null,\n        openLayout: false\n      });\n    } else {\n      this.setState({\n        anchorElLayout: event.currentTarget,\n        openLayout: true\n      });\n    }\n  };\n\n  closeLayout = () => {\n    this.setState({anchorElLayout: null, openLayout: false})\n  };\n\n  changeLayout = (row, col) => {\n    // if reduce the grid clear the unused views\n    if (row < this.props.layout[0] || col < this.props.layout[1]) {\n      this.layoutGridClick(0);\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          if ((i + 1 > row) || (j + 1 > col)) {\n            const index = i * 4 + j;\n            if (this.dicomViewersRefs[index] !== undefined) {\n              //this.dicomViewersRefs[index].runTool('clear')\n            }\n          }\n        }\n      }\n    }\n    this.props.setLayoutStore(row, col)\n  };\n\n  toolExecute = (tool) => {\n    this.hideMainMenu();\n    switch (tool) {\n      case 'notool':\n        iconTool = null;\n        this.setState({toolState: null});\n        break;\n      case 'Wwwc':\n        iconTool = mdiArrowAll;\n        break;\n      case 'Pan':\n        iconTool = mdiCursorPointer;\n        break;\n      case 'Zoom':\n        iconTool = mdiMagnify;\n        break;\n      case 'Length':\n        iconTool = mdiRuler;\n        break;\n      case 'Probe':\n        iconTool = mdiEyedropper;\n        break;\n      case 'Angle':\n        iconTool = mdiAngleAcute;\n        break;\n      case 'EllipticalRoi':\n        iconTool = mdiEllipse;\n        break;\n      case 'RectangleRoi':\n        iconTool = mdiRectangle;\n        break;\n      case 'FreehandRoi':\n        iconTool = mdiGesture;\n        break;\n\n      default:\n        break\n    }\n    this.props.toolStore(tool);\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool(tool)\n  };\n\n  toolChange = () => {\n    const toolState = 1 - this.state.toolState;\n    this.setState({toolState: toolState}, () => {\n      this.changeTool.changeTool(this.props.tool, toolState)\n    })\n  };\n\n  toolRemove = (index) => {\n    this.dicomViewersRefs[this.props.activeDcmIndex].runTool('removetool', index)\n  };\n\n  toggleOpenMenu = (event) => {\n    if (this.state.openMenu) {\n      this.setState({\n        openMenu: !this.state.openMenu,\n        anchorEl: null,\n      });\n    } else {\n      this.setState({\n        openMenu: !this.state.openMenu,\n        anchorEl: event.currentTarget,\n      });\n    }\n  };\n\n  toggleImageEdit = (event) => {\n    if (this.state.anchorElImageEdit) {\n      this.setState({\n        openImageEdit: !this.state.openImageEdit,\n        anchorElImageEdit: null,\n      });\n    } else {\n      this.setState({\n        openImageEdit: !this.state.openImageEdit,\n        anchorElImageEdit: event.currentTarget,\n      });\n    }\n  };\n\n  toggleTools = () => {\n    this.setState({openTools: !this.state.openTools})\n  };\n\n  toggleMpr = (event) => {\n    if (this.state.openMpr) {\n      this.setState({openMpr: !this.state.openMpr, anchorElMpr: null});\n    } else {\n      this.setState({openMpr: !this.state.openMpr, anchorElMpr: event.currentTarget});\n    }\n\n  };\n\n  layoutGridClick = (index) => {\n    if (isMobile && index === this.props.activeDcmIndex) return;\n\n    this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n\n    this.props.setActiveDcmIndex(index);\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[0]})\n\n      } else if (index === 1) {\n        const sliceMax = this.props.files[0].image.columns;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[1]})\n\n      } else if (index === 2) {\n        const sliceMax = this.props.files[0].image.rows;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[2]})\n      }\n    }\n\n    const dcmViewer = this.getDcmViewerRef(index);\n    //console.log('dcmViewer:', dcmViewer)\n    this.props.setActiveMeasurements(dcmViewer.measurements);\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})\n  };\n\n  layoutGridTouch = (index) => {\n    if (!isMobile && index === this.props.activeDcmIndex) return;\n\n    this.mprSliceIndex[this.props.activeDcmIndex] = this.state.sliceIndex;\n\n    this.props.setActiveDcmIndex(index);\n\n    if (this.state.visibleMprOrthogonal) {\n      if (index === 0) {\n        const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[0]})\n\n      } else if (index === 1) {\n        const sliceMax = this.props.files[0].image.columns;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[1]})\n\n      } else if (index === 2) {\n        const sliceMax = this.props.files[0].image.rows;\n        this.setState({sliceMax: sliceMax, sliceIndex: this.mprSliceIndex[2]})\n      }\n    }\n\n    const dcmViewer = this.getDcmViewerRef(index);\n    this.props.setActiveMeasurements(dcmViewer.measurements);\n    this.props.setActiveDcm({image: dcmViewer.image, element: dcmViewer.dicomImage, isDicom: dcmViewer.isDicom})\n  };\n\n  buildLayoutGrid = () => {\n    let dicomviewers = [];\n    for (let i = 0; i < this.props.layout[0]; i++) {\n      for (let j = 0; j < this.props.layout[1]; j++) {\n        const styleLayoutGrid = {\n          border: this.props.layout[0] === 1 && this.props.layout[1] === 1 ? 'solid 1px #000000' : 'solid 1px #444444',\n        };\n        const index = i * 4 + j;\n        dicomviewers.push(\n          <div\n            key={index}\n            style={styleLayoutGrid}\n            onClick={() => this.layoutGridClick(index)}\n            onTouchStart={() => this.layoutGridTouch(index)}\n          >\n            {this.getDcmViewer(index)}\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div\n        id=\"dicomviewer-grid\"\n        style={{\n          display: 'grid',\n          gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%',\n        }}\n      >\n        {dicomviewers}\n      </div>\n    )\n  };\n\n  buildLayoutList = (totalSeries) => {\n    let dicomviewers = [];\n\n    for (let i = 0; i < 8; i++) {\n      const styleLayoutGrid = {\n        border: 'solid 1px #fff',\n        width: '100%',\n        height: '100px',\n        marginTop: '5px',\n      };\n\n      this.dicomViewersRefs[i].runTool('openimage', 0);\n\n      dicomviewers.push(\n        <ListItem button>\n          <row style={{width: '100%'}}>\n            < div\n              key={i}\n              style={styleLayoutGrid}\n              // onClick={() => this.layoutGridClick(i)}\n              // onTouchStart={() => this.layoutGridTouch(i)}\n            >\n              {this.seriesListDicomViewers[i]}\n            </div>\n            <p\n              style={{padding: 0, margin: '5px 10px 5px 10px'}}\n            >\n              series number: {totalSeries[i] ? totalSeries[i].seriesNumber : \"{ts.seriesNumber}\"}\n            </p>\n          </row>\n        </ListItem>\n      );\n    }\n\n    return (\n      <div\n        id=\"dicomviewer-grid\"\n        style={{\n          display: 'grid',\n          // gridTemplateRows: `repeat(${this.props.layout[0]}, ${100 / this.props.layout[0]}%)`,\n          // gridTemplateColumns: `repeat(${this.props.layout[1]}, ${100 / this.props.layout[1]}%)`,\n          height: '100%',\n          width: '100%',\n        }}\n      >\n        {dicomviewers}\n      </div>\n    );\n\n    // let totalSeries = this.state.totalSeries;\n    // let totalSeriesView = [];\n    // if (totalSeries !== null) {\n    //\n    //   totalSeries.forEach((ts, index) => {\n    //\n    //     totalSeriesView.push(\n    //       <ListItem button>\n    //         <row style={{width: '100%'}}>\n    //           {this.buildLayoutList(index)}\n    //           <p\n    //             style={{padding: 0, margin: '5px 10px 5px 10px'}}\n    //           >\n    //             series number: {ts.seriesNumber}\n    //           </p>\n    //         </row>\n    //       </ListItem>\n    //     );\n    //\n    //     if (this.seriesListDicomViewersRefs[index]) {\n    //       this.seriesListDicomViewersRefs[index].runTool('openImage', 0);\n    //       console.log(\"jjjjjjjjjjjjjj   \" + index);\n    //     }\n    //\n    //     console.log(\"@@@@@@   \" + index + \"   \" + this.state.seriesListDicomViewers.length);\n    //\n    //   });\n    //\n    // }\n    //\n    //\n    // return (\n    //   <div\n    //     key={index}\n    //     style={styleLayoutGrid}\n    //     // onClick={() => this.layoutGridClick(index)}\n    //     // onTouchStart={() => this.layoutGridTouch(index)}\n    //   >\n    //     {this.seriesListDicomViewersRefs[index]}\n    //   </div>\n    // )\n  };\n\n  getFileName = (dcmViewer) => {\n    return dcmViewer.filename\n    /*if (dcmViewer.fsItem !== null) {\n    return dcmViewer.fsItem.name\n    } else if (dcmViewer.localfile !== null) {\n    return getFileNameCorrect(dcmViewer.localfile.name)\n    } else {\n    return dcmViewer.localurl.substring(dcmViewer.localurl.lastIndexOf('/')+1)\n    }*/\n  };\n\n  getStringVisiblePlane = () => {\n    if (this.state.visibleMprOrthogonal)\n      return 'orthogonal';\n    else if (this.state.visibleMprSagittal)\n      return 'sagittal';\n    else if (this.state.visibleMprAxial)\n      return 'axial';\n    else if (this.state.visibleMprCoronal)\n      return 'coronal'\n  };\n\n  appBarTitle = (classes, isOpen, dcmViewer) => {\n    if (isMobile && !isTablet) {\n      if (isOpen)\n        return null;\n      else\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n          </Typography>\n        )\n    } else {\n      if (isOpen) {\n        const plane = this.getStringVisiblePlane();\n        if (this.state.sliceMax > 1 && this.mprPlane !== plane && this.mprPlane !== '') {\n          return (\n            <Typography variant=\"overline\" className={classes.title}>\n              {'MPR ' + plane}\n            </Typography>\n          )\n        }\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            {this.getFileName(dcmViewer)}\n          </Typography>\n        )\n      } else if (this.props.dicomdir !== null) {\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            {this.props.dicomdir.dicomdir.webkitRelativePath}\n          </Typography>\n        )\n      } else\n        return (\n          <Typography variant=\"overline\" className={classes.title}>\n            <strong>U</strong>niversal <strong>D</strong>icom <strong>V</strong>iewer\n          </Typography>\n        )\n    }\n  };\n\n  // ---------------------------------------------------------------------------------------------- MPR\n\n  getImageOrientationZ = (image) => {\n    const iop = image.data.string('x00200037').split('\\\\'); // Image Orientation Patient\n\n    let v = new Array(3).fill(0).map(() => new Array(3).fill(0));\n\n    v[0][0] = parseFloat(iop[0]); // the x direction cosines of the first row X\n    v[0][1] = parseFloat(iop[1]); // the y direction cosines of the first row X\n    v[0][2] = parseFloat(iop[2]); // the z direction cosines of the first row X\n    v[1][0] = parseFloat(iop[3]); // the x direction cosines of the first column Y\n    v[1][1] = parseFloat(iop[4]); // the y direction cosines of the first column Y\n    v[1][2] = parseFloat(iop[5]); // the z direction cosines of the first column Y\n    //console.log('getImageOrientationZ: ', v[1][2])\n    return v[1][2]\n  };\n\n  mprBuildVolume = () => {\n    if (this.volume.length > 0) return;\n\n    this.t0 = performance.now();\n\n    const files = this.props.files;\n    const xPixelSpacing = getPixelSpacing(files[0].image, 0);\n    const spacingBetweenSlice = getSpacingBetweenSlice(files[0].image);\n    const sliceThickness = getSliceThickness(files[0].image);\n    const length = files[0].image.getPixelData().length;\n    const sliceLocation = getSliceLocation(files[0].image);\n    this.volume = [];\n    // see https://stackoverflow.com/questions/58412358/dicom-multiplanar-image-reconstruction\n    this.mprData.zDim = Math.round(files.length * spacingBetweenSlice / xPixelSpacing);\n\n    //console.log('this.mprData.zDim: ', this.mprData.zDim)\n    //console.log('spacingBetweenSlice: ', spacingBetweenSlice)\n    //console.log('sliceThickness: ', sliceThickness)\n    //console.log('xPixelSpacing: ', xPixelSpacing)\n    //console.log('getSliceLocation: ', sliceLocation)\n\n    // If spacing between slices is less than slice thickness, the images are not optimal for 3D reconstruction.\n    // Try an alternative algorithm based on slice distance.\n    let zDimMethod2 = false;\n    if (spacingBetweenSlice < sliceThickness && sliceLocation === undefined) {\n      let max = 0;\n      let min = 0;\n      for (let i = 0; i < files.length; i++) {\n        if (files[i].sliceDistance > max)\n          max = files[i].sliceDistance;\n        if (files[i].sliceDistance < min)\n          min = files[i].sliceDistance\n      }\n      this.mprData.zDim = Math.round(Math.abs(max - min) / xPixelSpacing);\n      //console.log('method2, this.mprData.zDim: ', this.mprData.zDim)\n      zDimMethod2 = true\n    }\n\n    if (files.length === this.mprData.zDim) { // slices contiguous\n      for (let i = 0, len = files.length; i < len; i++) {\n        this.volume.push(files[i].image.getPixelData())\n      }\n\n    } else if (files.length < this.mprData.zDim) { // gap between slices\n\n      let emptyPlane = new Int16Array(length).fill(0);\n      for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n        this.volume.push(emptyPlane)\n      }\n\n      let order = [];\n\n      for (let i = 0; i < files.length; i++) {\n        order.push({\n          iFile: i,\n          instanceNumber: files[i].instanceNumber,\n          sliceDistance: files[i].sliceDistance,\n          sliceLocation: files[i].sliceLocation\n        })\n      }\n\n      if (zDimMethod2) {\n        // eliminate eventually duplicates\n        order = order.reduce((previous, current) => {\n          let object = previous.filter(object => object.sliceDistance === current.sliceDistance);\n          if (object.length === 0) {\n            previous.push(current)\n          }\n          return previous\n        }, []);\n\n        order.sort((l, r) => {\n          // return r.sliceDistance - l.sliceDistance\n          return l.instanceNumber - r.instanceNumber\n        })\n        //console.log('order: ', order)\n      } else {\n        // const reorder = files[0].sliceDistance < files[1].sliceDistance\n        const reorder = files[0].sliceLocation < files[1].sliceLocation;\n        if (reorder) {\n          order.sort((l, r) => {\n            // return l.instanceNumber - r.instanceNumber\n            // return r.sliceDistance - l.sliceDistance\n            return r.sliceLocation - l.sliceLocation\n          })\n          //console.log('reorder: ')\n        }\n      }\n      /*if (this.getImageOrientationZ(files[0].image) < 0) {\n      order.sort((l, r) => {\n      return r.instanceNumber - l.instanceNumber\n      // return r.sliceDistance - l.sliceDistance\n      })\n      console.log('reorder 2: ')\n      }*/\n\n      let intervals = [0];\n      this.volume[0] = files[order[0].iFile].image.getPixelData();\n      this.volume[this.mprData.zDim - 1] = files[order[order.length - 1].iFile].image.getPixelData();\n      const step = (this.mprData.zDim - 2) / (order.length - 2);\n      let i = 0;\n      for (let k = 1; k <= order.length - 2; k++) {\n        i = Math.ceil(i + step);\n        //console.log(`i: ${i},  k: ${k},  order[k].iFile: ${order[k].iFile}`)\n        this.volume[i] = files[order[k].iFile].image.getPixelData(); // order[k-1].iFile\n        intervals.push(i)\n      }\n      intervals.push(this.mprData.zDim - 1);\n      console.log('intervals: ', intervals);\n\n      //console.log('this.volume: ', this.volume)\n\n      const interpolationMethod = getSettingsMprInterpolation();\n\n      if (interpolationMethod === 'no') {\n        // build missing planes without interpolation, simple duplicate\n        for (let i = 0; i < intervals.length - 1; i++) {\n          //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n          for (let j = intervals[i] + 1; j <= intervals[i + 1] - 1; j++) {\n            //console.log(`j: ${j}`)\n            this.volume[j] = this.volume[intervals[i + 1]]\n          }\n        }\n\n      } else if (interpolationMethod === 'weightedlinear') {\n        // build the interpolate planes between original planes\n        for (let i = 0; i < intervals.length - 1; i++) {\n          //console.log(`intervals: ${intervals[i]} - ${intervals[i+1]}`)\n          const step = intervals[i + 1] - intervals[i];\n\n          for (let j = intervals[i] + 1; j < intervals[i + 1]; j++) {\n            //console.log(`i: ${i}, intervals[i]: ${intervals[i]}, j: ${j}`)\n\n            let p = new Int16Array(length);\n            const w = (j - intervals[i]) / step;\n\n            for (let k = 0; k < length - 1; k++) {\n              // simple linear interpolation\n              // const p0 = this.volume[intervals[i]][k]\n              // const p1 = this.volume[intervals[i+1]][k]\n              // p[k] = (p0+p1)/2\n\n              // weighted linear interpolation\n              const p0 = this.volume[intervals[i]][k] * (1 - w);\n              const p1 = this.volume[intervals[i + 1]][k] * w;\n              p[k] = p0 + p1;\n              if (p0 === undefined || p1 === undefined) {\n                console.log('undefined')\n              }\n              // weighted bilinear interpolation\n              /*if (k-1 > 0 && k+1 < length) {\n              const p0 = this.volume[intervals[i]][k] * (1-w) * 0.5 + this.volume[intervals[i]][k-1] * (1-w) * 0.25 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n              const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25 + this.volume[intervals[i+1]][k+1] * w * 0.25\n              p[k] = p0+p1\n              } else if (k-1 < 0) {\n              const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k+1] * (1-w) * 0.25\n              const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k+1] * w * 0.25\n              p[k] = p0+p1\n              } else { // k+1 > length\n              const p0 = this.volume[intervals[i]][k] * (1-w) * 0.75 + this.volume[intervals[i]][k-1] * (1-w) * 0.25\n              const p1 = this.volume[intervals[i+1]][k] * w * 0.5 + this.volume[intervals[i+1]][k-1] * w * 0.25\n              p[k] = p0+p1\n              }*/\n            }\n\n            this.volume[j] = p\n          }\n        }\n      }\n\n      this.t1 = performance.now();\n      console.log(`performance volume building: ${this.t1 - this.t0} milliseconds`)\n\n    } else { // overlapping slices\n      this.mprData.zStep = files.length / this.mprData.zDim;\n      //console.log('this.mprData.zStep: ', this.mprData.zStep)\n      for (let i = 0, len = this.mprData.zDim; i < len; i++) {\n        const k = Math.round(i * this.mprData.zStep);\n        this.volume.push(files[k].image.getPixelData())\n      }\n    }\n\n    if (this.state.visibleMprOrthogonal) {\n      this.changeToOrthogonalView()\n\n    } else if (this.state.visibleMprSagittal) {\n      this.changeToSagittalView()\n\n    } else if (this.state.visibleMprCoronal) {\n      this.changeToCoronalView()\n\n    } else { // axial\n      this.changeToAxialView()\n    }\n  };\n\n  changeToOrthogonalView = () => {\n    this.changeLayout(1, 3);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition();\n\n      const index = Math.round(this.props.files.length / 2);\n\n      if (this.dicomViewersRefs[0].volume === null)\n        this.dicomViewersRefs[0].volume = this.volume;\n\n      this.mprSliceIndex[0] = index;\n      this.dicomViewersRefs[0].runTool('openimage', index);\n\n      if (this.dicomViewersRefs[1].volume === null)\n        this.dicomViewersRefs[1].volume = this.volume;\n      const xzIndex = Math.round(this.props.files[0].image.columns / 2);\n      this.mprSliceIndex[1] = xzIndex;\n      this.dicomViewersRefs[1].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, xzIndex, this.mprData);\n\n      if (this.dicomViewersRefs[2].volume === null)\n        this.dicomViewersRefs[2].volume = this.volume;\n      const yzIndex = Math.round(this.props.files[0].image.rows / 2);\n      this.mprSliceIndex[2] = yzIndex;\n      this.dicomViewersRefs[2].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, yzIndex, this.mprData)\n    })\n\n  };\n\n  changeToSagittalView = () => {\n    this.changeLayout(1, 1);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition();\n\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume;\n      //console.log('mprSagittal, this.mprPlanePosition(): ', plane)\n\n      if (plane === 'sagittal') {\n        const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n\n      } else if (plane === 'axial') {\n        const sliceMax = this.props.files[0].image.columns;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n\n      } else {\n        const sliceMax = this.props.files[0].image.rows;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n      }\n    })\n  };\n\n  changeToCoronalView = () => {\n    this.changeLayout(1, 1);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition();\n\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume;\n      //console.log('mprCoronal, this.mprPlanePosition(): ', plane)\n\n      if (plane === 'coronal') {\n        const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n\n      } else if (plane === 'axial') {\n        const sliceMax = this.props.files[0].image.columns;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n\n      } else { // plane is sagittal\n        const sliceMax = this.props.files[0].image.rows;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n      }\n    })\n  };\n\n  changeToAxialView = () => {\n    this.changeLayout(1, 1);\n\n    this.setState({visibleVolumeBuilding: false}, () => {\n      const plane = this.mprPlanePosition();\n\n      if (this.dicomViewersRefs[this.props.activeDcmIndex].volume === null)\n        this.dicomViewersRefs[this.props.activeDcmIndex].volume = this.volume;\n      //console.log('mprAxial, this.mprPlanePosition(): ', plane)\n\n      if (plane === 'axial') {\n        const sliceMax = this.props.files === null ? 1 : this.props.files.length;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].runTool('openimage', index)\n\n      } else if (plane === 'sagittal') {\n        const sliceMax = this.props.files[0].image.columns;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderXZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n\n      } else {\n        const sliceMax = this.props.files[0].image.rows;\n        const index = Math.round(sliceMax / 2);\n        this.setState({sliceIndex: index, sliceMax: sliceMax});\n        this.dicomViewersRefs[this.props.activeDcmIndex].mprRenderYZPlane(this.dicomViewersRefs[0].filename, plane, index, this.mprData)\n      }\n    })\n  };\n\n  mprPlanePosition = () => {\n    if (this.mprPlane === '') {\n      this.mprPlane = this.dicomViewersRefs[this.props.activeDcmIndex].mprPlanePosition()\n    }\n    return this.mprPlane\n  };\n\n  mprOrthogonal = () => {\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    if (!visibleMprOrthogonal) {\n      const index = Math.round(this.props.files.length / 2);\n      //console.log('mprOrthogonal, index: ', index)\n      this.setState({sliceIndex: index});\n      this.setState({\n        visibleMprOrthogonal: true,\n        visibleMprCoronal: false,\n        visibleMprSagittal: false,\n        visibleMprAxial: false\n      }, () => {\n        if (this.volume.length === 0) {\n          this.setState({visibleVolumeBuilding: true}, () => {\n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)\n          })\n        } else {\n          this.changeToOrthogonalView()\n        }\n      })\n    }\n  };\n\n  mprSagittal = () => {\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    if (!visibleMprSagittal) {\n      this.setState({\n        visibleMprOrthogonal: false,\n        visibleMprSagittal: true,\n        visibleMprCoronal: false,\n        visibleMprAxial: false\n      }, () => {\n        if (this.volume.length === 0) {\n          this.setState({visibleVolumeBuilding: true}, () => {\n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)\n          })\n        } else {\n          this.changeToSagittalView()\n        }\n      })\n    }\n  };\n\n  mprCoronal = () => {\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    if (!visibleMprCoronal) {\n      this.setState({\n        visibleMprOrthogonal: false,\n        visibleMprSagittal: false,\n        visibleMprCoronal: true,\n        visibleMprAxial: false\n      }, () => {\n        if (this.volume.length === 0) {\n          this.setState({visibleVolumeBuilding: true}, () => {\n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)\n          })\n        } else {\n          this.changeToCoronalView()\n        }\n      })\n    }\n  };\n\n  mprAxial = () => {\n    const visibleMprAxial = this.state.visibleMprAxial;\n    if (!visibleMprAxial) {\n      this.setState({\n        visibleMprOrthogonal: false,\n        visibleMprSagittal: false,\n        visibleMprCoronal: false,\n        visibleMprAxial: true\n      }, () => {\n        if (this.volume.length === 0) {\n          this.setState({visibleVolumeBuilding: true}, () => {\n            setTimeout(() => {\n              this.mprBuildVolume()\n            }, 100)\n          })\n        } else {\n          this.changeToAxialView()\n        }\n      })\n    }\n  };\n\n  // ---------------------------------------------------------------------------------------------- MPR end\n\n  listOpenFilesFirstFrame = () => {\n    const index = 0;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  };\n\n  listOpenFilesPreviousFrame = () => {\n    let index = this.state.sliceIndex;\n    index = index === 0 ? this.state.sliceMax - 1 : index - 1;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  };\n\n  listOpenFilesNextFrame = () => {\n    let index = this.state.sliceIndex;\n    index = index === this.state.sliceMax - 1 ? 0 : index + 1;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  };\n\n  listOpenFilesLastFrame = () => {\n    const index = this.state.sliceMax - 1;\n    //this.props.setLocalFileStore(this.files[index])\n    this.setState({sliceIndex: index}, () => {\n      this.handleOpenImage(index)\n    })\n  };\n\n  listOpenFilesScrolling = () => {\n    const scrolling = this.state.listOpenFilesScrolling;\n    this.setState({listOpenFilesScrolling: !scrolling}, () => {\n      if (scrolling) {\n        clearInterval(this.timerScrolling)\n      } else {\n        this.timerScrolling = setInterval(() => {\n          this.listOpenFilesNextFrame()\n        }, 500)\n      }\n    })\n  };\n\n  handleSliceChange = (event, value) => {\n    console.log('slice value: ', Math.floor(value));\n    this.setState({sliceIndex: Math.floor(value)}, () => {\n      let index = this.state.sliceIndex;\n      this.props.setLocalFileStore(this.files[index]);\n      this.handleOpenImage(index)\n    })\n  };\n\n  dicomImageRef = el => {\n    this.dicomImage = el\n  };\n\n  render() {\n    //console.log('App render: ')\n\n    const {classes} = this.props;\n\n    const primaryClass = {primary: classes.listItemText};\n    const iconSize = '1.2rem';\n\n    const isOpen = this.props.isOpen[this.props.activeDcmIndex];\n    const isDicomdir = this.props.dicomdir !== null;\n    const isMultipleFiles = this.props.files === null ? false : this.props.files.length > 1;\n\n    const openMenu = this.state.openMenu;\n    const openImageEdit = this.state.openImageEdit;\n    // const openTools = this.state.openTools;\n    const openMpr = this.state.openMpr && isMultipleFiles && this.mprPlane !== '';\n    // const visibleMainMenu = this.state.visibleMainMenu;\n    const visibleHeader = this.state.visibleHeader;\n    const visibleSettings = this.state.visibleSettings;\n    const visibleAbout = this.state.visibleAbout;\n    const visibleMeasure = this.state.visibleMeasure;\n    const visibleToolbox = this.state.visibleToolbox;\n    const visibleDicomdir = this.state.visibleDicomdir;\n    const visibleFileManager = this.state.visibleFileManager;\n    const visibleClearMeasureDlg = this.state.visibleClearMeasureDlg;\n    const visibleZippedFileDlg = this.state.visibleZippedFileDlg;\n    const visibleDownloadZipDlg = this.state.visibleDownloadZipDlg;\n    const visibleOpenMultipleFilesDlg = this.state.visibleOpenMultipleFilesDlg;\n    // const visibleLayout = Boolean(this.state.anchorElLayout);\n    const visibleVolumeBuilding = this.state.visibleVolumeBuilding;\n    const visibleMprOrthogonal = this.state.visibleMprOrthogonal;\n    const visibleMprCoronal = this.state.visibleMprCoronal;\n    const visibleMprSagittal = this.state.visibleMprSagittal;\n    const visibleMprAxial = this.state.visibleMprAxial;\n\n    let iconToolColor = this.state.toolState === 1 ? '#FFFFFF' : '#999999';\n\n    const dcmViewer = this.getActiveDcmViewer();\n\n    // const sliceMax = this.state.sliceMax;\n\n    const anchorEl = this.state.anchorEl;\n    const anchorElMpr = this.state.anchorElMpr;\n    const anchorElImageEdit = this.state.anchorElImageEdit;\n    const visibleSeries = this.state.visibleSeries;\n    const anchorElLayout = this.state.anchorElLayout;\n    // const openLayout = this.state.openLayout;\n\n    let totalSeries = this.state.totalSeries;\n    let totalSeriesView = [];\n    if (totalSeries !== null) {\n\n      totalSeries.forEach((ts,index) => {\n\n        totalSeriesView.push(\n          <ListItem button>\n            <row style={{width: '100%'}}>\n              <div style={{\n                border: 'solid 1px #fff',\n                width: '100%',\n                height: '100px',\n                marginTop: '5px',\n              }}>\n                <div\n                  id={'elem'}\n                  style={{width: '100%',\n                    height: '100%',\n                    position: 'relative',}}\n                >\n                </div>\n              </div>\n              <p\n                style={{padding: 0, margin: '5px 10px 5px 10px'}}\n              >\n                series number: {ts.seriesNumber}\n              </p>\n            </row>\n          </ListItem>\n        );\n      });\n\n    }\n\n    //console.log('this.dicomViewersRefs: ', this.dicomViewersRefs)\n    //console.log('isMultipleFiles: ', isMultipleFiles)\n    //console.log('this.mprPlane: ', this.mprPlane)\n\n    const handleClick = (event) => {\n      this.setState({anchorElLayout: event.currentTarget});\n    };\n\n    const handleClose = () => {\n      this.setState({anchorElLayout: null});\n    };\n\n    return (\n      <div>\n        <AppBar className={classes.appBar} position='static' elevation={0}>\n          <Toolbar variant=\"dense\">\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={this.toggleSeriesMenu}>\n              <Icon path={mdiViewList} size={iconSize} color={iconColor}/>\n            </IconButton>\n\n            <Divider\n              orientation={\"vertical\"}\n              style={{display: 'list-item', backgroundColor: '#fff'}}\n              flexItem\n            />\n\n            <Tooltip title={\"File Manager\"} arrow>\n              <IconButton\n                button\n                onClick={() => this.toggleFileManager()}\n                style={{marginLeft: '16px'}}\n              >\n                <Icon path={mdiFileCabinet} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Open\"} arrow>\n              <IconButton button onClick={(event) => this.toggleOpenMenu(event)}>\n                <Icon path={mdiFolderMultiple} size={iconSize} color={iconColor}/>\n                {openMenu ? <ExpandLess/> : <ExpandMore/>}\n              </IconButton>\n            </Tooltip>\n            <Popper\n              open={openMenu}\n              anchorEl={anchorEl}\n              role={undefined}\n              transition\n              disablePortal\n              style={{backgroundColor: '#6c5c89'}}\n              placement={'center-top'}\n            >\n              {({TransitionProps, placement}) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                >\n                  <Paper\n                    style={{backgroundColor: '#6c5c89', borderRadius: '0 0 4px 4px'}}\n                  >\n                    <ClickAwayListener onClickAway={(event) => this.toggleOpenMenu(event)}>\n                      <MenuList\n                        autoFocusItem={openMenu}\n                        style={{padding: '0'}}\n                        id=\"menu-list-grow\"\n                        onKeyDown={(event) => this.toggleOpenMenu(event)}\n                      >\n\n                        <MenuItem button onClick={() => this.showFileOpen()}>\n                          <ListItemIcon><Icon path={mdiFolder} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n                          <ListItemText\n                            classes={primaryClass}\n                            primary={\n                              <Typography\n                                type=\"body1\"\n                                style={{\n                                  fontSize: '0.80em',\n                                  marginLeft: '-20px'\n                                }}>File</Typography>\n                            }/>\n                        </MenuItem>\n                        <MenuItem button onClick={() => this.showOpenUrl()}>\n                          <ListItemIcon><Icon path={mdiWeb} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n                          <ListItemText\n                            classes={primaryClass}\n                            primary={\n                              <Typography\n                                type=\"body1\"\n                                style={{fontSize: '0.80em', marginLeft: '-20px'}}>URL</Typography>\n                            }/>\n                        </MenuItem>\n                        {isInputDirSupported() && !isMobile ?\n                          <MenuItem button onClick={() => this.showOpenFolder()}>\n                            <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n                            <ListItemText\n                              classes={primaryClass}\n                              primary={\n                                <Typography\n                                  type=\"body1\"\n                                  style={{\n                                    fontSize: '0.80em',\n                                    marginLeft: '-20px'\n                                  }}>Folder</Typography>\n                              }/>\n                          </MenuItem>\n                          : null}\n                        {isInputDirSupported() && !isMobile ?\n                          <MenuItem button onClick={() => this.showOpenDicomdir()}>\n                            <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>\n                            <ListItemText\n                              classes={primaryClass}\n                              primary={\n                                <Typography\n                                  type=\"body1\"\n                                  style={{\n                                    fontSize: '0.80em',\n                                    marginLeft: '-20px'\n                                  }}>DICOMDIR\n                                </Typography>\n                              }/>\n                          </MenuItem>\n                          : null}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n\n            <Tooltip title={\"Clear All\"} arrow>\n              <IconButton button onClick={() => this.clear()}>\n                <Icon path={mdiDelete} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Layout\"} arrow>\n              <IconButton button onClick={handleClick}>\n                <Icon path={mdiViewGridPlusOutline} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Popper\n              open={Boolean(anchorElLayout)}\n              anchorEl={anchorElLayout}\n              role={undefined}\n              transition\n              disablePortal\n              style={{backgroundColor: '#6c5c89', marginTop: '3px'}}\n              placement={'center-top'}\n            >\n              {({TransitionProps, placement}) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                >\n                  <Paper\n                    style={{\n                      backgroundColor: '#6c5c89',\n                      borderRadius: '0 0 4px 4px',\n                    }}\n                  >\n                    <ClickAwayListener onClickAway={handleClose}>\n                      <LayoutTool\n                        row={this.props.layout[0] - 1}\n                        col={this.props.layout[1] - 1}\n                        onChange={this.changeLayout}\n                      />\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n\n\n            <Tooltip title={\"Settings\"} arrow>\n              <IconButton button onClick={() => this.showSettings()}>\n                <Icon path={mdiSettings} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n\n            <Typography variant=\"overline\" className={classes.title}>\n              <strong>D</strong>icom <strong>V</strong>iewer\n            </Typography>\n\n\n            {/*{this.appBarTitle(classes, isOpen, dcmViewer)}*/}\n\n            {/*<div className={classes.grow}/>*/}\n            {!isOpen && !isDicomdir ? (\n              <IconButton onClick={this.showAbout}>\n                <Icon path={mdiInformationOutline} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {iconTool !== null && this.props.tool !== null && isOpen ? (\n              <IconButton onClick={this.toolChange}>\n                <Icon path={iconTool} size={iconSize} color={iconToolColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isOpen && dcmViewer.numberOfFrames > 1 && isOpen ? (\n              <IconButton onClick={this.cinePlayer}>\n                <Icon path={mdiVideo} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isOpen ? (\n              <IconButton onClick={this.resetImage}>\n                <Icon path={mdiRefresh} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isOpen ? (\n              <IconButton color=\"inherit\" onClick={this.saveShot}>\n                <Icon path={mdiCamera} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isOpen ? (\n              <IconButton color=\"inherit\" onClick={this.toggleToolbox}>\n                <Icon path={mdiToolbox} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isOpen ? (\n              <IconButton color=\"inherit\" onClick={this.toggleMeasure}>\n                <Icon path={mdiFileCad} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isOpen && dcmViewer.isDicom ? (\n              <IconButton color=\"inherit\" onClick={this.toggleHeader}>\n                <Icon path={mdiFileDocument} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isDicomdir ? (\n              <IconButton color=\"inherit\" onClick={this.toggleDicomdir}>\n                <Icon path={mdiFolderOpen} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n            {isOpen ? (\n              <IconButton color=\"inherit\" onClick={this.toggleFileManager}>\n                <Icon path={mdiFileCabinet} size={iconSize} color={iconColor}/>\n              </IconButton>\n            ) : null\n            }\n          </Toolbar>\n        </AppBar>\n\n        <Card className={classes.toolbarCard} position='fixed' elevation={0}>\n          <Toolbar variant=\"dense\" style={{justifyContent: 'center'}}>\n\n            <Tooltip title={\"Histogram\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toggleToolbox()} disabled={!isOpen}>\n                <Icon path={mdiChartHistogram} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title={\"MPR\"} placement={\"top\"} arrow>\n              <IconButton button onClick={(event) => this.toggleMpr(event)}\n                          disabled={!isOpen || !isMultipleFiles || this.mprPlane === ''}>\n                <Icon path={mdiAxisArrow} size={iconSize} color={iconColor}/>\n                {openMpr ? <ExpandMore/> : <ExpandLess/>}\n              </IconButton>\n            </Tooltip>\n\n            <Popper\n              open={openMpr}\n              anchorEl={anchorElMpr}\n              role={undefined} transition disablePortal>\n              {({TransitionProps, placement}) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={() => this.toggleMpr()}>\n                      <MenuList dense={true} component=\"div\">\n                        <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprOrthogonal()}>\n                          {visibleMprOrthogonal ?\n                            <ListItemIcon style={{marginLeft: '-10px'}}>\n                              <Icon\n                                path={mdiCheck}\n                                size={'1.0rem'}\n                                color={iconColor}/></ListItemIcon> : null}\n                          <ListItemText\n                            style={visibleMprOrthogonal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n                            classes={primaryClass}\n                            primary={\n                              <Typography\n                                type=\"body1\"\n                                style={{fontSize: '0.80em', marginLeft: '-23px'}}>Orthogonal</Typography>\n                            }/>\n                        </MenuItem>\n                        <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprCoronal()}>\n                          {visibleMprCoronal ?\n                            <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}\n                                                                              color={iconColor}/></ListItemIcon> : null}\n                          <ListItemText\n                            style={visibleMprCoronal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n                            classes={primaryClass}\n                            primary={\n                              <Typography\n                                type=\"body1\"\n                                style={{fontSize: '0.80em', marginLeft: '-23px'}}>Coronal</Typography>\n                            }/>\n                        </MenuItem>\n                        <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprSagittal()}>\n                          {visibleMprSagittal ?\n                            <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}\n                                                                              color={iconColor}/></ListItemIcon> : null}\n                          <ListItemText\n                            style={visibleMprSagittal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n                            classes={primaryClass}\n                            primary={\n                              <Typography type=\"body1\"\n                                          style={{fontSize: '0.80em', marginLeft: '-23px'}}>Sagittal</Typography>\n                            }/>\n                        </MenuItem>\n                        <MenuItem button style={{paddingLeft: 40}} onClick={() => this.mprAxial()}>\n                          {visibleMprAxial ?\n                            <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}\n                                                                              color={iconColor}/></ListItemIcon> : null}\n                          <ListItemText\n                            style={visibleMprAxial ? {marginLeft: '-7px'} : {marginLeft: '40px'}}\n                            classes={primaryClass}\n                            primary={\n                              <Typography type=\"body1\"\n                                          style={{fontSize: '0.80em', marginLeft: '-23px'}}>Axial</Typography>\n                            }/>\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n\n\n            <Tooltip title={\"Edit\"} placement={\"top\"} arrow>\n              <IconButton\n                button\n                onClick={(event) => this.toggleImageEdit(event)}\n                // disabled={!isOpen}\n              >\n                <Icon path={mdiImageEdit} size={iconSize} color={iconColor}/>\n                {openImageEdit ? <ExpandMore/> : <ExpandLess/>}\n              </IconButton>\n            </Tooltip>\n            {/*<Menu*/}\n            {/*  id=\"simple-menu\"*/}\n            {/*  anchorEl={anchorElImageEdit}*/}\n            {/*  keepMounted*/}\n            {/*  open={Boolean(anchorElImageEdit)}*/}\n            {/*  onClose={handleClose}*/}\n            {/*  style={{marginTop:'-31px'}}*/}\n            {/*>*/}\n            {/*  <MenuList style={{backgroundColor:'#6c5c89'}}>*/}\n            {/*  <ClickAwayListener onClickAway={(event) => this.toggleImageEdit(event)}>*/}\n            {/*      <MenuItem button onClick={() => this.toolExecute('Invert')}>*/}\n            {/*        <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n            {/*        <ListItemText classes={primaryClass} primary=\"Invert\"/>*/}\n            {/*      </MenuItem>*/}\n            {/*  </ClickAwayListener>*/}\n            {/*  </MenuList>*/}\n\n            {/*</Menu>*/}\n            <Popper\n              open={Boolean(anchorElImageEdit)}\n              anchorEl={anchorElImageEdit}\n              role={undefined}\n              transition\n              style={{backgroundColor: '#6C5C89'}}\n              placement={\"top\"}\n            >\n              {({TransitionProps, placement}) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'}}\n                >\n                  <Paper style={{backgroundColor: '#6C5C89'}}>\n                    <ClickAwayListener onClickAway={(event) => this.toggleImageEdit(event)}>\n                      <MenuList dense={true} component=\"div\" style={{padding: '0'}}>\n                        <MenuItem button onClick={() => this.toolExecute('Invert')}>\n                          <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor}/></ListItemIcon>\n                          <ListItemText classes={primaryClass} primary=\"Invert\"/>\n                        </MenuItem>\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n\n            <Divider orientation=\"vertical\" style={{display: 'list-item', backgroundColor: '#fff'}}/>\n\n            <Tooltip title={\"No tool\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('notool')}\n                          disabled={!isOpen}>\n                <Icon path={mdiCursorDefault} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"WW/WC\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('Wwwc')}\n                          disabled={!isOpen}>\n                <Icon path={mdiArrowAll} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Pan\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('Pan')} disabled={!isOpen}>\n                <Icon path={mdiCursorPointer} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Zoom\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('Zoom')}\n                          disabled={!isOpen}>\n                <Icon path={mdiMagnify} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Magnify\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('Magnify')}\n                          disabled={!isOpen}>\n                <Icon path={mdiCheckboxIntermediate} size={iconSize}\n                      color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Length\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('Length')}\n                          disabled={!isOpen}>\n                <Icon path={mdiRuler} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Probe\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('Probe')}\n                          disabled={!isOpen}>\n                <Icon path={mdiEyedropper} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Angle\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('Angle')}\n                          disabled={!isOpen}>\n                <Icon path={mdiAngleAcute} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Elliptical Roi\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('EllipticalRoi')}\n                          disabled={!isOpen}>\n                <Icon path={mdiEllipse} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Rectangle Roi\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('RectangleRoi')}\n                          disabled={!isOpen}>\n                <Icon path={mdiRectangle} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Freehand Roi\"} placement={\"top\"} arrow>\n              <IconButton button onClick={() => this.toolExecute('FreehandRoi')}\n                          disabled={!isOpen}>\n                <Icon path={mdiGesture} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Tooltip>\n\n          </Toolbar>\n        </Card>\n\n        <Drawer\n          variant=\"persistent\"\n          open={visibleSeries}\n          style={{position: 'relative', zIndex: 1}}\n          onClose={this.toggleSeriesMenu}\n        >\n          <div className={classes.toolbar} style={{marginTop: '48px'}}>\n            <List dense={true}>\n              <ListItem button onClick={() => this.showAppBar()}>\n                <ListItemIcon><Icon path={mdiArrowLeftCircle} size={iconSize} color={iconColor}/></ListItemIcon>\n                <ListItemText classes={primaryClass} primary='Hide Series'/>\n              </ListItem>\n              <Divider/>\n\n              {/*<SeriesList series={totalSeries}/>*/}\n              {totalSeries ? totalSeriesView : (<p style={{padding: 0, textAlign: 'center'}}>nothing</p>)}\n            </List>\n          </div>\n        </Drawer>\n        {/*<Drawer*/}\n        {/*  variant=\"persistent\"*/}\n        {/*  open={visibleMainMenu}*/}\n        {/*  style={{position: 'relative', zIndex: 1}}*/}\n        {/*  onClose={this.toggleMainMenu}*/}\n        {/*>*/}\n        {/*  <div className={classes.toolbar}>*/}\n        {/*    <List dense={true}>*/}\n        {/*      <ListItem button onClick={() => this.showAppBar()}>*/}\n        {/*        <ListItemIcon><MenuIcon/></ListItemIcon>*/}\n        {/*        <ListItemText primary='Tool Bar'/>*/}\n        {/*      </ListItem>*/}\n        {/*      <ListItem button onClick={() => this.toggleFileManager()}>*/}\n        {/*        <ListItemIcon><Icon path={mdiFileCabinet} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='File Manager'/>*/}\n        {/*      </ListItem>*/}\n\n        {/*      <ListItem button onClick={() => this.toggleOpenMenu()}>*/}\n        {/*        <ListItemIcon><Icon path={mdiFolderMultiple} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='Open ...'/>*/}\n        {/*        {openMenu ? <ExpandLess/> : <ExpandMore/>}*/}\n        {/*      </ListItem>*/}\n        {/*      <Collapse in={openMenu} timeout=\"auto\" unmountOnExit>*/}\n        {/*        <List dense={true} component=\"div\">*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.showFileOpen()}>*/}\n        {/*            <ListItemIcon><Icon path={mdiFolder} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass}*/}\n        {/*                          primary={*/}\n        {/*                            <Typography type=\"body1\"*/}\n        {/*                                        style={{fontSize: '0.80em', marginLeft: '-20px'}}>File</Typography>*/}\n        {/*                          }/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenUrl()}>*/}\n        {/*            <ListItemIcon><Icon path={mdiWeb} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass}*/}\n        {/*                          primary={*/}\n        {/*                            <Typography type=\"body1\"*/}\n        {/*                                        style={{fontSize: '0.80em', marginLeft: '-20px'}}>URL</Typography>*/}\n        {/*                          }/>*/}\n        {/*          </ListItem>*/}\n        {/*          {isInputDirSupported() && !isMobile ?*/}\n        {/*            <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenFolder()}>*/}\n        {/*              <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n        {/*              <ListItemText classes={primaryClass}*/}\n        {/*                            primary={*/}\n        {/*                              <Typography type=\"body1\"*/}\n        {/*                                          style={{fontSize: '0.80em', marginLeft: '-20px'}}>Folder</Typography>*/}\n        {/*                            }/>*/}\n        {/*            </ListItem>*/}\n        {/*            : null}*/}\n        {/*          {isInputDirSupported() && !isMobile ?*/}\n        {/*            <ListItem button style={{paddingLeft: 30}} onClick={() => this.showOpenDicomdir()}>*/}\n        {/*              <ListItemIcon><Icon path={mdiFolderOpen} size={'1.0rem'} color={iconColor}/></ListItemIcon>*/}\n        {/*              <ListItemText classes={primaryClass}*/}\n        {/*                            primary={*/}\n        {/*                              <Typography type=\"body1\" style={{*/}\n        {/*                                fontSize: '0.80em',*/}\n        {/*                                marginLeft: '-20px'*/}\n        {/*                              }}>DICOMDIR</Typography>*/}\n        {/*                            }/>*/}\n        {/*            </ListItem>*/}\n        {/*            : null}*/}\n        {/*        </List>*/}\n        {/*      </Collapse>*/}\n\n        {/*      <ListItem button onClick={() => this.clear()}>*/}\n        {/*        <ListItemIcon><Icon path={mdiDelete} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='Clear All'/>*/}\n        {/*      </ListItem>*/}\n        {/*      <ListItem button onClick={this.handleLayout}>*/}\n        {/*        <ListItemIcon><Icon path={mdiViewGridPlusOutline} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='Layout'/>*/}\n        {/*      </ListItem>*/}\n        {/*      <ListItem button onClick={() => this.showSettings()}>*/}\n        {/*        <ListItemIcon><Icon path={mdiSettings} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='Settings'/>*/}\n        {/*      </ListItem>*/}\n        {/*      <Divider/>*/}\n        {/*      <ListItem button onClick={() => this.toggleToolbox()} disabled={!isOpen}>*/}\n        {/*        <ListItemIcon><Icon path={mdiChartHistogram} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='Histogram'/>*/}\n        {/*      </ListItem>*/}\n        {/*      <ListItem button onClick={() => this.toggleMpr()}*/}\n        {/*                disabled={!isOpen || !isMultipleFiles || this.mprPlane === ''}>*/}\n        {/*        <ListItemIcon><Icon path={mdiAxisArrow} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='MPR'/>*/}\n        {/*        {openMpr ? <ExpandLess/> : <ExpandMore/>}*/}\n        {/*      </ListItem>*/}\n        {/*      <Collapse in={openMpr} timeout=\"auto\" unmountOnExit>*/}\n        {/*        <List dense={true} component=\"div\">*/}\n        {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprOrthogonal()}>*/}\n        {/*            {visibleMprOrthogonal ?*/}\n        {/*              <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n        {/*                                                                color={iconColor}/></ListItemIcon> : null}*/}\n        {/*            <ListItemText*/}\n        {/*              style={visibleMprOrthogonal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n        {/*              classes={primaryClass}*/}\n        {/*              primary={*/}\n        {/*                <Typography type=\"body1\"*/}\n        {/*                            style={{fontSize: '0.80em', marginLeft: '-23px'}}>Orthogonal</Typography>*/}\n        {/*              }/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprCoronal()}>*/}\n        {/*            {visibleMprCoronal ?*/}\n        {/*              <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n        {/*                                                                color={iconColor}/></ListItemIcon> : null}*/}\n        {/*            <ListItemText*/}\n        {/*              style={visibleMprCoronal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n        {/*              classes={primaryClass}*/}\n        {/*              primary={*/}\n        {/*                <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Coronal</Typography>*/}\n        {/*              }/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprSagittal()}>*/}\n        {/*            {visibleMprSagittal ?*/}\n        {/*              <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n        {/*                                                                color={iconColor}/></ListItemIcon> : null}*/}\n        {/*            <ListItemText*/}\n        {/*              style={visibleMprSagittal ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n        {/*              classes={primaryClass}*/}\n        {/*              primary={*/}\n        {/*                <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Sagittal</Typography>*/}\n        {/*              }/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 40}} onClick={() => this.mprAxial()}>*/}\n        {/*            {visibleMprAxial ? <ListItemIcon style={{marginLeft: '-10px'}}><Icon path={mdiCheck} size={'1.0rem'}*/}\n        {/*                                                                                 color={iconColor}/></ListItemIcon> : null}*/}\n        {/*            <ListItemText*/}\n        {/*              style={visibleMprAxial ? {marginLeft: '-7px'} : {marginLeft: '40px'}}*/}\n        {/*              classes={primaryClass}*/}\n        {/*              primary={*/}\n        {/*                <Typography type=\"body1\" style={{fontSize: '0.80em', marginLeft: '-23px'}}>Axial</Typography>*/}\n        {/*              }/>*/}\n        {/*          </ListItem>*/}\n        {/*        </List>*/}\n        {/*      </Collapse>*/}\n        {/*      <ListItem button onClick={() => this.toggleImageEdit()} disabled={!isOpen}>*/}\n        {/*        <ListItemIcon><Icon path={mdiImageEdit} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='Edit'/>*/}\n        {/*        {openImageEdit ? <ExpandLess/> : <ExpandMore/>}*/}\n        {/*      </ListItem>*/}\n        {/*      <Collapse in={openImageEdit} timeout=\"auto\" unmountOnExit>*/}\n        {/*        <List dense={true} component=\"div\">*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Invert')}>*/}\n        {/*            <ListItemIcon><Icon path={mdiInvertColors} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary=\"Invert\"/>*/}\n        {/*          </ListItem>*/}\n        {/*        </List>*/}\n        {/*      </Collapse>*/}\n        {/*      <ListItem button onClick={() => this.toggleTools()} disabled={!isOpen}>*/}\n        {/*        <ListItemIcon><Icon path={mdiTools} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*        <ListItemText classes={primaryClass} primary='Tools'/>*/}\n        {/*        {openTools ? <ExpandLess/> : <ExpandMore/>}*/}\n        {/*      </ListItem>*/}\n        {/*      <Collapse in={openTools} timeout=\"auto\" unmountOnExit>*/}\n        {/*        <List dense={true} component=\"div\">*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('notool')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiCursorDefault} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='No tool'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Wwwc')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiArrowAll} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='WW/WC'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Pan')} disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiCursorPointer} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Pan'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Zoom')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiMagnify} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Zoom'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Magnify')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiCheckboxIntermediate} size={iconSize}*/}\n        {/*                                color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Magnify'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Length')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiRuler} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Length'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Probe')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiEyedropper} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Probe'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('Angle')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiAngleAcute} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Angle'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('EllipticalRoi')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiEllipse} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Elliptical Roi'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('RectangleRoi')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiRectangle} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Rectangle Roi'/>*/}\n        {/*          </ListItem>*/}\n        {/*          <ListItem button style={{paddingLeft: 30}} onClick={() => this.toolExecute('FreehandRoi')}*/}\n        {/*                    disabled={!isOpen}>*/}\n        {/*            <ListItemIcon><Icon path={mdiGesture} size={iconSize} color={iconColor}/></ListItemIcon>*/}\n        {/*            <ListItemText classes={primaryClass} primary='Freehand Roi'/>*/}\n        {/*          </ListItem>*/}\n        {/*        </List>*/}\n        {/*      </Collapse>*/}\n\n        {/*    </List>*/}\n\n        {/*    {isMultipleFiles ?*/}\n        {/*      <div>*/}\n        {/*        <Divider/>*/}\n        {/*        <div align='center'>*/}\n        {/*          <IconButton onClick={this.listOpenFilesFirstFrame} size='small'>*/}\n        {/*            <Icon path={mdiSkipBackward} size={'1.0rem'} color={iconColor}/>*/}\n        {/*          </IconButton>*/}\n        {/*          <IconButton onClick={this.listOpenFilesPreviousFrame} size='small'>*/}\n        {/*            <Icon path={mdiSkipPrevious} size={'1.0rem'} color={iconColor}/>*/}\n        {/*          </IconButton>*/}\n        {/*          <IconButton onClick={this.listOpenFilesScrolling} size='small'>*/}\n        {/*            <Icon path={this.state.listOpenFilesScrolling ? mdiPause : mdiPlay} size={'1.0rem'}*/}\n        {/*                  color={iconColor}/>*/}\n        {/*          </IconButton>*/}\n        {/*          <IconButton onClick={this.listOpenFilesNextFrame} size='small'>*/}\n        {/*            <Icon path={mdiSkipNext} size={'1.0rem'} color={iconColor}/>*/}\n        {/*          </IconButton>*/}\n        {/*          <IconButton onClick={this.listOpenFilesLastFrame} size='small'>*/}\n        {/*            <Icon path={mdiSkipForward} size={'1.0rem'} color={iconColor}/>*/}\n        {/*          </IconButton>*/}\n        {/*        </div>*/}\n        {/*        <div style={{textAlign: 'center'}}>*/}\n        {/*          <Typography type=\"body1\"*/}\n        {/*                      style={{fontSize: '0.80em'}}>{`${this.state.sliceIndex + 1} / ${sliceMax}`}</Typography>*/}\n        {/*        </div>*/}\n        {/*        <div style={{width: '130px', margin: 'auto'}}>*/}\n        {/*          <Slider*/}\n        {/*            style={{marginTop: '-4px'}}*/}\n        {/*            value={this.state.sliceIndex}*/}\n        {/*            onChange={this.handleSliceChange}*/}\n        {/*            color=\"secondary\"*/}\n        {/*            min={0}*/}\n        {/*            max={sliceMax - 1}*/}\n        {/*            step={100 / sliceMax}*/}\n        {/*          />*/}\n        {/*        </div>*/}\n        {/*      </div> : null*/}\n        {/*    }*/}\n\n        {/*  </div>*/}\n        {/*</Drawer>*/}\n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleHeader}\n          onClose={this.toggleHeader}\n        >\n          {visibleHeader ? <DicomHeader dcmViewer={dcmViewer} classes={classes} color={iconColor}/> : null}\n        </Drawer>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleMeasure}\n          onClose={this.toggleMeasure}\n        >\n          <div style={{marginTop: '48px'}}>\n            <Toolbar variant=\"dense\">\n              <Typography variant=\"subtitle1\" className={classes.title}>\n                Measurements&nbsp;&nbsp;\n              </Typography>\n              <div className={classes.grow}/>\n              <IconButton color=\"inherit\" onClick={this.saveMeasure} edge=\"end\">\n                <Icon path={mdiContentSaveOutline} size={iconSize} color={iconColor}/>\n              </IconButton>\n              <IconButton color=\"inherit\" onClick={this.clearMeasure} edge=\"end\">\n                <Icon path={mdiTrashCanOutline} size={iconSize} color={iconColor}/>\n              </IconButton>\n            </Toolbar>\n            <div>\n              {isOpen ? <Measurements dcmViewer={dcmViewer} toolRemove={this.toolRemove} classes={classes}/> : null}\n            </div>\n          </div>\n        </Drawer>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor='right'\n          open={visibleToolbox}\n          onClose={this.toggleToolbox}\n        >\n          <div style={{marginTop: '48px'}}>\n            <div>\n              {isOpen ? <Histogram key={this.getFileName(dcmViewer)}/> : null}\n            </div>\n          </div>\n        </Drawer>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor={getSettingsDicomdirView()}\n          open={visibleDicomdir}\n          onClose={this.toggleDicomdir}\n        >\n          <div>\n            <div>\n              {visibleDicomdir ?\n                <Dicomdir onOpenFile={this.handleOpenFileDicomdir} onOpenFs={this.handleOpenSandboxFs}/> : null}\n            </div>\n          </div>\n        </Drawer>\n\n        <Drawer\n          variant=\"persistent\"\n          anchor={getSettingsFsView()}\n          open={visibleFileManager}\n          onClose={this.toggleFileManager}\n        >\n          <div>\n            <div>\n              {visibleFileManager ?\n                <FsUI\n                  onOpen={this.handleOpenSandboxFs}\n                  onOpenImage={this.handleOpenImage}\n                  onOpenMultipleFilesCompleted={this.openMultipleFilesCompleted}\n                  onOpenDicomdir={this.handleOpenFsDicomdir}\n                  color={iconColor}\n                />\n                : null}\n            </div>\n          </div>\n        </Drawer>\n\n        {visibleSettings ? <Settings onClose={this.hideSettings}/> : null}\n\n        {visibleAbout ? <AboutDlg onClose={this.showAbout}/> : null}\n\n        {visibleDownloadZipDlg ? <DownloadZipDlg onClose={this.hideDownloadZipDlg} url={this.url}/> : null}\n\n        {visibleOpenMultipleFilesDlg ?\n          <OpenMultipleFilesDlg onClose={this.hideOpenMultipleFilesDlg} files={this.files} origin={'local'}/> : null}\n\n        <Dialog\n          open={visibleClearMeasureDlg}\n          onClose={this.hideClearMeasureDlg}\n        >\n          <DialogTitle>{\"Are you sure to remove all the measurements?\"}</DialogTitle>\n          <DialogActions>\n            <Button onClick={this.hideClearMeasureDlg}>\n              Cancel\n            </Button>\n            <Button onClick={this.confirmClearMeasureDlg} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={visibleZippedFileDlg}\n          onClose={this.hideZippedFileDlg}\n        >\n          <DialogTitle>{\"This is a zipped file, would you import into sandbox file system?\"}</DialogTitle>\n          <DialogActions>\n            <Button onClick={this.hideZippedFileDlg}>\n              Cancel\n            </Button>\n            <Button onClick={this.confirmZippedFileDlg} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={this.state.visibleOpenUrl}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">{\"Open URL\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Insert an URL to download a DICOM or image file:\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"id-open-url\"\n              inputRef={input => (this.openUrlField = input)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.hideOpenUrl(false)}>\n              Cancel\n            </Button>\n            <Button onClick={() => this.hideOpenUrl(true)} autoFocus>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/*<Popover*/}\n        {/*  id={'id-layout'}*/}\n        {/*  open={visibleLayout}*/}\n        {/*  anchorEl={this.state.anchorElLayout}*/}\n        {/*  onClose={this.closeLayout}*/}\n        {/*  anchorOrigin={{*/}\n        {/*    vertical: 'center',*/}\n        {/*    horizontal: 'bottom',*/}\n        {/*  }}*/}\n        {/*  transformOrigin={{*/}\n        {/*    vertical: 'bottom',*/}\n        {/*    horizontal: 'left',*/}\n        {/*  }}*/}\n        {/*>*/}\n        {/*  <LayoutTool*/}\n        {/*    row={this.props.layout[0] - 1}*/}\n        {/*    col={this.props.layout[1] - 1}*/}\n        {/*    onChange={this.changeLayout}*/}\n        {/*  />*/}\n        {/*</Popover>*/}\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={visibleVolumeBuilding}\n          autoHideDuration={6000}\n          message=\"Volume building, wait please ...\"\n        />\n\n        <div style={{height: 'calc(100vh - 48px)'}}>\n          {this.buildLayoutGrid()}\n        </div>\n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_open\"\n            style={{display: \"none\"}}\n            ref={this.fileOpen}\n            onChange={e => this.handleOpenLocalFs(e.target.files)}\n            multiple\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_dicomdir\"\n            style={{display: \"none\"}}\n            ref={this.openDicomdir}\n            onChange={e => this.handleOpenDicomdir(e.target.files)}\n            webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"file\"\n            id=\"file_folder\"\n            style={{display: \"none\"}}\n            ref={this.openFolder}\n            onChange={e => this.handleOpenFolder(e.target.files)}\n            webkitdirectory=\"\" mozdirectory=\"\" directory=\"\" multiple\n          />\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    localFileStore: state.localFileStore,\n    files: state.files,\n    isOpen: state.isOpen,\n    tool: state.tool,\n    activeDcmIndex: state.activeDcmIndex,\n    measurements: state.measurements,\n    layout: state.layout,\n    dicomdir: state.dicomdir,\n    fsZippedFile: state.fsZippedFile,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearingStore: () => dispatch(clearStore()),\n    setLocalFileStore: (file) => dispatch(localFileStore(file)),\n    toolStore: (tool) => dispatch(dcmTool(tool)),\n    isOpenStore: (value) => dispatch(dcmIsOpen(value)),\n    setActiveDcm: (dcm) => dispatch(activeDcm(dcm)),\n    setActiveDcmIndex: (index) => dispatch(activeDcmIndex(index)),\n    setActiveMeasurements: (measurements) => dispatch(activeMeasurements(measurements)),\n    setLayoutStore: (row, col) => dispatch(setLayout(row, col)),\n    setDicomdirStore: (dicomdir) => dispatch(setDicomdir(dicomdir)),\n    setFsZippedFile: (file) => dispatch(setZippedFile(file)),\n    setVolumeStore: (file) => dispatch(setVolume(file)),\n    setFilesStore: (files) => dispatch(filesStore(files)),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(App))\n"]},"metadata":{},"sourceType":"module"}