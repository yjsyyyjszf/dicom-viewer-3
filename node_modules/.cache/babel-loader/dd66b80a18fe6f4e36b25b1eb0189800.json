{"ast":null,"code":"import _slicedToArray from \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\private\\\\projects\\\\udv\\\\u-dicom-viewer-master-1\\\\u-dicom-viewer-master\\\\src\\\\components\\\\Settings.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { getSettingsSaveAs, setSettingsSaveAs, getSettingsSaveInto, setSettingsSaveInto, getSettingsDcmHeader, setSettingsDcmHeader, getSettingsOverlay, setSettingsOverlay, getSettingsFsView, setSettingsFsView, getSettingsDicomdirView, setSettingsDicomdirView, getSettingsMprInterpolation, setSettingsMprInterpolation } from '../functions';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  formLabel: {\n    fontSize: '0.85em'\n  },\n  radioControl: {\n    size: 'small'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    fontSize: '0.95em'\n  }\n}));\n/*const Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"right\" ref={ref} {...props} />;\n})*/\n\nconst Settings = ({\n  onClose\n}) => {\n  let saveAs = getSettingsSaveAs();\n  let saveInto = getSettingsSaveInto();\n  let exportAs = getSettingsDcmHeader();\n  let overlay = getSettingsOverlay();\n  let fsView = getSettingsFsView();\n  let dicomdirView = getSettingsDicomdirView();\n  let mprInterpolation = getSettingsMprInterpolation(); //const isIndexedDB = false // 'indexedDB' in window\n\n  const handleChangeSaveAs = event => {\n    setState(_objectSpread({}, state, {\n      'saveAs': event.target.value\n    }));\n    setSettingsSaveAs(event.target.value);\n  };\n\n  const handleChangeSaveInto = event => {\n    setState(_objectSpread({}, state, {\n      'saveInto': event.target.value\n    }));\n    setSettingsSaveInto(event.target.value);\n  };\n\n  const handleChangeExportAs = event => {\n    setState(_objectSpread({}, state, {\n      'exportAs': event.target.value\n    }));\n    setSettingsDcmHeader(event.target.value);\n  };\n\n  const handleChangeOverlay = event => {\n    setState(_objectSpread({}, state, {\n      'overlay': event.target.checked\n    }));\n    setSettingsOverlay(event.target.checked);\n  };\n\n  const handleChangeFsView = event => {\n    setState(_objectSpread({}, state, {\n      'fsView': event.target.value\n    }));\n    setSettingsFsView(event.target.value);\n  };\n\n  const handleChangeDicomdirView = event => {\n    setState(_objectSpread({}, state, {\n      'dicomdirView': event.target.value\n    }));\n    setSettingsDicomdirView(event.target.value);\n  };\n\n  const handleChangeMprInterpolation = event => {\n    setState(_objectSpread({}, state, {\n      'mprInterpolation': event.target.value\n    }));\n    setSettingsMprInterpolation(event.target.value);\n  };\n\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    saveAs: saveAs,\n    saveInto: saveInto,\n    exportAs: exportAs,\n    overlay: overlay,\n    fsView: fsView,\n    dicomdirView: dicomdirView,\n    mprInterpolation: mprInterpolation\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    fullScreen: true,\n    open: true,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" \", React.createElement(AppBar, {\n    className: classes.appBar,\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    variant: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: onClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Settings\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: state.overlay,\n      onChange: handleChangeOverlay,\n      value: \"overlay\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }),\n    label: \"Show overlay Information\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.formLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Open sandbox file system from:\"), React.createElement(RadioGroup, {\n    size: \"small\",\n    \"aria-label\": \"filesystem\",\n    name: \"filesystem\",\n    value: state.fsView,\n    onChange: handleChangeFsView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"left\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }),\n    label: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"right\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }),\n    label: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"bottom\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }),\n    label: \"bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.formLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Open DICOMDIR panel from:\"), React.createElement(RadioGroup, {\n    size: \"small\",\n    \"aria-label\": \"dicomdir\",\n    name: \"dicomdir\",\n    value: state.dicomdirView,\n    onChange: handleChangeDicomdirView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"left\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }),\n    label: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"right\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }),\n    label: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"bottom\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }),\n    label: \"bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.formLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Save screenshot as:\"), React.createElement(RadioGroup, {\n    \"aria-label\": \"saveas\",\n    name: \"saveas\",\n    value: state.saveAs,\n    onChange: handleChangeSaveAs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"jpeg\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }),\n    label: \"JPEG\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"png\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }),\n    label: \"PNG\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.formLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Save screenshot into:\"), React.createElement(RadioGroup, {\n    \"aria-label\": \"saveinto\",\n    name: \"saveinto\",\n    value: state.saveInto,\n    onChange: handleChangeSaveInto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"local\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }),\n    label: \"local file system\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"sandbox\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }),\n    label: \"sandbox file system\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.formLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Export Dicom header as:\"), React.createElement(RadioGroup, {\n    \"aria-label\": \"exportas\",\n    name: \"exportas\",\n    value: exportAs,\n    onChange: handleChangeExportAs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"json\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }),\n    label: \"JSON\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"csv\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }),\n    label: \"CSV\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    className: classes.formLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"MPR interpolation method:\"), React.createElement(RadioGroup, {\n    \"aria-label\": \"mprinterpolation\",\n    name: \"mprinterpolation\",\n    value: mprInterpolation,\n    onChange: handleChangeMprInterpolation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"no\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }),\n    label: \"No interpolation (duplicate planes)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"weightedlinear\",\n    control: React.createElement(Radio, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }),\n    label: \"Weighted linear interpolation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })))))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["E:/private/projects/udv/u-dicom-viewer-master-1/u-dicom-viewer-master/src/components/Settings.js"],"names":["React","makeStyles","AppBar","Checkbox","CloseIcon","Dialog","FormControlLabel","FormControl","FormLabel","IconButton","Radio","RadioGroup","Toolbar","Typography","getSettingsSaveAs","setSettingsSaveAs","getSettingsSaveInto","setSettingsSaveInto","getSettingsDcmHeader","setSettingsDcmHeader","getSettingsOverlay","setSettingsOverlay","getSettingsFsView","setSettingsFsView","getSettingsDicomdirView","setSettingsDicomdirView","getSettingsMprInterpolation","setSettingsMprInterpolation","useStyles","theme","appBar","position","formControl","margin","spacing","formLabel","fontSize","radioControl","size","title","marginLeft","flex","Settings","onClose","saveAs","saveInto","exportAs","overlay","fsView","dicomdirView","mprInterpolation","handleChangeSaveAs","event","setState","state","target","value","handleChangeSaveInto","handleChangeExportAs","handleChangeOverlay","checked","handleChangeFsView","handleChangeDicomdirView","handleChangeMprInterpolation","classes","useState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Dialog from '@material-ui/core/Dialog'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport IconButton from '@material-ui/core/IconButton'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { \n  getSettingsSaveAs, \n  setSettingsSaveAs, \n  getSettingsSaveInto,\n  setSettingsSaveInto,\n  getSettingsDcmHeader, \n  setSettingsDcmHeader, \n  getSettingsOverlay, \n  setSettingsOverlay,\n  getSettingsFsView,\n  setSettingsFsView,\n  getSettingsDicomdirView,\n  setSettingsDicomdirView,\n  getSettingsMprInterpolation,\n  setSettingsMprInterpolation,\n} from '../functions'\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  formLabel: {\n    fontSize: '0.85em',\n  },\n  radioControl: {\n    size: 'small',\n  },  \n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    fontSize: '0.95em',\n  },\n}))\n\n/*const Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"right\" ref={ref} {...props} />;\n})*/\n\nconst Settings = ({ onClose }) => {\n  \n  let saveAs = getSettingsSaveAs()\n  let saveInto = getSettingsSaveInto()\n  let exportAs = getSettingsDcmHeader()\n  let overlay = getSettingsOverlay()\n  let fsView = getSettingsFsView()\n  let dicomdirView = getSettingsDicomdirView()\n  let mprInterpolation = getSettingsMprInterpolation()\n\n  //const isIndexedDB = false // 'indexedDB' in window\n  \n  const handleChangeSaveAs = event => {\n    setState({ ...state, 'saveAs': event.target.value })\n    setSettingsSaveAs(event.target.value)\n  }\n  \n  const handleChangeSaveInto = event => {\n    setState({ ...state, 'saveInto': event.target.value })\n    setSettingsSaveInto(event.target.value)\n  }\n\n  const handleChangeExportAs = event => {\n    setState({ ...state, 'exportAs': event.target.value })\n    setSettingsDcmHeader(event.target.value)\n  }\n\n  const handleChangeOverlay = event => {\n    setState({ ...state, 'overlay': event.target.checked })\n    setSettingsOverlay(event.target.checked)\n  }\n\n  const handleChangeFsView = event => {\n    setState({ ...state, 'fsView': event.target.value })\n    setSettingsFsView(event.target.value)\n  }\n\n  const handleChangeDicomdirView = event => {\n    setState({ ...state, 'dicomdirView': event.target.value })\n    setSettingsDicomdirView(event.target.value)\n  }  \n\n  const handleChangeMprInterpolation = event => {\n    setState({ ...state, 'mprInterpolation': event.target.value })\n    setSettingsMprInterpolation(event.target.value)\n  }  \n  const classes = useStyles()\n\n  const [state, setState] = React.useState({\n    saveAs: saveAs,\n    saveInto: saveInto,\n    exportAs: exportAs,\n    overlay: overlay,\n    fsView: fsView,\n    dicomdirView: dicomdirView,\n    mprInterpolation: mprInterpolation,\n  })\n\n  return (\n    <div>\n      <Dialog fullScreen open={true} onClose={onClose}> {/* TransitionComponent={Transition} */}\n        <AppBar className={classes.appBar} elevation={0}>\n          <Toolbar variant=\"dense\">\n            <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Settings\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div>\n          <div>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormControlLabel\n              control={\n                <Checkbox \n                  checked={state.overlay} \n                  onChange={handleChangeOverlay}\n                  value=\"overlay\" \n                  size='small'\n                />\n              }\n              label=\"Show overlay Information\"\n            />\n          </FormControl>\n          </div>\n          <div>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\" className={classes.formLabel}>Open sandbox file system from:</FormLabel>\n            <RadioGroup size='small' aria-label=\"filesystem\" name=\"filesystem\" value={state.fsView} onChange={handleChangeFsView}>\n              <FormControlLabel value=\"left\" control={<Radio size='small' />} label=\"left\" />\n              <FormControlLabel value=\"right\" control={<Radio size='small' />} label=\"right\" />\n              <FormControlLabel value=\"bottom\" control={<Radio size='small' />} label=\"bottom\" />\n            </RadioGroup>\n          </FormControl>    \n          </div>\n          <div>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\" className={classes.formLabel}>Open DICOMDIR panel from:</FormLabel>\n            <RadioGroup size='small' aria-label=\"dicomdir\" name=\"dicomdir\" value={state.dicomdirView} onChange={handleChangeDicomdirView}>\n              <FormControlLabel value=\"left\" control={<Radio size='small' />} label=\"left\" />\n              <FormControlLabel value=\"right\" control={<Radio size='small' />} label=\"right\" />\n              <FormControlLabel value=\"bottom\" control={<Radio size='small' />} label=\"bottom\" />\n            </RadioGroup>\n          </FormControl>                    \n          </div>\n          <div>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\" className={classes.formLabel}>Save screenshot as:</FormLabel>\n            <RadioGroup aria-label=\"saveas\" name=\"saveas\" value={state.saveAs} onChange={handleChangeSaveAs}>\n              <FormControlLabel value=\"jpeg\" control={<Radio size='small' />} label=\"JPEG\" />\n              <FormControlLabel value=\"png\" control={<Radio size='small' />} label=\"PNG\" />\n            </RadioGroup>\n          </FormControl>\n          </div>\n          <div>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\" className={classes.formLabel}>Save screenshot into:</FormLabel>\n            <RadioGroup aria-label=\"saveinto\" name=\"saveinto\" value={state.saveInto} onChange={handleChangeSaveInto}>\n              <FormControlLabel value=\"local\" control={<Radio size='small' />} label=\"local file system\" />\n              <FormControlLabel value=\"sandbox\" control={<Radio size='small' />} label=\"sandbox file system\" />\n            </RadioGroup>\n          </FormControl>          \n          </div>\n          <div>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\" className={classes.formLabel}>Export Dicom header as:</FormLabel>\n            <RadioGroup aria-label=\"exportas\" name=\"exportas\" value={exportAs} onChange={handleChangeExportAs}>\n              <FormControlLabel value=\"json\" control={<Radio size='small' />} label=\"JSON\" />\n              <FormControlLabel value=\"csv\" control={<Radio size='small' />} label=\"CSV\" />\n            </RadioGroup>\n          </FormControl> \n          </div> \n          <div>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\" className={classes.formLabel}>MPR interpolation method:</FormLabel>\n            <RadioGroup aria-label=\"mprinterpolation\" name=\"mprinterpolation\" value={mprInterpolation} onChange={handleChangeMprInterpolation}>\n              <FormControlLabel value=\"no\" control={<Radio size='small' />} label=\"No interpolation (duplicate planes)\" />\n              <FormControlLabel value=\"weightedlinear\" control={<Radio size='small' />} label=\"Weighted linear interpolation\" />\n            </RadioGroup>\n          </FormControl> \n          </div>            \n        </div>\n      </Dialog>\n    </div>\n  )\n\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}