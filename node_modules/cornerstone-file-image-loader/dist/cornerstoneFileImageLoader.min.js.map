{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./externalModules.js","webpack://[name]/./arrayBufferToImage.js","webpack://[name]/./createImage.js","webpack://[name]/./loadImage.js","webpack://[name]/./fileManager.js","webpack://[name]/./index.js","webpack://[name]/./registerLoaders.js","webpack://[name]/./imageToImage.js","webpack://[name]/./canvasToImage.js","webpack://[name]/./dicomToImage.js","webpack://[name]/./createImageCustom.js","webpack://[name]/./parseImageId.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","m","cornerstone","external","cs","arrayBuffer","Promise","resolve","reject","image","Image","arrayBufferView","Uint8Array","blob","Blob","urlCreator","URL","webkitURL","imageUrl","createObjectURL","src","onload","revokeObjectURL","onerror","error","imageId","rows","naturalHeight","columns","naturalWidth","minPixelValue","maxPixelValue","slope","intercept","windowCenter","windowWidth","render","renderWebImage","getPixelData","context","lastImageIdDrawn","canvas","getContext","height","width","drawImage","getImageData","data","getCanvas","getImage","color","rgba","columnPixelSpacing","undefined","rowPixelSpacing","invert","sizeInBytes","document","createElement","loadImage","parsedImageId","fileIndex","parseInt","url","file","fileManager","get","scheme","promise","fileReader","FileReader","e","imageAsArrayBuffer","target","result","then","imageObject","readAsArrayBuffer","start","Date","getTime","loadEnd","end","loadTimeInMS","totalTimeInMS","configure","opts","files","add","push","addBuffer","addImage","addCanvas","addCustom","index","remove","purge","cornerstoneFileImageLoader","arrayBufferToImage","createImage","registerImageLoader","toDataURL","obj","customObj","pixelData","modalityLUT","voiLUT","firstColonIndex","indexOf","substring","frameIndex","frame","frameStr","substr","c","d","name","getter","o","Object","defineProperty","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","call","p","s","moduleId","i","l","modules"],"mappings":"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","file":"cornerstoneFileImageLoader.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneFileImageLoader\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneFileImageLoader\"] = factory();\n\telse\n\t\troot[\"cornerstoneFileImageLoader\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import registerLoaders from './registerLoaders.js';\r\n\r\nlet cornerstone;\r\n\r\nconst external = {\r\n  set cornerstone (cs) {\r\n    cornerstone = cs;\r\n\r\n    registerLoaders(cornerstone);\r\n  },\r\n  get cornerstone () {\r\n    return cornerstone;\r\n  }\r\n};\r\n\r\nexport { external };\r\n","/**\r\n * Convert array buffer to image. Returns a promise that resolves to an Image object for the bytes in arrayBuffer\r\n *\r\n * @param arrayBuffer - arrayBuffer with bytes for a web image (e.g. JPEG, PNG, etc)\r\n * @returns {Promise} Promise that resolves to an Image object\r\n */\r\nexport default function (arrayBuffer) {\r\n  return new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    const arrayBufferView = new Uint8Array(arrayBuffer);\r\n    const blob = new Blob([arrayBufferView]);\r\n    const urlCreator = window.URL || window.webkitURL;\r\n    const imageUrl = urlCreator.createObjectURL(blob);\r\n\r\n    image.src = imageUrl;\r\n    image.onload = () => {\r\n      resolve(image);\r\n      urlCreator.revokeObjectURL(imageUrl);\r\n    };\r\n\r\n    image.onerror = (error) => {\r\n      urlCreator.revokeObjectURL(imageUrl);\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { external } from './externalModules.js';\r\n\r\nconst canvas = document.createElement('canvas');\r\nlet lastImageIdDrawn;\r\n\r\n/**\r\n * creates a cornerstone Image object for the specified Image and imageId\r\n *\r\n * @param image - An Image\r\n * @param imageId - the imageId for this image\r\n * @returns Cornerstone Image Object\r\n */\r\nexport default function (image, imageId) {\r\n  // extract the attributes we need\r\n  const rows = image.naturalHeight;\r\n  const columns = image.naturalWidth;\r\n\r\n  function getPixelData () {\r\n    const imageData = getImageData();\r\n\r\n\r\n    return imageData.data;\r\n  }\r\n\r\n  function getImageData () {\r\n    let context;\r\n\r\n    if (lastImageIdDrawn === imageId) {\r\n      context = canvas.getContext('2d');\r\n    } else {\r\n      canvas.height = image.naturalHeight;\r\n      canvas.width = image.naturalWidth;\r\n      context = canvas.getContext('2d');\r\n      context.drawImage(image, 0, 0);\r\n      lastImageIdDrawn = imageId;\r\n    }\r\n\r\n    return context.getImageData(0, 0, image.naturalWidth, image.naturalHeight);\r\n  }\r\n\r\n  function getCanvas () {\r\n    if (lastImageIdDrawn === imageId) {\r\n      return canvas;\r\n    }\r\n\r\n    canvas.height = image.naturalHeight;\r\n    canvas.width = image.naturalWidth;\r\n    const context = canvas.getContext('2d');\r\n\r\n    context.drawImage(image, 0, 0);\r\n    lastImageIdDrawn = imageId;\r\n\r\n    return canvas;\r\n  }\r\n\r\n  // Extract the various attributes we need\r\n  return {\r\n    imageId,\r\n    minPixelValue: 0,\r\n    maxPixelValue: 255,\r\n    slope: 1,\r\n    intercept: 0,\r\n    windowCenter: 128,\r\n    windowWidth: 255,\r\n    render: external.cornerstone.renderWebImage,\r\n    getPixelData,\r\n    getCanvas,\r\n    getImage: () => image,\r\n    rows,\r\n    columns,\r\n    height: rows,\r\n    width: columns,\r\n    color: true,\r\n    rgba: false,\r\n    columnPixelSpacing: undefined,\r\n    rowPixelSpacing: undefined,\r\n    invert: false,\r\n    sizeInBytes: rows * columns * 4\r\n  };\r\n}\r\n","import { external } from './externalModules.js';\r\nimport arrayBufferToImage from './arrayBufferToImage.js';\r\nimport imageToImage from './imageToImage.js';\r\nimport canvasToImage from './canvasToImage.js';\r\nimport dicomCanvasToImage from './dicomToImage.js';\r\nimport createImage from './createImage.js';\r\nimport createImageCustom from './createImageCustom.js';\r\nimport parseImageId from './parseImageId.js';\r\nimport fileManager from './fileManager.js';\r\n\r\n//\r\n// This is a Cornerstone image loader for images (PNG, JPG) using the HTML5 File API \r\n//\r\n\r\nlet options = {\r\n\r\n};\r\n\r\n// Loads an image from a HTML5 API file to an image\r\nexport function loadImage (imageId) {\r\n  const parsedImageId = parseImageId(imageId);\r\n  const fileIndex = parseInt(parsedImageId.url, 10);\r\n  const file = fileManager.get(fileIndex);\r\n\r\n  if (parsedImageId.scheme === 'imagefile') {\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = (e) => {\r\n        const imageAsArrayBuffer = e.target.result;\r\n        const imagePromise = arrayBufferToImage(imageAsArrayBuffer);\r\n        imagePromise.then((image) => {\r\n          const imageObject = createImage(image, imageId);\r\n          resolve(imageObject);\r\n        }, reject);\r\n      };\r\n\r\n      fileReader.onerror = reject;\r\n\r\n      fileReader.readAsArrayBuffer(file);\r\n    });\r\n\r\n    return {\r\n      promise\r\n    };   \r\n\r\n  } else if (parsedImageId.scheme === 'imagebuffer') {\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      if (file !== null && file !== undefined) { // file is an ArrayBuffer\r\n        const imageAsArrayBuffer = file;\r\n        const imagePromise = arrayBufferToImage(imageAsArrayBuffer);\r\n        imagePromise.then((image) => {\r\n          const imageObject = createImage(image, imageId);\r\n          resolve(imageObject);\r\n        }, reject);\r\n      } else {\r\n        reject('buffer is null or undefined');\r\n      }\r\n    });\r\n\r\n    return {\r\n      promise\r\n    };   \r\n\t\r\n  } else if (parsedImageId.scheme === 'imageimage') {\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      if (file !== null && file !== undefined) { // file is an image\r\n        const imagePromise = imageToImage(file);\r\n        imagePromise.then((image) => {\r\n          const imageObject = createImage(image, imageId);\r\n          resolve(imageObject);\r\n        }, reject);\r\n      } else {\r\n        reject('image is null or undefined');\r\n      }\r\n    });\r\n\r\n    return {\r\n      promise\r\n    };   \r\n    \r\n  } else if (parsedImageId.scheme === 'imagecanvas') {\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n      if (file !== null && file !== undefined) { // file is a canvas\r\n        const imagePromise = canvasToImage(file);\r\n        imagePromise.then((image) => {\r\n          const imageObject = createImage(image, imageId);\r\n          resolve(imageObject);\r\n        }, reject);\r\n      } else {\r\n        reject('canvas is null or undefined');\r\n      }\r\n    });\r\n\r\n    return {\r\n      promise\r\n    };   \r\n    \r\n  } else if (parsedImageId.scheme === 'imagecustom') {\r\n    \r\n    const start = new Date().getTime();\r\n    const promise = new Promise((resolve, reject) => {\r\n      const loadEnd = new Date().getTime();\r\n      if (file !== null && file !== undefined) { // file is an custom object, with a cornerstone Image object and a pixelData array\r\n        let imagePromise = createImageCustom(imageId, file);\r\n        imagePromise.then(image => {\r\n          const end = new Date().getTime();\r\n\r\n          image.loadTimeInMS = loadEnd - start;\r\n          image.totalTimeInMS = end - start;  \r\n          \r\n          resolve(image);\r\n        }, reject);\r\n      } else {\r\n        reject('custom object is null or undefined');\r\n      }\r\n    });\r\n\r\n    return {\r\n      promise\r\n    };   \r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport function configure (opts) {\r\n  options = opts;\r\n}\r\n","let files = [];\n\nfunction add (file) {\n  const fileIndex = files.push(file);\n\n  return `imagefile:${fileIndex - 1}`;\n}\n\nfunction addBuffer (file) {\n  const fileIndex = files.push(file);\n\n  return `imagebuffer:${fileIndex - 1}`;\n}\n\nfunction addImage (file) {\n  const fileIndex = files.push(file);\n\n  return `imageimage:${fileIndex - 1}`;\n}\n\nfunction addCanvas (file) {\n  const fileIndex = files.push(file);\n\n  return `imagecanvas:${fileIndex - 1}`;\n}\n\nfunction addCustom (file) {\n  const fileIndex = files.push(file);\n\n  return `imagecustom:${fileIndex - 1}`;\n}\n\nfunction get (index) {\n  return files[index];\n}\n\nfunction remove (index) {\n  files[index] = undefined;\n}\n\nfunction purge () {\n  files = [];\n}\n\nexport default {\n  add,\n  addBuffer,\n  addImage,\n  addCanvas,\n  addCustom,\n  get,\n  remove,\n  purge\n};\n","import arrayBufferToImage from './arrayBufferToImage.js';\r\nimport createImage from './createImage.js';\r\nimport fileManager from './fileManager.js';\r\nimport { loadImage, configure } from './loadImage.js';\r\nimport { external } from './externalModules.js';\r\n\r\nconst cornerstoneFileImageLoader = {\r\n  arrayBufferToImage,\r\n  createImage,\r\n  loadImage,\r\n  configure,\r\n  external,\r\n  fileManager\r\n};\r\n\r\nexport {\r\n  arrayBufferToImage,\r\n  createImage,\r\n  loadImage,\r\n  configure,\r\n  external,\r\n  fileManager\r\n};\r\n\r\nexport default cornerstoneFileImageLoader;\r\n","import { loadImage } from './loadImage.js';\r\n\r\nexport default function (cornerstone) {\r\n  // Register the file prefixes so we can use HTML5 File API to work with local files\r\n  cornerstone.registerImageLoader('imagefile', loadImage);\r\n  cornerstone.registerImageLoader('imagebuffer', loadImage);\r\n  cornerstone.registerImageLoader('imageimage', loadImage);\r\n  cornerstone.registerImageLoader('imagecanvas', loadImage);\r\n  cornerstone.registerImageLoader('imagecustom', loadImage);\r\n}\r\n","/**\r\n * Convert array buffer to image. Returns a promise that resolves to an Image object for the bytes in arrayBuffer\r\n *\r\n * @param arrayBuffer - arrayBuffer with bytes for a web image (e.g. JPEG, PNG, etc)\r\n * @returns {Promise} Promise that resolves to an Image object\r\n */\r\nexport default function (image) {\r\n  return new Promise((resolve, reject) => {\r\n    image.onload = () => {\r\n      resolve(image);\r\n    };\r\n\r\n    image.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","/**\r\n * Convert array buffer to image. Returns a promise that resolves to an Image object for the bytes in arrayBuffer\r\n *\r\n * @param arrayBuffer - arrayBuffer with bytes for a web image (e.g. JPEG, PNG, etc)\r\n * @returns {Promise} Promise that resolves to an Image object\r\n */\r\nexport default function (canvas) {\r\n  return new Promise((resolve, reject) => {\r\n    let image = new Image();\r\n    image.src = canvas.toDataURL(\"image/jpeg\");\r\n    image.onload = () => {\r\n      resolve(image);\r\n    };\r\n\r\n    image.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","/**\r\n * Convert array buffer to image. Returns a promise that resolves to an Image object for the bytes in arrayBuffer\r\n *\r\n * @param obj - is an object with a dataSet and a pixelData array\r\n * @returns {Promise} Promise that resolves to an Image object\r\n */\r\nexport default function (obj) {\r\n  return new Promise((resolve, reject) => {\r\n    let image = new Image();\r\n\timage.src = canvas.toDataURL(\"image/jpeg\");\r\n    image.onload = () => {\r\n      resolve(image);\r\n    };\r\n\r\n    image.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import { external } from './externalModules.js';\r\n\r\n/**\r\n * creates a cornerstone Image object for the specified custom object\r\n *\r\n * @param imageId - the imageId for this image\r\n * @param customObj - a custom image object\r\n * @returns Cornerstone Image Object\r\n */\r\nexport default function (imageId, customObj) {\r\n  // extract the attributes we need\r\n  const rows = customObj.rows;\r\n  const columns = customObj.columns;\r\n   \r\n  let image;\r\n  \r\n  // Extract the various attributes we need\r\n  image = {\r\n    imageId,\r\n    minPixelValue: customObj.image.minPixelValue,\r\n    maxPixelValue: customObj.image.maxPixelValue,\r\n    slope: customObj.image.slope,\r\n    intercept: customObj.image.intercept,\r\n    windowCenter: customObj.image.windowCenter,\r\n    windowWidth: customObj.image.windowWidth,\r\n    rows,\r\n    columns,\r\n    height: rows,\r\n    width: columns,\r\n    color: customObj.image.color,\r\n    rgba: customObj.image.rgba,\r\n    columnPixelSpacing: customObj.image.columnPixelSpacing,\r\n    rowPixelSpacing: customObj.image.rowPixelSpacing,\r\n    invert: customObj.image.invert,\r\n    sizeInBytes: rows * columns * 4\r\n\t};    \r\n    \r\n  image.getPixelData = () => customObj.pixelData;\r\n  image.modalityLUT = customObj.image.modalityLUT;\r\n  image.voiLUT = customObj.image.voiLUT;\r\n  image.data = customObj.image.data;\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    resolve(image);\r\n  });\r\n}\r\n","function parseImageId (imageId) {\n  // build a url by parsing out the url scheme and frame index from the imageId\n  const firstColonIndex = imageId.indexOf(':');\n  let url = imageId.substring(firstColonIndex + 1);\n  const frameIndex = url.indexOf('frame=');\n  let frame;\n\n  if (frameIndex !== -1) {\n    const frameStr = url.substr(frameIndex + 6);\n\n    frame = parseInt(frameStr, 10);\n    url = url.substr(0, frameIndex - 1);\n  }\n\n  return {\n    scheme: imageId.substr(0, firstColonIndex),\n    url,\n    frame\n  };\n}\n\nexport default parseImageId;\n"],"sourceRoot":""}